[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jaydencjs"},"content":"# main.Duke project template","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"jaydencjs"},"content":"3. After that, locate the `src/main/java/main.Duke.java` file, right-click it, and choose `Run main.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jaydencjs":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"jaydencjs"},"content":"    mainClassName \u003d \"main.Duke\"","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jaydencjs":1,"-":45}},{"path":"src/main/java/exception/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaydencjs"},"content":"package exception;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"jaydencjs"},"content":"public class InvalidInputException extends Exception{","lastModifiedDate":"2022-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    public String getMessage() {","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"        return \"What are you trying to here?? Please review your input.\";","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"jaydencjs"},"content":"    ","lastModifiedDate":"2022-02-20"},{"lineNumber":9,"author":{"gitId":"jaydencjs"},"content":"}","lastModifiedDate":"2022-02-20"}],"authorContributionMap":{"jaydencjs":5,"-":4}},{"path":"src/main/java/file/Data.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaydencjs"},"content":"package file;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"jaydencjs"},"content":"import model.*;","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"jaydencjs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"jaydencjs"},"content":"import java.io.File;","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"jaydencjs"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"jaydencjs"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"jaydencjs"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"jaydencjs"},"content":"public class Data {","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"jaydencjs"},"content":"    private static String filePath \u003d \"data.txt\";","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"jaydencjs"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"jaydencjs"},"content":"     * Read the file based on the file path","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"jaydencjs"},"content":"     * Creating the task based on the task category","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"jaydencjs"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"jaydencjs"},"content":"     * @param taskList Existing task array to be added","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"jaydencjs"},"content":"     * @return Updated task array","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"jaydencjs"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"jaydencjs"},"content":"    public static ArrayList\u003cTask\u003e readFile(ArrayList\u003cTask\u003e taskList){","lastModifiedDate":"2022-03-05"},{"lineNumber":22,"author":{"gitId":"jaydencjs"},"content":"        File myObj \u003d new File(filePath);","lastModifiedDate":"2022-03-05"},{"lineNumber":23,"author":{"gitId":"jaydencjs"},"content":"        try {","lastModifiedDate":"2022-03-05"},{"lineNumber":24,"author":{"gitId":"jaydencjs"},"content":"            if (!myObj.createNewFile()) {","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"jaydencjs"},"content":"                Scanner myReader \u003d new Scanner(myObj);  ","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"jaydencjs"},"content":"                while (myReader.hasNextLine()) {","lastModifiedDate":"2022-03-05"},{"lineNumber":27,"author":{"gitId":"jaydencjs"},"content":"                    String line \u003d myReader.nextLine();","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"jaydencjs"},"content":"                    String[] lineList \u003d line.split(\"\\\\|\");","lastModifiedDate":"2022-03-05"},{"lineNumber":29,"author":{"gitId":"jaydencjs"},"content":"                    taskList.add(categoriseTask(lineList));","lastModifiedDate":"2022-03-05"},{"lineNumber":30,"author":{"gitId":"jaydencjs"},"content":"                }","lastModifiedDate":"2022-03-05"},{"lineNumber":31,"author":{"gitId":"jaydencjs"},"content":"                myReader.close();","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"jaydencjs"},"content":"            }","lastModifiedDate":"2022-03-05"},{"lineNumber":33,"author":{"gitId":"jaydencjs"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-05"},{"lineNumber":34,"author":{"gitId":"jaydencjs"},"content":"            System.out.println(\"An error occurred upon reading file.\");","lastModifiedDate":"2022-03-05"},{"lineNumber":35,"author":{"gitId":"jaydencjs"},"content":"        } ","lastModifiedDate":"2022-03-05"},{"lineNumber":36,"author":{"gitId":"jaydencjs"},"content":"        return taskList;","lastModifiedDate":"2022-03-05"},{"lineNumber":37,"author":{"gitId":"jaydencjs"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":38,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":39,"author":{"gitId":"jaydencjs"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":40,"author":{"gitId":"jaydencjs"},"content":"     * Write the file based on the file path","lastModifiedDate":"2022-03-19"},{"lineNumber":41,"author":{"gitId":"jaydencjs"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":42,"author":{"gitId":"jaydencjs"},"content":"     * @param taskList Existing task array to be written to the file","lastModifiedDate":"2022-03-19"},{"lineNumber":43,"author":{"gitId":"jaydencjs"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":44,"author":{"gitId":"jaydencjs"},"content":"    public static void writeFile(ArrayList\u003cTask\u003e taskList){","lastModifiedDate":"2022-03-05"},{"lineNumber":45,"author":{"gitId":"jaydencjs"},"content":"        try{","lastModifiedDate":"2022-03-05"},{"lineNumber":46,"author":{"gitId":"jaydencjs"},"content":"            FileWriter myObj \u003d new FileWriter(filePath);","lastModifiedDate":"2022-03-05"},{"lineNumber":47,"author":{"gitId":"jaydencjs"},"content":"            for(Task t : taskList){","lastModifiedDate":"2022-03-05"},{"lineNumber":48,"author":{"gitId":"jaydencjs"},"content":"                myObj.write(t.toFileString());","lastModifiedDate":"2022-03-05"},{"lineNumber":49,"author":{"gitId":"jaydencjs"},"content":"                myObj.write(\"\\n\");","lastModifiedDate":"2022-03-05"},{"lineNumber":50,"author":{"gitId":"jaydencjs"},"content":"            }","lastModifiedDate":"2022-03-05"},{"lineNumber":51,"author":{"gitId":"jaydencjs"},"content":"            myObj.close();","lastModifiedDate":"2022-03-05"},{"lineNumber":52,"author":{"gitId":"jaydencjs"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-03-05"},{"lineNumber":53,"author":{"gitId":"jaydencjs"},"content":"            System.out.println(\"An error occurred upon reading file.\");","lastModifiedDate":"2022-03-05"},{"lineNumber":54,"author":{"gitId":"jaydencjs"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":55,"author":{"gitId":"jaydencjs"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":56,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":57,"author":{"gitId":"jaydencjs"},"content":"    private static Task categoriseTask(String[] lineList){","lastModifiedDate":"2022-03-05"},{"lineNumber":58,"author":{"gitId":"jaydencjs"},"content":"        Task task;","lastModifiedDate":"2022-03-05"},{"lineNumber":59,"author":{"gitId":"jaydencjs"},"content":"        if(lineList[0].equals(\"E\")){","lastModifiedDate":"2022-03-05"},{"lineNumber":60,"author":{"gitId":"jaydencjs"},"content":"            task \u003d new Event(lineList[2], lineList[3]);","lastModifiedDate":"2022-03-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        } else if(lineList[0].equals(\"D\")){","lastModifiedDate":"2022-03-31"},{"lineNumber":62,"author":{"gitId":"jaydencjs"},"content":"            task \u003d new Deadline(lineList[2], lineList[3]);","lastModifiedDate":"2022-03-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2022-03-31"},{"lineNumber":64,"author":{"gitId":"jaydencjs"},"content":"            task \u003d new Todo(lineList[2]);","lastModifiedDate":"2022-03-05"},{"lineNumber":65,"author":{"gitId":"jaydencjs"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":66,"author":{"gitId":"jaydencjs"},"content":"        if(lineList[1].equals(\"1\")){","lastModifiedDate":"2022-03-05"},{"lineNumber":67,"author":{"gitId":"jaydencjs"},"content":"            task.setDone(true);","lastModifiedDate":"2022-03-05"},{"lineNumber":68,"author":{"gitId":"jaydencjs"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":69,"author":{"gitId":"jaydencjs"},"content":"        return task;","lastModifiedDate":"2022-03-05"},{"lineNumber":70,"author":{"gitId":"jaydencjs"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":71,"author":{"gitId":"jaydencjs"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"jaydencjs":69,"-":2}},{"path":"src/main/java/input/User.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaydencjs"},"content":"package input;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import exception.InvalidDateException;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import exception.InvalidInputException;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import model.Deadline;","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import model.Event;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import model.Task;","lastModifiedDate":"2022-03-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import model.Todo;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"jaydencjs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static file.Data.readFile;","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static file.Data.writeFile;","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"jaydencjs"},"content":"public class User {","lastModifiedDate":"2022-03-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":20,"author":{"gitId":"jaydencjs"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"jaydencjs"},"content":"     * Adding task to the array list based on the type","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"jaydencjs"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"jaydencjs"},"content":"     * @param desc Description of the task","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"jaydencjs"},"content":"     * @param type Type of the task","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"jaydencjs"},"content":"     * @return Created new task","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"jaydencjs"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static Task addSpecificTask(String desc, String type) throws InvalidInputException, InvalidDateException {","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        LocalDate inputDate;","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        switch (type) {","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        case \"todo\":","lastModifiedDate":"2022-03-20"},{"lineNumber":31,"author":{"gitId":"jaydencjs"},"content":"            taskList.add(new Todo(desc));","lastModifiedDate":"2022-03-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        case \"deadline\":","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"jaydencjs"},"content":"            String[] deadlineArr \u003d desc.split(\" /by \");","lastModifiedDate":"2022-03-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"jaydencjs"},"content":"            if (deadlineArr.length \u003c 2) {","lastModifiedDate":"2022-03-05"},{"lineNumber":37,"author":{"gitId":"jaydencjs"},"content":"                throw new InvalidInputException();","lastModifiedDate":"2022-03-05"},{"lineNumber":38,"author":{"gitId":"jaydencjs"},"content":"            }","lastModifiedDate":"2022-03-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                inputDate \u003d LocalDate.parse(deadlineArr[1]);","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                throw new InvalidDateException();","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            taskList.add(new Deadline(deadlineArr[0], inputDate));","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        case \"event\":","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"jaydencjs"},"content":"            String[] eventArr \u003d desc.split(\" /at \");","lastModifiedDate":"2022-03-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"jaydencjs"},"content":"            if (eventArr.length \u003c 2) {","lastModifiedDate":"2022-03-05"},{"lineNumber":52,"author":{"gitId":"jaydencjs"},"content":"                throw new InvalidInputException();","lastModifiedDate":"2022-03-05"},{"lineNumber":53,"author":{"gitId":"jaydencjs"},"content":"            }","lastModifiedDate":"2022-03-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2022-03-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                inputDate \u003d LocalDate.parse(eventArr[1]);","lastModifiedDate":"2022-03-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                throw new InvalidDateException();","lastModifiedDate":"2022-03-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            taskList.add(new Event(eventArr[0], inputDate));","lastModifiedDate":"2022-03-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            break;","lastModifiedDate":"2022-03-20"},{"lineNumber":63,"author":{"gitId":"jaydencjs"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":64,"author":{"gitId":"jaydencjs"},"content":"        return taskList.get(taskList.size() - 1);","lastModifiedDate":"2022-03-05"},{"lineNumber":65,"author":{"gitId":"jaydencjs"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":66,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":67,"author":{"gitId":"jaydencjs"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":68,"author":{"gitId":"jaydencjs"},"content":"     * Print the task within the array list","lastModifiedDate":"2022-03-19"},{"lineNumber":69,"author":{"gitId":"jaydencjs"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":70,"author":{"gitId":"jaydencjs"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":71,"author":{"gitId":"jaydencjs"},"content":"    public static void printTask(){","lastModifiedDate":"2022-03-05"},{"lineNumber":72,"author":{"gitId":"jaydencjs"},"content":"        for(int i \u003d 0; i \u003c taskList.size(); i ++){","lastModifiedDate":"2022-03-05"},{"lineNumber":73,"author":{"gitId":"jaydencjs"},"content":"            System.out.print((i + 1) + \". \");","lastModifiedDate":"2022-03-05"},{"lineNumber":74,"author":{"gitId":"jaydencjs"},"content":"            taskList.get(i).printTask();","lastModifiedDate":"2022-03-05"},{"lineNumber":75,"author":{"gitId":"jaydencjs"},"content":"        }","lastModifiedDate":"2022-03-05"},{"lineNumber":76,"author":{"gitId":"jaydencjs"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":77,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":78,"author":{"gitId":"jaydencjs"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":79,"author":{"gitId":"jaydencjs"},"content":"     * Marking the task as completed/incomplete","lastModifiedDate":"2022-03-19"},{"lineNumber":80,"author":{"gitId":"jaydencjs"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":81,"author":{"gitId":"jaydencjs"},"content":"     * @param userInput determine which task to be mark","lastModifiedDate":"2022-03-19"},{"lineNumber":82,"author":{"gitId":"jaydencjs"},"content":"     * @param completed to mark the task as complete/incomplete","lastModifiedDate":"2022-03-19"},{"lineNumber":83,"author":{"gitId":"jaydencjs"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":84,"author":{"gitId":"jaydencjs"},"content":"    public static void markTask(String userInput, boolean completed){","lastModifiedDate":"2022-03-05"},{"lineNumber":85,"author":{"gitId":"jaydencjs"},"content":"        int taskNo \u003d Integer.parseInt(userInput.split(\" \")[1]) - 1;","lastModifiedDate":"2022-03-05"},{"lineNumber":86,"author":{"gitId":"jaydencjs"},"content":"        taskList.get(taskNo).setDone(completed);","lastModifiedDate":"2022-03-05"},{"lineNumber":87,"author":{"gitId":"jaydencjs"},"content":"        taskList.get(taskNo).printTask();","lastModifiedDate":"2022-03-05"},{"lineNumber":88,"author":{"gitId":"jaydencjs"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":89,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":90,"author":{"gitId":"jaydencjs"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":91,"author":{"gitId":"jaydencjs"},"content":"     * Delete the task","lastModifiedDate":"2022-03-19"},{"lineNumber":92,"author":{"gitId":"jaydencjs"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":93,"author":{"gitId":"jaydencjs"},"content":"     * @param no determine which task to be delete","lastModifiedDate":"2022-03-19"},{"lineNumber":94,"author":{"gitId":"jaydencjs"},"content":"     * @return Deleted task","lastModifiedDate":"2022-03-19"},{"lineNumber":95,"author":{"gitId":"jaydencjs"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":96,"author":{"gitId":"jaydencjs"},"content":"    public static Task deleteTask(int no){","lastModifiedDate":"2022-03-05"},{"lineNumber":97,"author":{"gitId":"jaydencjs"},"content":"        Task task \u003d taskList.get(no);","lastModifiedDate":"2022-03-05"},{"lineNumber":98,"author":{"gitId":"jaydencjs"},"content":"        taskList.remove(no);","lastModifiedDate":"2022-03-05"},{"lineNumber":99,"author":{"gitId":"jaydencjs"},"content":"        return task;","lastModifiedDate":"2022-03-05"},{"lineNumber":100,"author":{"gitId":"jaydencjs"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":101,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Retrieve the list of task based on the date","lastModifiedDate":"2022-03-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-03-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param userInput user input field","lastModifiedDate":"2022-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @return List of task","lastModifiedDate":"2022-03-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static ArrayList\u003cString\u003e viewTaskByDate(String userInput) throws InvalidDateException, InvalidInputException {","lastModifiedDate":"2022-03-20"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        ArrayList\u003cString\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        LocalDate date;","lastModifiedDate":"2022-03-20"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String[] viewTaskArr \u003d userInput.split(\"/for \");","lastModifiedDate":"2022-03-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if(viewTaskArr.length \u003c 2){","lastModifiedDate":"2022-03-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2022-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            date \u003d LocalDate.parse(viewTaskArr[1]);","lastModifiedDate":"2022-03-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-03-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new InvalidDateException();","lastModifiedDate":"2022-03-20"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2022-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2022-03-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                LocalDate taskDeadline \u003d ((Deadline) task).getBy();","lastModifiedDate":"2022-03-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                if (taskDeadline.compareTo(date) \u003c 1) {","lastModifiedDate":"2022-03-20"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                    result.add(task.toString());","lastModifiedDate":"2022-03-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2022-03-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            } else if(task instanceof Event){","lastModifiedDate":"2022-03-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                LocalDate taskPeriod \u003d ((Event) task).getPeriod();","lastModifiedDate":"2022-03-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                if(taskPeriod.compareTo(date) \u003d\u003d 0){","lastModifiedDate":"2022-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                    result.add(task.toString());","lastModifiedDate":"2022-03-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2022-03-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-03-20"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return result;","lastModifiedDate":"2022-03-20"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Retrieve the list of task based on the keyword","lastModifiedDate":"2022-03-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-03-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * @param userInput user input field","lastModifiedDate":"2022-03-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * @return List of task","lastModifiedDate":"2022-03-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public static ArrayList\u003cString\u003e viewTaskByKeyword(String userInput) throws InvalidInputException {","lastModifiedDate":"2022-03-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        ArrayList\u003cString\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-03-20"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if(userInput.isEmpty()){","lastModifiedDate":"2022-03-20"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2022-03-20"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2022-03-20"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            if (task.getDescription().contains(userInput)) {","lastModifiedDate":"2022-03-20"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                result.add(task.toString());","lastModifiedDate":"2022-03-20"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-03-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-03-20"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        return result;","lastModifiedDate":"2022-03-20"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":158,"author":{"gitId":"jaydencjs"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":159,"author":{"gitId":"jaydencjs"},"content":"     * Retrieving the task from text file and store it","lastModifiedDate":"2022-03-19"},{"lineNumber":160,"author":{"gitId":"jaydencjs"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":161,"author":{"gitId":"jaydencjs"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":162,"author":{"gitId":"jaydencjs"},"content":"    public static void retrieveInitData(){","lastModifiedDate":"2022-03-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        readFile(taskList);","lastModifiedDate":"2022-03-20"},{"lineNumber":164,"author":{"gitId":"jaydencjs"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":165,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":166,"author":{"gitId":"jaydencjs"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":167,"author":{"gitId":"jaydencjs"},"content":"     * Save the task to the text file","lastModifiedDate":"2022-03-19"},{"lineNumber":168,"author":{"gitId":"jaydencjs"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":169,"author":{"gitId":"jaydencjs"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":170,"author":{"gitId":"jaydencjs"},"content":"    public static void saveData(){","lastModifiedDate":"2022-03-05"},{"lineNumber":171,"author":{"gitId":"jaydencjs"},"content":"        writeFile(taskList);","lastModifiedDate":"2022-03-05"},{"lineNumber":172,"author":{"gitId":"jaydencjs"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":173,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":174,"author":{"gitId":"jaydencjs"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":175,"author":{"gitId":"jaydencjs"},"content":"     * Get the count of the task","lastModifiedDate":"2022-03-19"},{"lineNumber":176,"author":{"gitId":"jaydencjs"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":177,"author":{"gitId":"jaydencjs"},"content":"     * @return Count of the task","lastModifiedDate":"2022-03-19"},{"lineNumber":178,"author":{"gitId":"jaydencjs"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":179,"author":{"gitId":"jaydencjs"},"content":"    public static int getTaskList(){","lastModifiedDate":"2022-03-05"},{"lineNumber":180,"author":{"gitId":"jaydencjs"},"content":"        return taskList.size();","lastModifiedDate":"2022-03-05"},{"lineNumber":181,"author":{"gitId":"jaydencjs"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":182,"author":{"gitId":"jaydencjs"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"jaydencjs":86,"-":96}},{"path":"src/main/java/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaydencjs"},"content":"package main;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import exception.InvalidDateException;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import exception.InvalidInputException;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-20"},{"lineNumber":7,"author":{"gitId":"jaydencjs"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"jaydencjs"},"content":"import static input.User.*;","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"jaydencjs"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"jaydencjs"},"content":"     * Main Program","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"jaydencjs"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"jaydencjs"},"content":"        retrieveInitData();","lastModifiedDate":"2022-03-05"},{"lineNumber":17,"author":{"gitId":"jaydencjs"},"content":"        System.out.println(\"-______________________-||\");","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"jaydencjs"},"content":"        System.out.println(\"Hello! I am the most superior AI~~ Friday\");","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"jaydencjs"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"jaydencjs"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        String input;","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"jaydencjs"},"content":"        input \u003d in.nextLine();","lastModifiedDate":"2022-01-28"},{"lineNumber":23,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"jaydencjs"},"content":"        while(!input.equals(\"bye\")){","lastModifiedDate":"2022-01-28"},{"lineNumber":25,"author":{"gitId":"jaydencjs"},"content":"            try {","lastModifiedDate":"2022-02-20"},{"lineNumber":26,"author":{"gitId":"jaydencjs"},"content":"                processInput(input);","lastModifiedDate":"2022-01-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            } catch (InvalidInputException | InvalidDateException e) {","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" );","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"jaydencjs"},"content":"            }","lastModifiedDate":"2022-02-20"},{"lineNumber":31,"author":{"gitId":"jaydencjs"},"content":"            System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" );","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"jaydencjs"},"content":"            System.out.println(\"What can I do for you?\");","lastModifiedDate":"2022-02-20"},{"lineNumber":33,"author":{"gitId":"jaydencjs"},"content":"            input \u003d in.nextLine();","lastModifiedDate":"2022-01-28"},{"lineNumber":34,"author":{"gitId":"jaydencjs"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"jaydencjs"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" );","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"jaydencjs"},"content":"        System.out.println(\"Bye. Hope to see you again! Love you 3000 \u003c3\");","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"jaydencjs"},"content":"        in.close();","lastModifiedDate":"2022-03-05"},{"lineNumber":38,"author":{"gitId":"jaydencjs"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":39,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":40,"author":{"gitId":"jaydencjs"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":41,"author":{"gitId":"jaydencjs"},"content":"     * Process the input provided by user","lastModifiedDate":"2022-03-19"},{"lineNumber":42,"author":{"gitId":"jaydencjs"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":43,"author":{"gitId":"jaydencjs"},"content":"     * @param input user input","lastModifiedDate":"2022-03-19"},{"lineNumber":44,"author":{"gitId":"jaydencjs"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static void processInput(String input) throws InvalidInputException, InvalidDateException {","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"jaydencjs"},"content":"        if(input.equals(\"list\")){","lastModifiedDate":"2022-01-28"},{"lineNumber":47,"author":{"gitId":"jaydencjs"},"content":"            System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" );","lastModifiedDate":"2022-01-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            if(getTaskList() \u003d\u003d 0){","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                System.out.println(\"You are good to go! No task is added.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"jaydencjs"},"content":"            printTask();","lastModifiedDate":"2022-01-28"},{"lineNumber":52,"author":{"gitId":"jaydencjs"},"content":"            return;","lastModifiedDate":"2022-03-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        } else if(input.startsWith(\"mark\")){","lastModifiedDate":"2022-03-31"},{"lineNumber":54,"author":{"gitId":"jaydencjs"},"content":"            System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" );","lastModifiedDate":"2022-01-28"},{"lineNumber":55,"author":{"gitId":"jaydencjs"},"content":"            System.out.println(\"That\u0027s pretty fast\");","lastModifiedDate":"2022-01-28"},{"lineNumber":56,"author":{"gitId":"jaydencjs"},"content":"            markTask(input, true);","lastModifiedDate":"2022-01-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } else if(input.startsWith(\"unmark\")){","lastModifiedDate":"2022-03-31"},{"lineNumber":58,"author":{"gitId":"jaydencjs"},"content":"            System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" );","lastModifiedDate":"2022-01-28"},{"lineNumber":59,"author":{"gitId":"jaydencjs"},"content":"            System.out.println(\"Oh, it is not done?\");","lastModifiedDate":"2022-01-28"},{"lineNumber":60,"author":{"gitId":"jaydencjs"},"content":"            markTask(input, false);","lastModifiedDate":"2022-01-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        } else if(input.startsWith(\"todo\") || input.startsWith(\"event\") || input.startsWith(\"deadline\")){","lastModifiedDate":"2022-03-31"},{"lineNumber":62,"author":{"gitId":"jaydencjs"},"content":"            String[] userInputArr \u003d input.split(\" \", 2);","lastModifiedDate":"2022-01-28"},{"lineNumber":63,"author":{"gitId":"jaydencjs"},"content":"            if(userInputArr.length \u003c 2 || userInputArr[1].trim().isEmpty()){","lastModifiedDate":"2022-02-09"},{"lineNumber":64,"author":{"gitId":"jaydencjs"},"content":"                System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" );","lastModifiedDate":"2022-02-20"},{"lineNumber":65,"author":{"gitId":"jaydencjs"},"content":"                System.out.println(\"No task is provided.\");","lastModifiedDate":"2022-02-09"},{"lineNumber":66,"author":{"gitId":"jaydencjs"},"content":"                return;","lastModifiedDate":"2022-02-09"},{"lineNumber":67,"author":{"gitId":"jaydencjs"},"content":"            }","lastModifiedDate":"2022-02-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            addSpecificTask(userInputArr[1], userInputArr[0]).printTask();","lastModifiedDate":"2022-03-20"},{"lineNumber":69,"author":{"gitId":"jaydencjs"},"content":"            System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" );","lastModifiedDate":"2022-02-20"},{"lineNumber":70,"author":{"gitId":"jaydencjs"},"content":"            System.out.println(\"Mission added!\");","lastModifiedDate":"2022-01-28"},{"lineNumber":71,"author":{"gitId":"jaydencjs"},"content":"            System.out.println(\"Now you have \" + getTaskList() + \" missions in the list.\");","lastModifiedDate":"2022-03-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        } else if(input.startsWith(\"delete\")){","lastModifiedDate":"2022-03-31"},{"lineNumber":73,"author":{"gitId":"jaydencjs"},"content":"            String[] userInputArr \u003d input.split(\" \", 2);","lastModifiedDate":"2022-02-20"},{"lineNumber":74,"author":{"gitId":"jaydencjs"},"content":"            if(userInputArr.length \u003c 2 || userInputArr[1].trim().isEmpty()){","lastModifiedDate":"2022-02-20"},{"lineNumber":75,"author":{"gitId":"jaydencjs"},"content":"                System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" );","lastModifiedDate":"2022-01-28"},{"lineNumber":76,"author":{"gitId":"jaydencjs"},"content":"                System.out.println(\"No task number is provided.\");","lastModifiedDate":"2022-02-20"},{"lineNumber":77,"author":{"gitId":"jaydencjs"},"content":"                return;","lastModifiedDate":"2022-02-20"},{"lineNumber":78,"author":{"gitId":"jaydencjs"},"content":"            }","lastModifiedDate":"2022-02-20"},{"lineNumber":79,"author":{"gitId":"jaydencjs"},"content":"            System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" );","lastModifiedDate":"2022-02-20"},{"lineNumber":80,"author":{"gitId":"jaydencjs"},"content":"            System.out.println(\"Mission deleted!\");","lastModifiedDate":"2022-02-20"},{"lineNumber":81,"author":{"gitId":"jaydencjs"},"content":"            deleteTask(Integer.parseInt(userInputArr[1]) - 1).printTask();","lastModifiedDate":"2022-03-05"},{"lineNumber":82,"author":{"gitId":"jaydencjs"},"content":"            System.out.println(\"Now you have \" + getTaskList() + \" missions in the list.\");","lastModifiedDate":"2022-03-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        } else if(input.startsWith(\"viewtask\")){","lastModifiedDate":"2022-03-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            String[] userInputArr \u003d input.split(\" \", 2);","lastModifiedDate":"2022-03-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            if(userInputArr.length \u003c 2 || userInputArr[1].trim().isEmpty()){","lastModifiedDate":"2022-03-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" );","lastModifiedDate":"2022-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                System.out.println(\"No date is provided.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                return;","lastModifiedDate":"2022-03-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-03-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            ArrayList\u003cString\u003e taskStringList \u003d viewTaskByDate(userInputArr[1]);","lastModifiedDate":"2022-03-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" );","lastModifiedDate":"2022-03-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            if(taskStringList.size() \u003d\u003d 0){","lastModifiedDate":"2022-03-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                System.out.println(\"No task being schedule for the date.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                return;","lastModifiedDate":"2022-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-03-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            System.out.println(\"The task deadline being scheduled before: \" );","lastModifiedDate":"2022-03-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            for(int i \u003d 0; i \u003c taskStringList.size(); i ++) {","lastModifiedDate":"2022-03-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                System.out.print((i + 1) + \". \");","lastModifiedDate":"2022-03-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                System.out.println(taskStringList.get(i));","lastModifiedDate":"2022-03-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-03-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } else if(input.startsWith(\"find\")){","lastModifiedDate":"2022-03-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            String[] userInputArr \u003d input.split(\" \", 2);","lastModifiedDate":"2022-03-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            if(userInputArr.length \u003c 2 || userInputArr[1].trim().isEmpty()){","lastModifiedDate":"2022-03-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" );","lastModifiedDate":"2022-03-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                System.out.println(\"No keyword is provided.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                return;","lastModifiedDate":"2022-03-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-03-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            ArrayList\u003cString\u003e taskStringList \u003d viewTaskByKeyword(userInputArr[1]);","lastModifiedDate":"2022-03-20"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" );","lastModifiedDate":"2022-03-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            if(taskStringList.size() \u003d\u003d 0){","lastModifiedDate":"2022-03-20"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                System.out.println(\"No task being found.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                return;","lastModifiedDate":"2022-03-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            System.out.println(\"These are the matching task: \" );","lastModifiedDate":"2022-03-20"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            for(int i \u003d 0; i \u003c taskStringList.size(); i ++) {","lastModifiedDate":"2022-03-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                System.out.print((i + 1) + \". \");","lastModifiedDate":"2022-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                System.out.println(taskStringList.get(i));","lastModifiedDate":"2022-03-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-03-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2022-03-31"},{"lineNumber":120,"author":{"gitId":"jaydencjs"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2022-02-20"},{"lineNumber":121,"author":{"gitId":"jaydencjs"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":122,"author":{"gitId":"jaydencjs"},"content":"        saveData();","lastModifiedDate":"2022-03-05"},{"lineNumber":123,"author":{"gitId":"jaydencjs"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jaydencjs":66,"-":58}},{"path":"src/main/java/model/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaydencjs"},"content":"package model;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"jaydencjs"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"jaydencjs"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"jaydencjs"},"content":"public class Deadline extends Task  {","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"jaydencjs"},"content":"    protected LocalDate by;","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(description);","lastModifiedDate":"2022-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"jaydencjs"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"jaydencjs"},"content":"        super(description);","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"jaydencjs"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"jaydencjs"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":20,"author":{"gitId":"jaydencjs"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Return the value of by","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public LocalDate getBy() {","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return by;","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Format task to String","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"jaydencjs"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"jaydencjs"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"jaydencjs"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public String toString(){","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"jaydencjs"},"content":"        String status \u003d \" \";","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"jaydencjs"},"content":"        if(done){","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"jaydencjs"},"content":"            status \u003d \"X\";","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"jaydencjs"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"jaydencjs"},"content":"        String formattedBy \u003d by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-03-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return (\"[D][\" + status + \"] \" + description + \" (by: \" + formattedBy + \")\");","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Print the task in certain format","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void printTask(){","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        System.out.println(toString());","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"jaydencjs"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":51,"author":{"gitId":"jaydencjs"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":52,"author":{"gitId":"jaydencjs"},"content":"     * Format the task to store into file","lastModifiedDate":"2022-03-19"},{"lineNumber":53,"author":{"gitId":"jaydencjs"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":54,"author":{"gitId":"jaydencjs"},"content":"     * @return Formatted string","lastModifiedDate":"2022-03-19"},{"lineNumber":55,"author":{"gitId":"jaydencjs"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":56,"author":{"gitId":"jaydencjs"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":57,"author":{"gitId":"jaydencjs"},"content":"    public String toFileString(){","lastModifiedDate":"2022-03-05"},{"lineNumber":58,"author":{"gitId":"jaydencjs"},"content":"        String status \u003d done ? \"1\" : \"0\";","lastModifiedDate":"2022-03-05"},{"lineNumber":59,"author":{"gitId":"jaydencjs"},"content":"        return \"D|\" + status + \"|\" + description + \"|\" + by;","lastModifiedDate":"2022-03-05"},{"lineNumber":60,"author":{"gitId":"jaydencjs"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":61,"author":{"gitId":"jaydencjs"},"content":"    ","lastModifiedDate":"2022-03-05"},{"lineNumber":62,"author":{"gitId":"jaydencjs"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"jaydencjs":37,"-":25}},{"path":"src/main/java/model/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaydencjs"},"content":"package model;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":6,"author":{"gitId":"jaydencjs"},"content":"public class Event extends Task  {","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    protected LocalDate period;","lastModifiedDate":"2022-03-20"},{"lineNumber":9,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Event(String description, LocalDate period) {","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"jaydencjs"},"content":"        super(description);","lastModifiedDate":"2022-01-28"},{"lineNumber":12,"author":{"gitId":"jaydencjs"},"content":"        this.period \u003d period;","lastModifiedDate":"2022-01-28"},{"lineNumber":13,"author":{"gitId":"jaydencjs"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public Event(String description, String period) {","lastModifiedDate":"2022-03-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        super(description);","lastModifiedDate":"2022-03-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        this.period \u003d LocalDate.parse(period);","lastModifiedDate":"2022-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *  Return the value of period","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public LocalDate getPeriod() {","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return period;","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"jaydencjs"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Format task to String","lastModifiedDate":"2022-03-20"},{"lineNumber":30,"author":{"gitId":"jaydencjs"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"jaydencjs"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"jaydencjs"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public String toString(){","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"jaydencjs"},"content":"        String status \u003d \" \";","lastModifiedDate":"2022-01-28"},{"lineNumber":35,"author":{"gitId":"jaydencjs"},"content":"        if(done){","lastModifiedDate":"2022-01-28"},{"lineNumber":36,"author":{"gitId":"jaydencjs"},"content":"            status \u003d \"X\";","lastModifiedDate":"2022-01-28"},{"lineNumber":37,"author":{"gitId":"jaydencjs"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String formattedPeriod \u003d period.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return (\"[E][\" + status + \"] \" + description + \" (at: \" + formattedPeriod + \")\");","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Print the task in certain format","lastModifiedDate":"2022-03-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-03-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void printTask(){","lastModifiedDate":"2022-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        System.out.println(toString());","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"jaydencjs"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":50,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":51,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":52,"author":{"gitId":"jaydencjs"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":53,"author":{"gitId":"jaydencjs"},"content":"     * Format the task to store into file","lastModifiedDate":"2022-03-19"},{"lineNumber":54,"author":{"gitId":"jaydencjs"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":55,"author":{"gitId":"jaydencjs"},"content":"     * @return Formatted string","lastModifiedDate":"2022-03-19"},{"lineNumber":56,"author":{"gitId":"jaydencjs"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":57,"author":{"gitId":"jaydencjs"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":58,"author":{"gitId":"jaydencjs"},"content":"    public String toFileString(){","lastModifiedDate":"2022-03-05"},{"lineNumber":59,"author":{"gitId":"jaydencjs"},"content":"        String status \u003d done ? \"1\" : \"0\";","lastModifiedDate":"2022-03-05"},{"lineNumber":60,"author":{"gitId":"jaydencjs"},"content":"        return \"E|\" + status + \"|\" + description + \"|\" + period;","lastModifiedDate":"2022-03-05"},{"lineNumber":61,"author":{"gitId":"jaydencjs"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":62,"author":{"gitId":"jaydencjs"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"jaydencjs":31,"-":31}},{"path":"src/main/java/model/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaydencjs"},"content":"package model;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"jaydencjs"},"content":"public class Task {","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"jaydencjs"},"content":"    protected String description;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"jaydencjs"},"content":"    protected boolean done;","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"jaydencjs"},"content":"    ","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"jaydencjs"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"jaydencjs"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"jaydencjs"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"jaydencjs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"jaydencjs"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"jaydencjs"},"content":"     * Check the status of the task","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"jaydencjs"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"jaydencjs"},"content":"     * @return Status of the task","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"jaydencjs"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"jaydencjs"},"content":"    public boolean isDone(){","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"jaydencjs"},"content":"        return done;","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"jaydencjs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"jaydencjs"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"jaydencjs"},"content":"     * Set the status of task","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"jaydencjs"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"jaydencjs"},"content":"     * @param done Status of the task","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"jaydencjs"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"jaydencjs"},"content":"    public void setDone(boolean done){","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"jaydencjs"},"content":"        this.done \u003d done;","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"jaydencjs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Get description","lastModifiedDate":"2022-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @return description","lastModifiedDate":"2022-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public String getDescription() {","lastModifiedDate":"2022-03-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return description;","lastModifiedDate":"2022-03-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":40,"author":{"gitId":"jaydencjs"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":41,"author":{"gitId":"jaydencjs"},"content":"     * Print the task","lastModifiedDate":"2022-03-19"},{"lineNumber":42,"author":{"gitId":"jaydencjs"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":43,"author":{"gitId":"jaydencjs"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":44,"author":{"gitId":"jaydencjs"},"content":"    public void printTask(){","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"jaydencjs"},"content":"        String status \u003d \" \";","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"jaydencjs"},"content":"        if(done){","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"jaydencjs"},"content":"            status \u003d \"X\";","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"jaydencjs"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"jaydencjs"},"content":"        System.out.println(\"[\" + status + \"] \" + description);","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"jaydencjs"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":52,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":53,"author":{"gitId":"jaydencjs"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":54,"author":{"gitId":"jaydencjs"},"content":"     * Format the task to store into file","lastModifiedDate":"2022-03-19"},{"lineNumber":55,"author":{"gitId":"jaydencjs"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":56,"author":{"gitId":"jaydencjs"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":57,"author":{"gitId":"jaydencjs"},"content":"    public String toFileString(){","lastModifiedDate":"2022-03-05"},{"lineNumber":58,"author":{"gitId":"jaydencjs"},"content":"        return \"\";","lastModifiedDate":"2022-03-05"},{"lineNumber":59,"author":{"gitId":"jaydencjs"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":60,"author":{"gitId":"jaydencjs"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"jaydencjs":51,"-":9}},{"path":"src/main/java/model/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaydencjs"},"content":"package model;","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"jaydencjs"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-01-28"},{"lineNumber":4,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":5,"author":{"gitId":"jaydencjs"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-01-28"},{"lineNumber":6,"author":{"gitId":"jaydencjs"},"content":"        super(description);","lastModifiedDate":"2022-01-28"},{"lineNumber":7,"author":{"gitId":"jaydencjs"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":8,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-01-28"},{"lineNumber":9,"author":{"gitId":"jaydencjs"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"     * Format task to String","lastModifiedDate":"2022-03-20"},{"lineNumber":11,"author":{"gitId":"jaydencjs"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"jaydencjs"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"jaydencjs"},"content":"    @Override","lastModifiedDate":"2022-01-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String toString(){","lastModifiedDate":"2022-03-20"},{"lineNumber":15,"author":{"gitId":"jaydencjs"},"content":"        String status \u003d \" \";","lastModifiedDate":"2022-01-28"},{"lineNumber":16,"author":{"gitId":"jaydencjs"},"content":"        if(done){","lastModifiedDate":"2022-01-28"},{"lineNumber":17,"author":{"gitId":"jaydencjs"},"content":"            status \u003d \"X\";","lastModifiedDate":"2022-01-28"},{"lineNumber":18,"author":{"gitId":"jaydencjs"},"content":"        }","lastModifiedDate":"2022-01-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return (\"[T][\" + status + \"] \" + description);","lastModifiedDate":"2022-03-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Print the task in certain format","lastModifiedDate":"2022-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void printTask(){","lastModifiedDate":"2022-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        System.out.println(toString());","lastModifiedDate":"2022-03-20"},{"lineNumber":29,"author":{"gitId":"jaydencjs"},"content":"    }","lastModifiedDate":"2022-01-28"},{"lineNumber":30,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":31,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"jaydencjs"},"content":"    /**","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"jaydencjs"},"content":"     * Format the task to store into file","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"jaydencjs"},"content":"     *","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"jaydencjs"},"content":"     * @return Formatted string","lastModifiedDate":"2022-03-19"},{"lineNumber":36,"author":{"gitId":"jaydencjs"},"content":"     */","lastModifiedDate":"2022-03-19"},{"lineNumber":37,"author":{"gitId":"jaydencjs"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":38,"author":{"gitId":"jaydencjs"},"content":"    public String toFileString(){","lastModifiedDate":"2022-03-05"},{"lineNumber":39,"author":{"gitId":"jaydencjs"},"content":"        String status \u003d done ? \"1\" : \"0\";","lastModifiedDate":"2022-03-05"},{"lineNumber":40,"author":{"gitId":"jaydencjs"},"content":"        return \"T|\" + status + \"|\" + description;","lastModifiedDate":"2022-03-05"},{"lineNumber":41,"author":{"gitId":"jaydencjs"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":42,"author":{"gitId":"jaydencjs"},"content":"}","lastModifiedDate":"2022-01-28"}],"authorContributionMap":{"jaydencjs":30,"-":12}},{"path":"src/test/java/model/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaydencjs"},"content":"package model;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"jaydencjs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"jaydencjs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"jaydencjs"},"content":"public class DeadlineTest {","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"jaydencjs"},"content":"    @Test","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"jaydencjs"},"content":"    public void testToFileString(){","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"jaydencjs"},"content":"        Task testTask \u003d new Deadline(\"test\", \"1996-12-03\");","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"jaydencjs"},"content":"        String actual \u003d testTask.toFileString();","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"jaydencjs"},"content":"        String expected \u003d \"D|0|test|1996-12-03\";","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"jaydencjs"},"content":"        assertEquals(actual, expected);","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"jaydencjs"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"jaydencjs"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"jaydencjs":16}},{"path":"src/test/java/model/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaydencjs"},"content":"package model;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"jaydencjs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"jaydencjs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"jaydencjs"},"content":"public class EventTest {","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"jaydencjs"},"content":"    @Test","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"jaydencjs"},"content":"    public void testToFileString(){","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"jaydencjs"},"content":"        Task testTask \u003d new Event(\"test\", \"12/03/1996\");","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"jaydencjs"},"content":"        String actual \u003d testTask.toFileString();","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"jaydencjs"},"content":"        String expected \u003d \"E|0|test|12/03/1996\";","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"jaydencjs"},"content":"        assertEquals(actual, expected);","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"jaydencjs"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"jaydencjs"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"jaydencjs":16}},{"path":"src/test/java/model/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaydencjs"},"content":"package model;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"jaydencjs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"jaydencjs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"jaydencjs"},"content":"public class TaskTest {","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"jaydencjs"},"content":"    @Test","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"jaydencjs"},"content":"    public void testIsDone(){","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"jaydencjs"},"content":"        Task testTask \u003d new Task(\"test\");","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"jaydencjs"},"content":"        boolean actual \u003d testTask.isDone();","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"jaydencjs"},"content":"        boolean expected \u003d false;","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"jaydencjs"},"content":"        assertEquals(actual, expected);","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"jaydencjs"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":17,"author":{"gitId":"jaydencjs"},"content":"    @Test","lastModifiedDate":"2022-03-19"},{"lineNumber":18,"author":{"gitId":"jaydencjs"},"content":"    public void testSetDone(){","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"jaydencjs"},"content":"        Task testTask \u003d new Task(\"test\");","lastModifiedDate":"2022-03-19"},{"lineNumber":20,"author":{"gitId":"jaydencjs"},"content":"        testTask.setDone(true);","lastModifiedDate":"2022-03-19"},{"lineNumber":21,"author":{"gitId":"jaydencjs"},"content":"        boolean actual \u003d testTask.isDone();","lastModifiedDate":"2022-03-19"},{"lineNumber":22,"author":{"gitId":"jaydencjs"},"content":"        boolean expected \u003d true;","lastModifiedDate":"2022-03-19"},{"lineNumber":23,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":24,"author":{"gitId":"jaydencjs"},"content":"        assertEquals(actual, expected);","lastModifiedDate":"2022-03-19"},{"lineNumber":25,"author":{"gitId":"jaydencjs"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"jaydencjs"},"content":"    @Test","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"jaydencjs"},"content":"    public void testToFileString(){","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"jaydencjs"},"content":"        Task testTask \u003d new Task(\"test\");","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"jaydencjs"},"content":"        String actual \u003d testTask.toFileString();","lastModifiedDate":"2022-03-19"},{"lineNumber":31,"author":{"gitId":"jaydencjs"},"content":"        String expected \u003d \"\";","lastModifiedDate":"2022-03-19"},{"lineNumber":32,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":33,"author":{"gitId":"jaydencjs"},"content":"        assertEquals(actual, expected);","lastModifiedDate":"2022-03-19"},{"lineNumber":34,"author":{"gitId":"jaydencjs"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":35,"author":{"gitId":"jaydencjs"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"jaydencjs":35}},{"path":"src/test/java/model/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jaydencjs"},"content":"package model;","lastModifiedDate":"2022-03-19"},{"lineNumber":2,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":3,"author":{"gitId":"jaydencjs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-19"},{"lineNumber":4,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":5,"author":{"gitId":"jaydencjs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-19"},{"lineNumber":6,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"jaydencjs"},"content":"public class TodoTest {","lastModifiedDate":"2022-03-19"},{"lineNumber":8,"author":{"gitId":"jaydencjs"},"content":"    @Test","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"jaydencjs"},"content":"    public void testToFileString(){","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"jaydencjs"},"content":"        Task testTask \u003d new Todo(\"test\");","lastModifiedDate":"2022-03-19"},{"lineNumber":11,"author":{"gitId":"jaydencjs"},"content":"        String actual \u003d testTask.toFileString();","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"jaydencjs"},"content":"        String expected \u003d \"T|0|test\";","lastModifiedDate":"2022-03-19"},{"lineNumber":13,"author":{"gitId":"jaydencjs"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"jaydencjs"},"content":"        assertEquals(actual, expected);","lastModifiedDate":"2022-03-19"},{"lineNumber":15,"author":{"gitId":"jaydencjs"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":16,"author":{"gitId":"jaydencjs"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"jaydencjs":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"jaydencjs"},"content":"java -classpath ..\\bin main.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-03-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jaydencjs":1,"-":20}}]
