[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"CyberS-N"},"content":"[T][✘] sell book","lastModifiedDate":"2022-04-16"},{"lineNumber":2,"author":{"gitId":"CyberS-N"},"content":"[T][✘] read book","lastModifiedDate":"2022-04-15"}],"authorContributionMap":{"CyberS-N":2}},{"path":"src/main/java/duke/command/DateTimeList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CyberS-N"},"content":"package duke.command;","lastModifiedDate":"2022-04-16"},{"lineNumber":2,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":3,"author":{"gitId":"CyberS-N"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-04-16"},{"lineNumber":4,"author":{"gitId":"CyberS-N"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-04-16"},{"lineNumber":5,"author":{"gitId":"CyberS-N"},"content":"import java.util.List;","lastModifiedDate":"2022-04-16"},{"lineNumber":6,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":7,"author":{"gitId":"CyberS-N"},"content":"/**","lastModifiedDate":"2022-04-16"},{"lineNumber":8,"author":{"gitId":"CyberS-N"},"content":" * This class provides a list of different possible configurations of Date and Time formats that the user might input.","lastModifiedDate":"2022-04-16"},{"lineNumber":9,"author":{"gitId":"CyberS-N"},"content":" * \u003cbr\u003e It allows for flexibility in the user-input and tries to catch as many patterns as possible without throwing an error.","lastModifiedDate":"2022-04-16"},{"lineNumber":10,"author":{"gitId":"CyberS-N"},"content":" */","lastModifiedDate":"2022-04-16"},{"lineNumber":11,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":12,"author":{"gitId":"CyberS-N"},"content":"public class DateTimeList {","lastModifiedDate":"2022-04-16"},{"lineNumber":13,"author":{"gitId":"CyberS-N"},"content":"    protected static List\u003cDateTimeFormatter\u003e knownPatterns \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-04-16"},{"lineNumber":14,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":15,"author":{"gitId":"CyberS-N"},"content":"    /**","lastModifiedDate":"2022-04-16"},{"lineNumber":16,"author":{"gitId":"CyberS-N"},"content":"     * This method adds the various kinds of Date and Time formats into the knownPatterns list.","lastModifiedDate":"2022-04-16"},{"lineNumber":17,"author":{"gitId":"CyberS-N"},"content":"     */","lastModifiedDate":"2022-04-16"},{"lineNumber":18,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":19,"author":{"gitId":"CyberS-N"},"content":"    private static void formatMatch() {","lastModifiedDate":"2022-04-16"},{"lineNumber":20,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"y/M/d H:m\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":21,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"y/M/d HHmm\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":22,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"M/d/y H:m\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":23,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"M/d/y HHmm\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":24,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"d/M/y H:m\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":25,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"d/M/y HHmm\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":26,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":27,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"y-M-d H:m\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":28,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"y-M-d HHmm\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":29,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"M-d-y H:m\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":30,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"M-d-y HHmm\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":31,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"d-M-y H:m\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":32,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"d-M-y HHmm\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":33,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":34,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"y M d H:m\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":35,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"y M d HHmm\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":36,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"M d y H:m\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":37,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"M d y HHmm\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":38,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"d M y H:m\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":39,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"d M y HHmm\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":40,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":41,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"y/MMM/d H:m\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":42,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"y/MMM/d HHmm\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":43,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"MMM/d/y H:m\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":44,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"MMM/d/y HHmm\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":45,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"d/MMM/y H:m\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":46,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"d/MMM/y HHmm\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":47,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":48,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"y-MMM-d H:m\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":49,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"y-MMM-d HHmm\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":50,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"MMM-d-y H:m\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":51,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"MMM-d-y HHmm\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":52,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"d-MMM-y H:m\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":53,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"d-MMM-y HHmm\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":54,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":55,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"y MMM d H:m\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":56,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"y MMM d HHmm\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":57,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"MMM d y H:m\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":58,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"MMM d y HHmm\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":59,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"d MMM y H:m\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":60,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"d MMM y HHmm\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":61,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":62,"author":{"gitId":"CyberS-N"},"content":"        //------------------------------------------------------------//","lastModifiedDate":"2022-04-16"},{"lineNumber":63,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":64,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"y/M/d\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":65,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"y/M/d\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":66,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"M/d/y\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":67,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"M/d/y\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":68,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"d/M/y\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":69,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"d/M/y\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":70,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":71,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"y-M-d\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":72,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"y-M-d\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":73,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"M-d-y\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":74,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"M-d-y\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":75,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"d-M-y\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":76,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"d-M-y\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":77,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":78,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"y M d\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":79,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"y M d\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":80,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"M d y\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":81,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"M d y\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":82,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"d M y\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":83,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"d M y\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":84,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":85,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"y/MMM/d\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":86,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"y/MMM/d\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":87,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"MMM/d/y\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":88,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"MMM/d/y\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":89,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"d/MMM/y\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":90,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"d/MMM/y\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":91,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":92,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"y-MMM-d\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":93,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"y-MMM-d\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":94,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"MMM-d-y\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":95,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"MMM-d-y\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":96,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"d-MMM-y\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":97,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"d-MMM-y\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":98,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":99,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"y MMM d\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":100,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"y MMM d\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":101,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"MMM d y\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":102,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"MMM d y\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":103,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"d MMM y\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":104,"author":{"gitId":"CyberS-N"},"content":"        knownPatterns.add(DateTimeFormatter.ofPattern(\"d MMM y\"));","lastModifiedDate":"2022-04-16"},{"lineNumber":105,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":106,"author":{"gitId":"CyberS-N"},"content":"    }","lastModifiedDate":"2022-04-16"},{"lineNumber":107,"author":{"gitId":"CyberS-N"},"content":"    public static void main() {","lastModifiedDate":"2022-04-16"},{"lineNumber":108,"author":{"gitId":"CyberS-N"},"content":"        formatMatch();","lastModifiedDate":"2022-04-16"},{"lineNumber":109,"author":{"gitId":"CyberS-N"},"content":"    }","lastModifiedDate":"2022-04-16"},{"lineNumber":110,"author":{"gitId":"CyberS-N"},"content":"}","lastModifiedDate":"2022-04-16"}],"authorContributionMap":{"CyberS-N":110}},{"path":"src/main/java/duke/command/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CyberS-N"},"content":"package duke.command;","lastModifiedDate":"2022-04-15"},{"lineNumber":2,"author":{"gitId":"CyberS-N"},"content":"import duke.task.*;","lastModifiedDate":"2022-04-15"},{"lineNumber":3,"author":{"gitId":"CyberS-N"},"content":"import java.io.IOException;","lastModifiedDate":"2022-04-16"},{"lineNumber":4,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-15"},{"lineNumber":5,"author":{"gitId":"CyberS-N"},"content":"/**","lastModifiedDate":"2022-04-16"},{"lineNumber":6,"author":{"gitId":"CyberS-N"},"content":" * \u003ch2\u003e Duke, your personalized task manager \u003c/h2\u003e","lastModifiedDate":"2022-04-16"},{"lineNumber":7,"author":{"gitId":"CyberS-N"},"content":" * \u003cbr\u003eThis task manager shall assist to add / remove various kinds of tasks that might include their estimated completion dates.","lastModifiedDate":"2022-04-16"},{"lineNumber":8,"author":{"gitId":"CyberS-N"},"content":" * \u003cbr\u003eIt also allows you to view your current tasks at hand, check if they have been completed and check which tasks occur on any given date.","lastModifiedDate":"2022-04-16"},{"lineNumber":9,"author":{"gitId":"CyberS-N"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-04-16"},{"lineNumber":10,"author":{"gitId":"CyberS-N"},"content":" * Its error-detection and user-input flexibility makes this task manager more functional and user-friendly.","lastModifiedDate":"2022-04-16"},{"lineNumber":11,"author":{"gitId":"CyberS-N"},"content":" * \u003cbr\u003eHope you enjoy using this task manager !","lastModifiedDate":"2022-04-16"},{"lineNumber":12,"author":{"gitId":"CyberS-N"},"content":" *","lastModifiedDate":"2022-04-16"},{"lineNumber":13,"author":{"gitId":"CyberS-N"},"content":" * @author Roshan Kumar","lastModifiedDate":"2022-04-16"},{"lineNumber":14,"author":{"gitId":"CyberS-N"},"content":" * @version 1.0","lastModifiedDate":"2022-04-16"},{"lineNumber":15,"author":{"gitId":"CyberS-N"},"content":" * @since 15/09/2020","lastModifiedDate":"2022-04-16"},{"lineNumber":16,"author":{"gitId":"CyberS-N"},"content":" */","lastModifiedDate":"2022-04-16"},{"lineNumber":17,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":18,"author":{"gitId":"CyberS-N"},"content":"public class Duke {","lastModifiedDate":"2022-04-15"},{"lineNumber":19,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-15"},{"lineNumber":20,"author":{"gitId":"CyberS-N"},"content":"    /**","lastModifiedDate":"2022-04-16"},{"lineNumber":21,"author":{"gitId":"CyberS-N"},"content":"     * This is the main method which does 3 key things to get the program started.","lastModifiedDate":"2022-04-16"},{"lineNumber":22,"author":{"gitId":"CyberS-N"},"content":"     *\u003cbr\u003e  1. It initializes many different formats of possible Date Time configurations which allows flexibility in user input.","lastModifiedDate":"2022-04-16"},{"lineNumber":23,"author":{"gitId":"CyberS-N"},"content":"     *\u003cbr\u003e  2. It loads the UI class that starts the interaction with the user.","lastModifiedDate":"2022-04-16"},{"lineNumber":24,"author":{"gitId":"CyberS-N"},"content":"     *","lastModifiedDate":"2022-04-16"},{"lineNumber":25,"author":{"gitId":"CyberS-N"},"content":"     * @param args Unused.","lastModifiedDate":"2022-04-16"},{"lineNumber":26,"author":{"gitId":"CyberS-N"},"content":"     * @throws DukeException Error thrown when user input is not complete or in an unreadable format.","lastModifiedDate":"2022-04-16"},{"lineNumber":27,"author":{"gitId":"CyberS-N"},"content":"     * @see DukeException","lastModifiedDate":"2022-04-16"},{"lineNumber":28,"author":{"gitId":"CyberS-N"},"content":"     */","lastModifiedDate":"2022-04-16"},{"lineNumber":29,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":30,"author":{"gitId":"CyberS-N"},"content":"    public static void main(String[] args) throws DukeException, IOException {","lastModifiedDate":"2022-04-16"},{"lineNumber":31,"author":{"gitId":"CyberS-N"},"content":"        DateTimeList.main(); //Initialize DateTimeFormats","lastModifiedDate":"2022-04-16"},{"lineNumber":32,"author":{"gitId":"CyberS-N"},"content":"        UI.main(); //Start interaction with User","lastModifiedDate":"2022-04-16"},{"lineNumber":33,"author":{"gitId":"CyberS-N"},"content":"    }","lastModifiedDate":"2022-04-15"},{"lineNumber":34,"author":{"gitId":"CyberS-N"},"content":"}","lastModifiedDate":"2022-04-15"}],"authorContributionMap":{"CyberS-N":34}},{"path":"src/main/java/duke/command/FilePath.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CyberS-N"},"content":"package duke.command;","lastModifiedDate":"2022-04-16"},{"lineNumber":2,"author":{"gitId":"CyberS-N"},"content":"import duke.task.DukeException;","lastModifiedDate":"2022-04-16"},{"lineNumber":3,"author":{"gitId":"CyberS-N"},"content":"import java.io.File;","lastModifiedDate":"2022-04-16"},{"lineNumber":4,"author":{"gitId":"CyberS-N"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2022-04-16"},{"lineNumber":5,"author":{"gitId":"CyberS-N"},"content":"import java.io.IOException;","lastModifiedDate":"2022-04-16"},{"lineNumber":6,"author":{"gitId":"CyberS-N"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-04-16"},{"lineNumber":7,"author":{"gitId":"CyberS-N"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-04-16"},{"lineNumber":8,"author":{"gitId":"CyberS-N"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-04-16"},{"lineNumber":9,"author":{"gitId":"CyberS-N"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-04-16"},{"lineNumber":10,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":11,"author":{"gitId":"CyberS-N"},"content":"/**","lastModifiedDate":"2022-04-16"},{"lineNumber":12,"author":{"gitId":"CyberS-N"},"content":" * This class allows the user to modify both the directory and filename for a flexible data source.","lastModifiedDate":"2022-04-16"},{"lineNumber":13,"author":{"gitId":"CyberS-N"},"content":" */","lastModifiedDate":"2022-04-16"},{"lineNumber":14,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":15,"author":{"gitId":"CyberS-N"},"content":"public class FilePath {","lastModifiedDate":"2022-04-16"},{"lineNumber":16,"author":{"gitId":"CyberS-N"},"content":"    public static String Directory \u003d \"./data/\";","lastModifiedDate":"2022-04-16"},{"lineNumber":17,"author":{"gitId":"CyberS-N"},"content":"    public static String Filename \u003d \"duke.txt\";","lastModifiedDate":"2022-04-16"},{"lineNumber":18,"author":{"gitId":"CyberS-N"},"content":"    public static String FileLocation \u003d Directory + Filename;","lastModifiedDate":"2022-04-16"},{"lineNumber":19,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":20,"author":{"gitId":"CyberS-N"},"content":"    /**","lastModifiedDate":"2022-04-16"},{"lineNumber":21,"author":{"gitId":"CyberS-N"},"content":"     * This method takes in a user input and understands if it is a yes or no.","lastModifiedDate":"2022-04-16"},{"lineNumber":22,"author":{"gitId":"CyberS-N"},"content":"     * @return Return yes or no command.","lastModifiedDate":"2022-04-16"},{"lineNumber":23,"author":{"gitId":"CyberS-N"},"content":"     * @throws DukeException Throw error if command is not recognized.","lastModifiedDate":"2022-04-16"},{"lineNumber":24,"author":{"gitId":"CyberS-N"},"content":"     */","lastModifiedDate":"2022-04-16"},{"lineNumber":25,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":26,"author":{"gitId":"CyberS-N"},"content":"    public static boolean command() throws DukeException {","lastModifiedDate":"2022-04-16"},{"lineNumber":27,"author":{"gitId":"CyberS-N"},"content":"        boolean response;","lastModifiedDate":"2022-04-16"},{"lineNumber":28,"author":{"gitId":"CyberS-N"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-04-16"},{"lineNumber":29,"author":{"gitId":"CyberS-N"},"content":"        String line \u003d in.nextLine();","lastModifiedDate":"2022-04-16"},{"lineNumber":30,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":31,"author":{"gitId":"CyberS-N"},"content":"        if (line.trim().toLowerCase().contains(\"yes\"))     { response \u003d true;}","lastModifiedDate":"2022-04-16"},{"lineNumber":32,"author":{"gitId":"CyberS-N"},"content":"        else if (line.trim().toLowerCase().contains(\"no\")) { response \u003d false;}","lastModifiedDate":"2022-04-16"},{"lineNumber":33,"author":{"gitId":"CyberS-N"},"content":"        else {","lastModifiedDate":"2022-04-16"},{"lineNumber":34,"author":{"gitId":"CyberS-N"},"content":"            throw new DukeException(\"Error, please enter either \u0027Yes\u0027 or \u0027No\u0027\");","lastModifiedDate":"2022-04-16"},{"lineNumber":35,"author":{"gitId":"CyberS-N"},"content":"        }","lastModifiedDate":"2022-04-16"},{"lineNumber":36,"author":{"gitId":"CyberS-N"},"content":"        return response;","lastModifiedDate":"2022-04-16"},{"lineNumber":37,"author":{"gitId":"CyberS-N"},"content":"    }","lastModifiedDate":"2022-04-16"},{"lineNumber":38,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":39,"author":{"gitId":"CyberS-N"},"content":"    /**","lastModifiedDate":"2022-04-16"},{"lineNumber":40,"author":{"gitId":"CyberS-N"},"content":"     * This method checks if there is any file within the directory and creates it if it isn\u0027t. If files already exist, it asks the user-input to choose which file to initialize.","lastModifiedDate":"2022-04-16"},{"lineNumber":41,"author":{"gitId":"CyberS-N"},"content":"     * @throws DukeException Throws error if user-input doesn\u0027t contain any file names that match within that directory.","lastModifiedDate":"2022-04-16"},{"lineNumber":42,"author":{"gitId":"CyberS-N"},"content":"     * @throws IOException Error if file cannot be found or created.","lastModifiedDate":"2022-04-16"},{"lineNumber":43,"author":{"gitId":"CyberS-N"},"content":"     */","lastModifiedDate":"2022-04-16"},{"lineNumber":44,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":45,"author":{"gitId":"CyberS-N"},"content":"    public static void InputFile() throws DukeException, IOException {","lastModifiedDate":"2022-04-16"},{"lineNumber":46,"author":{"gitId":"CyberS-N"},"content":"        String[] input;","lastModifiedDate":"2022-04-16"},{"lineNumber":47,"author":{"gitId":"CyberS-N"},"content":"        File f \u003d new File(Directory);","lastModifiedDate":"2022-04-16"},{"lineNumber":48,"author":{"gitId":"CyberS-N"},"content":"        input \u003d f.list();","lastModifiedDate":"2022-04-16"},{"lineNumber":49,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":50,"author":{"gitId":"CyberS-N"},"content":"        boolean found \u003d false; // Whether user-input matches files existing inside Directory","lastModifiedDate":"2022-04-16"},{"lineNumber":51,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":52,"author":{"gitId":"CyberS-N"},"content":"        if (input \u003d\u003d null) {","lastModifiedDate":"2022-04-16"},{"lineNumber":53,"author":{"gitId":"CyberS-N"},"content":"            System.out.println(\"Directory exists but no files inside currently. Shall create a file called \u0027duke.txt\");","lastModifiedDate":"2022-04-16"},{"lineNumber":54,"author":{"gitId":"CyberS-N"},"content":"            Path path \u003d Paths.get(Directory + Filename);","lastModifiedDate":"2022-04-16"},{"lineNumber":55,"author":{"gitId":"CyberS-N"},"content":"            Files.createFile(path);","lastModifiedDate":"2022-04-16"},{"lineNumber":56,"author":{"gitId":"CyberS-N"},"content":"        }","lastModifiedDate":"2022-04-16"},{"lineNumber":57,"author":{"gitId":"CyberS-N"},"content":"        else {","lastModifiedDate":"2022-04-16"},{"lineNumber":58,"author":{"gitId":"CyberS-N"},"content":"            System.out.println(\"Please view the list of the files in the current directory\\n\");","lastModifiedDate":"2022-04-16"},{"lineNumber":59,"author":{"gitId":"CyberS-N"},"content":"            for (String l : input) { System.out.println(l);}","lastModifiedDate":"2022-04-16"},{"lineNumber":60,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":61,"author":{"gitId":"CyberS-N"},"content":"            System.out.println(\"\\nPlease type the name of the file including the file extension. E.g. duke.txt\\n\");","lastModifiedDate":"2022-04-16"},{"lineNumber":62,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":63,"author":{"gitId":"CyberS-N"},"content":"            Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-04-16"},{"lineNumber":64,"author":{"gitId":"CyberS-N"},"content":"            String line \u003d in.nextLine();","lastModifiedDate":"2022-04-16"},{"lineNumber":65,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":66,"author":{"gitId":"CyberS-N"},"content":"            for (String l : input) {","lastModifiedDate":"2022-04-16"},{"lineNumber":67,"author":{"gitId":"CyberS-N"},"content":"                if (l.equals(line)) {","lastModifiedDate":"2022-04-16"},{"lineNumber":68,"author":{"gitId":"CyberS-N"},"content":"                    Filename \u003d line;","lastModifiedDate":"2022-04-16"},{"lineNumber":69,"author":{"gitId":"CyberS-N"},"content":"                    found \u003d true;","lastModifiedDate":"2022-04-16"},{"lineNumber":70,"author":{"gitId":"CyberS-N"},"content":"                    System.out.println(\"Thank you for your response\");","lastModifiedDate":"2022-04-16"},{"lineNumber":71,"author":{"gitId":"CyberS-N"},"content":"                }","lastModifiedDate":"2022-04-16"},{"lineNumber":72,"author":{"gitId":"CyberS-N"},"content":"            }","lastModifiedDate":"2022-04-16"},{"lineNumber":73,"author":{"gitId":"CyberS-N"},"content":"            if (!(found)) {throw new DukeException(\"Error, please entire a filename that exists within this directory\");}","lastModifiedDate":"2022-04-16"},{"lineNumber":74,"author":{"gitId":"CyberS-N"},"content":"        }","lastModifiedDate":"2022-04-16"},{"lineNumber":75,"author":{"gitId":"CyberS-N"},"content":"    }","lastModifiedDate":"2022-04-16"},{"lineNumber":76,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":77,"author":{"gitId":"CyberS-N"},"content":"    /**","lastModifiedDate":"2022-04-16"},{"lineNumber":78,"author":{"gitId":"CyberS-N"},"content":"     * This method creates a directory if it previously doesn\u0027t exist yet.","lastModifiedDate":"2022-04-16"},{"lineNumber":79,"author":{"gitId":"CyberS-N"},"content":"     * @return Status of whether directory already exists or has been newly created.","lastModifiedDate":"2022-04-16"},{"lineNumber":80,"author":{"gitId":"CyberS-N"},"content":"     * @throws IOException Error if directory cannot be found or created.","lastModifiedDate":"2022-04-16"},{"lineNumber":81,"author":{"gitId":"CyberS-N"},"content":"     */","lastModifiedDate":"2022-04-16"},{"lineNumber":82,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":83,"author":{"gitId":"CyberS-N"},"content":"    public static boolean InputDirectory() throws IOException {","lastModifiedDate":"2022-04-16"},{"lineNumber":84,"author":{"gitId":"CyberS-N"},"content":"        boolean existing \u003d true;","lastModifiedDate":"2022-04-16"},{"lineNumber":85,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":86,"author":{"gitId":"CyberS-N"},"content":"        System.out.println(\"Please type the name of the directory. E.g. \u0027./data/\u0027\\n\");","lastModifiedDate":"2022-04-16"},{"lineNumber":87,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":88,"author":{"gitId":"CyberS-N"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-04-16"},{"lineNumber":89,"author":{"gitId":"CyberS-N"},"content":"        String line \u003d in.nextLine();","lastModifiedDate":"2022-04-16"},{"lineNumber":90,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":91,"author":{"gitId":"CyberS-N"},"content":"        File f \u003d new File(line);","lastModifiedDate":"2022-04-16"},{"lineNumber":92,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":93,"author":{"gitId":"CyberS-N"},"content":"        if (!(f.isDirectory())) {","lastModifiedDate":"2022-04-16"},{"lineNumber":94,"author":{"gitId":"CyberS-N"},"content":"            System.out.println(\"No existing directory. Creating directory and file named \u0027duke.txt\u0027 inside it.\");","lastModifiedDate":"2022-04-16"},{"lineNumber":95,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":96,"author":{"gitId":"CyberS-N"},"content":"            Files.createDirectories(Paths.get(line));","lastModifiedDate":"2022-04-16"},{"lineNumber":97,"author":{"gitId":"CyberS-N"},"content":"            Path path \u003d Paths.get(line + Filename);","lastModifiedDate":"2022-04-16"},{"lineNumber":98,"author":{"gitId":"CyberS-N"},"content":"            Files.createFile(path);","lastModifiedDate":"2022-04-16"},{"lineNumber":99,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":100,"author":{"gitId":"CyberS-N"},"content":"            existing \u003d false;","lastModifiedDate":"2022-04-16"},{"lineNumber":101,"author":{"gitId":"CyberS-N"},"content":"        }","lastModifiedDate":"2022-04-16"},{"lineNumber":102,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":103,"author":{"gitId":"CyberS-N"},"content":"        Directory \u003d line;","lastModifiedDate":"2022-04-16"},{"lineNumber":104,"author":{"gitId":"CyberS-N"},"content":"        return existing;","lastModifiedDate":"2022-04-16"},{"lineNumber":105,"author":{"gitId":"CyberS-N"},"content":"    }","lastModifiedDate":"2022-04-16"},{"lineNumber":106,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":107,"author":{"gitId":"CyberS-N"},"content":"    /**","lastModifiedDate":"2022-04-16"},{"lineNumber":108,"author":{"gitId":"CyberS-N"},"content":"     * This main method initiates discussion with the user on the choice of directory and filename. It then selects that filepath and passes it into the main program for execution.","lastModifiedDate":"2022-04-16"},{"lineNumber":109,"author":{"gitId":"CyberS-N"},"content":"     * @throws DukeException Error if the user enters incompatible data.","lastModifiedDate":"2022-04-16"},{"lineNumber":110,"author":{"gitId":"CyberS-N"},"content":"     * @throws IOException Error if file / directory cannot be found or created.","lastModifiedDate":"2022-04-16"},{"lineNumber":111,"author":{"gitId":"CyberS-N"},"content":"     */","lastModifiedDate":"2022-04-16"},{"lineNumber":112,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":113,"author":{"gitId":"CyberS-N"},"content":"    public static void main() throws DukeException, IOException {","lastModifiedDate":"2022-04-16"},{"lineNumber":114,"author":{"gitId":"CyberS-N"},"content":"        boolean response;","lastModifiedDate":"2022-04-16"},{"lineNumber":115,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":116,"author":{"gitId":"CyberS-N"},"content":"        //Create existing directory and file if it doesn\u0027t exist","lastModifiedDate":"2022-04-16"},{"lineNumber":117,"author":{"gitId":"CyberS-N"},"content":"        Files.createDirectories(Paths.get(Directory));","lastModifiedDate":"2022-04-16"},{"lineNumber":118,"author":{"gitId":"CyberS-N"},"content":"        new FileOutputStream(FileLocation, true).close();","lastModifiedDate":"2022-04-16"},{"lineNumber":119,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":120,"author":{"gitId":"CyberS-N"},"content":"        System.out.println(\"Let me load the existing data for you (if any)\\n\");","lastModifiedDate":"2022-04-16"},{"lineNumber":121,"author":{"gitId":"CyberS-N"},"content":"        System.out.println(\"Please confirm if this current directory is correct.\");","lastModifiedDate":"2022-04-16"},{"lineNumber":122,"author":{"gitId":"CyberS-N"},"content":"        System.out.println(Directory + \"\\n\");","lastModifiedDate":"2022-04-16"},{"lineNumber":123,"author":{"gitId":"CyberS-N"},"content":"        System.out.println(\"If it is, please confirm by typing \u0027Yes\u0027\");","lastModifiedDate":"2022-04-16"},{"lineNumber":124,"author":{"gitId":"CyberS-N"},"content":"        System.out.println(\"If you want to select a different directory, please confirm by typing \u0027No\u0027\\n\");","lastModifiedDate":"2022-04-16"},{"lineNumber":125,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":126,"author":{"gitId":"CyberS-N"},"content":"        response \u003d command();","lastModifiedDate":"2022-04-16"},{"lineNumber":127,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":128,"author":{"gitId":"CyberS-N"},"content":"        if (response) {","lastModifiedDate":"2022-04-16"},{"lineNumber":129,"author":{"gitId":"CyberS-N"},"content":"            System.out.println(\"Please confirm if this current file is correct.\");","lastModifiedDate":"2022-04-16"},{"lineNumber":130,"author":{"gitId":"CyberS-N"},"content":"            System.out.println(Filename + \"\\n\");","lastModifiedDate":"2022-04-16"},{"lineNumber":131,"author":{"gitId":"CyberS-N"},"content":"            System.out.println(\"If it is, please confirm by typing \u0027Yes\u0027\");","lastModifiedDate":"2022-04-16"},{"lineNumber":132,"author":{"gitId":"CyberS-N"},"content":"            System.out.println(\"If you want to select a different file, please confirm by typing \u0027No\u0027\\n\");","lastModifiedDate":"2022-04-16"},{"lineNumber":133,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":134,"author":{"gitId":"CyberS-N"},"content":"            response \u003d command();","lastModifiedDate":"2022-04-16"},{"lineNumber":135,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":136,"author":{"gitId":"CyberS-N"},"content":"            if (response) { System.out.println(\"Thank you for your response\");}","lastModifiedDate":"2022-04-16"},{"lineNumber":137,"author":{"gitId":"CyberS-N"},"content":"            else { InputFile();}","lastModifiedDate":"2022-04-16"},{"lineNumber":138,"author":{"gitId":"CyberS-N"},"content":"        }","lastModifiedDate":"2022-04-16"},{"lineNumber":139,"author":{"gitId":"CyberS-N"},"content":"        else {","lastModifiedDate":"2022-04-16"},{"lineNumber":140,"author":{"gitId":"CyberS-N"},"content":"            if (InputDirectory()) { InputFile();}","lastModifiedDate":"2022-04-16"},{"lineNumber":141,"author":{"gitId":"CyberS-N"},"content":"        }","lastModifiedDate":"2022-04-16"},{"lineNumber":142,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":143,"author":{"gitId":"CyberS-N"},"content":"        FileLocation \u003d Directory + Filename;","lastModifiedDate":"2022-04-16"},{"lineNumber":144,"author":{"gitId":"CyberS-N"},"content":"        Storage.main();    //Load existing file data into initial TaskList","lastModifiedDate":"2022-04-16"},{"lineNumber":145,"author":{"gitId":"CyberS-N"},"content":"    }","lastModifiedDate":"2022-04-16"},{"lineNumber":146,"author":{"gitId":"CyberS-N"},"content":"}","lastModifiedDate":"2022-04-16"}],"authorContributionMap":{"CyberS-N":146}},{"path":"src/main/java/duke/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CyberS-N"},"content":"package duke.command;","lastModifiedDate":"2022-04-15"},{"lineNumber":2,"author":{"gitId":"CyberS-N"},"content":"import duke.task.*;","lastModifiedDate":"2022-04-15"},{"lineNumber":3,"author":{"gitId":"CyberS-N"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-04-16"},{"lineNumber":4,"author":{"gitId":"CyberS-N"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-04-16"},{"lineNumber":5,"author":{"gitId":"CyberS-N"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-04-16"},{"lineNumber":6,"author":{"gitId":"CyberS-N"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-04-16"},{"lineNumber":7,"author":{"gitId":"CyberS-N"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-04-16"},{"lineNumber":8,"author":{"gitId":"CyberS-N"},"content":"import java.util.List;","lastModifiedDate":"2022-04-16"},{"lineNumber":9,"author":{"gitId":"CyberS-N"},"content":"import java.io.IOException;","lastModifiedDate":"2022-04-16"},{"lineNumber":10,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":11,"author":{"gitId":"CyberS-N"},"content":"/**","lastModifiedDate":"2022-04-16"},{"lineNumber":12,"author":{"gitId":"CyberS-N"},"content":" * This class registers the user-inputs and makes sense of the command that the program is supposed to execute.","lastModifiedDate":"2022-04-16"},{"lineNumber":13,"author":{"gitId":"CyberS-N"},"content":" * \u003cbr\u003e It contains the following approved actions:","lastModifiedDate":"2022-04-16"},{"lineNumber":14,"author":{"gitId":"CyberS-N"},"content":" * \u003col\u003e","lastModifiedDate":"2022-04-16"},{"lineNumber":15,"author":{"gitId":"CyberS-N"},"content":" *     \u003cli\u003eList: Allows to list all the tasks inside TaskList\u003c/li\u003e","lastModifiedDate":"2022-04-16"},{"lineNumber":16,"author":{"gitId":"CyberS-N"},"content":" *     \u003cli\u003eBye: Exits the Task Manager\u003c/li\u003e","lastModifiedDate":"2022-04-16"},{"lineNumber":17,"author":{"gitId":"CyberS-N"},"content":" *     \u003cli\u003eFind: Find existing tasks from the TaskList through matching of the description\u003c/li\u003e","lastModifiedDate":"2022-04-16"},{"lineNumber":18,"author":{"gitId":"CyberS-N"},"content":" *     \u003cli\u003eUndo: Undo the last action including erase from History\u003c/li\u003e","lastModifiedDate":"2022-04-16"},{"lineNumber":19,"author":{"gitId":"CyberS-N"},"content":" *     \u003cli\u003eHistory: Prints out the history of actions taken\u003c/li\u003e","lastModifiedDate":"2022-04-16"},{"lineNumber":20,"author":{"gitId":"CyberS-N"},"content":" *     \u003cli\u003eDone: Marks a task as completed\u003c/li\u003e","lastModifiedDate":"2022-04-16"},{"lineNumber":21,"author":{"gitId":"CyberS-N"},"content":" *     \u003cli\u003eDelete: Deletes a task from the TaskList\u003c/li\u003e","lastModifiedDate":"2022-04-16"},{"lineNumber":22,"author":{"gitId":"CyberS-N"},"content":" *     \u003cli\u003eTodo / Event / Deadline: Adds one of the following tasks into the TaskList\u003c/li\u003e","lastModifiedDate":"2022-04-16"},{"lineNumber":23,"author":{"gitId":"CyberS-N"},"content":" *     \u003cli\u003eOccurrence: Lists which tasks fall on a specified date\u003c/li\u003e","lastModifiedDate":"2022-04-16"},{"lineNumber":24,"author":{"gitId":"CyberS-N"},"content":" * \u003c/ol\u003e","lastModifiedDate":"2022-04-16"},{"lineNumber":25,"author":{"gitId":"CyberS-N"},"content":" * \u003cp\u003e","lastModifiedDate":"2022-04-16"},{"lineNumber":26,"author":{"gitId":"CyberS-N"},"content":" * Once it understand what the user-input is referring to, it passes the appropriate command to the TaskList for execution.","lastModifiedDate":"2022-04-16"},{"lineNumber":27,"author":{"gitId":"CyberS-N"},"content":" */","lastModifiedDate":"2022-04-16"},{"lineNumber":28,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":29,"author":{"gitId":"CyberS-N"},"content":"public class Parser {","lastModifiedDate":"2022-04-14"},{"lineNumber":30,"author":{"gitId":"CyberS-N"},"content":"    protected static String by;","lastModifiedDate":"2022-04-16"},{"lineNumber":31,"author":{"gitId":"CyberS-N"},"content":"    protected static LocalDate localDate;","lastModifiedDate":"2022-04-16"},{"lineNumber":32,"author":{"gitId":"CyberS-N"},"content":"    protected static LocalDateTime localDateTime;","lastModifiedDate":"2022-04-16"},{"lineNumber":33,"author":{"gitId":"CyberS-N"},"content":"    protected static List\u003cDateTimeFormatter\u003e knownPatterns \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-04-16"},{"lineNumber":34,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-14"},{"lineNumber":35,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-14"},{"lineNumber":36,"author":{"gitId":"CyberS-N"},"content":"    /**","lastModifiedDate":"2022-04-16"},{"lineNumber":37,"author":{"gitId":"CyberS-N"},"content":"     * This method takes in a user-input as a String, makes sense of the command and returns a command to the TaskList for execution or","lastModifiedDate":"2022-04-16"},{"lineNumber":38,"author":{"gitId":"CyberS-N"},"content":"     * returns a relevant Date and Time.","lastModifiedDate":"2022-04-16"},{"lineNumber":39,"author":{"gitId":"CyberS-N"},"content":"     * @param input Provides the user-input field to be parsed.","lastModifiedDate":"2022-04-16"},{"lineNumber":40,"author":{"gitId":"CyberS-N"},"content":"     * @throws DukeException Error if user-input is in a incompatible format.","lastModifiedDate":"2022-04-16"},{"lineNumber":41,"author":{"gitId":"CyberS-N"},"content":"     */","lastModifiedDate":"2022-04-16"},{"lineNumber":42,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":43,"author":{"gitId":"CyberS-N"},"content":"    public static LocalDateTime parse(String input) throws DukeException, IOException {","lastModifiedDate":"2022-04-16"},{"lineNumber":44,"author":{"gitId":"CyberS-N"},"content":"        boolean change \u003d false;","lastModifiedDate":"2022-04-16"},{"lineNumber":45,"author":{"gitId":"CyberS-N"},"content":"        if (input.trim().equalsIgnoreCase(\"bye\"))         { TaskList.Bye();}","lastModifiedDate":"2022-04-16"},{"lineNumber":46,"author":{"gitId":"CyberS-N"},"content":"        else if (input.trim().equalsIgnoreCase(\"list\"))   { TaskList.List();}","lastModifiedDate":"2022-04-16"},{"lineNumber":47,"author":{"gitId":"CyberS-N"},"content":"        else if (input.toLowerCase().contains(\"find\")) { TaskList.Find(input.trim().substring(5));}","lastModifiedDate":"2022-04-16"},{"lineNumber":48,"author":{"gitId":"CyberS-N"},"content":"        else if (input.toLowerCase().contains(\"done\"))               { TaskList.Done(input); change \u003d true;}","lastModifiedDate":"2022-04-16"},{"lineNumber":49,"author":{"gitId":"CyberS-N"},"content":"        else if (input.toLowerCase().contains(\"delete\"))             { TaskList.Delete(input); change \u003d true;}","lastModifiedDate":"2022-04-16"},{"lineNumber":50,"author":{"gitId":"CyberS-N"},"content":"        else if (input.toLowerCase().contains(\"todo\"))               { TaskList.Todo(input); change \u003d true;}","lastModifiedDate":"2022-04-16"},{"lineNumber":51,"author":{"gitId":"CyberS-N"},"content":"        else if (input.toLowerCase().contains(\"undo\"))               { TaskList.Undo();}","lastModifiedDate":"2022-04-16"},{"lineNumber":52,"author":{"gitId":"CyberS-N"},"content":"        else if (input.toLowerCase().contains(\"history\"))            { Undo.printQueue();}","lastModifiedDate":"2022-04-16"},{"lineNumber":53,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":54,"author":{"gitId":"CyberS-N"},"content":"        else if ((input.toLowerCase().contains(\"deadline\")) || (input.toLowerCase().contains(\"event\")) ||","lastModifiedDate":"2022-04-16"},{"lineNumber":55,"author":{"gitId":"CyberS-N"},"content":"                (input.toLowerCase().contains(\"occurrence\")) || (input.contains(\"[D]\")) || (input.contains(\"[E]\"))) {","lastModifiedDate":"2022-04-16"},{"lineNumber":56,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":57,"author":{"gitId":"CyberS-N"},"content":"            int n \u003d 0;","lastModifiedDate":"2022-04-16"},{"lineNumber":58,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":59,"author":{"gitId":"CyberS-N"},"content":"            if (input.contains(\"(\")) {n \u003d input.indexOf(\u0027(\u0027); }","lastModifiedDate":"2022-04-16"},{"lineNumber":60,"author":{"gitId":"CyberS-N"},"content":"            else if (input.contains(\"/\")) {n \u003d input.indexOf(\u0027/\u0027); }","lastModifiedDate":"2022-04-16"},{"lineNumber":61,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":62,"author":{"gitId":"CyberS-N"},"content":"            by \u003d input.substring(n + 4).trim();","lastModifiedDate":"2022-04-16"},{"lineNumber":63,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":64,"author":{"gitId":"CyberS-N"},"content":"            knownPatterns \u003d DateTimeList.knownPatterns;","lastModifiedDate":"2022-04-16"},{"lineNumber":65,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":66,"author":{"gitId":"CyberS-N"},"content":"            for (DateTimeFormatter pattern : knownPatterns) {","lastModifiedDate":"2022-04-16"},{"lineNumber":67,"author":{"gitId":"CyberS-N"},"content":"                try {","lastModifiedDate":"2022-04-16"},{"lineNumber":68,"author":{"gitId":"CyberS-N"},"content":"                    localDate \u003d LocalDate.parse(by,pattern);","lastModifiedDate":"2022-04-16"},{"lineNumber":69,"author":{"gitId":"CyberS-N"},"content":"                    if (localDate \u003d\u003d null) { localDateTime \u003d LocalDateTime.parse(by, pattern);}","lastModifiedDate":"2022-04-16"},{"lineNumber":70,"author":{"gitId":"CyberS-N"},"content":"                } catch (DateTimeParseException ignored) {}","lastModifiedDate":"2022-04-16"},{"lineNumber":71,"author":{"gitId":"CyberS-N"},"content":"            }","lastModifiedDate":"2022-04-16"},{"lineNumber":72,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":73,"author":{"gitId":"CyberS-N"},"content":"            if (localDateTime \u003d\u003d null) {","lastModifiedDate":"2022-04-16"},{"lineNumber":74,"author":{"gitId":"CyberS-N"},"content":"                throw new DukeException(\"Either incorrect format of input or no known date format found: \" + by);","lastModifiedDate":"2022-04-16"},{"lineNumber":75,"author":{"gitId":"CyberS-N"},"content":"            }","lastModifiedDate":"2022-04-16"},{"lineNumber":76,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":77,"author":{"gitId":"CyberS-N"},"content":"            if (input.toLowerCase().contains(\"deadline\"))           { TaskList.Deadline(input, localDateTime); change \u003d true;}","lastModifiedDate":"2022-04-16"},{"lineNumber":78,"author":{"gitId":"CyberS-N"},"content":"            else if (input.toLowerCase().contains(\"event\"))         { TaskList.Event(input,localDateTime); change \u003d true;}","lastModifiedDate":"2022-04-16"},{"lineNumber":79,"author":{"gitId":"CyberS-N"},"content":"            else if ((input.toLowerCase().contains(\"occurrence\")))  { TaskList.Occurrence(input, localDate); }","lastModifiedDate":"2022-04-16"},{"lineNumber":80,"author":{"gitId":"CyberS-N"},"content":"            else return localDateTime;","lastModifiedDate":"2022-04-16"},{"lineNumber":81,"author":{"gitId":"CyberS-N"},"content":"        }","lastModifiedDate":"2022-04-14"},{"lineNumber":82,"author":{"gitId":"CyberS-N"},"content":"        else throw new DukeException(\"Error: Please enter a valid task description\\n\");","lastModifiedDate":"2022-04-16"},{"lineNumber":83,"author":{"gitId":"CyberS-N"},"content":"        if (input.toLowerCase().contains(\"undo\")) { Storage.writeToFile(false);} //Only Write to file but don\u0027t make change to History","lastModifiedDate":"2022-04-16"},{"lineNumber":84,"author":{"gitId":"CyberS-N"},"content":"        else if (change) { Storage.writeToFile(true);} //Write to file and add change to History","lastModifiedDate":"2022-04-16"},{"lineNumber":85,"author":{"gitId":"CyberS-N"},"content":"        return null;","lastModifiedDate":"2022-04-16"},{"lineNumber":86,"author":{"gitId":"CyberS-N"},"content":"    }","lastModifiedDate":"2022-04-14"},{"lineNumber":87,"author":{"gitId":"CyberS-N"},"content":"}","lastModifiedDate":"2022-04-14"}],"authorContributionMap":{"CyberS-N":87}},{"path":"src/main/java/duke/command/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CyberS-N"},"content":"package duke.command;","lastModifiedDate":"2022-04-15"},{"lineNumber":2,"author":{"gitId":"CyberS-N"},"content":"import duke.task.*;","lastModifiedDate":"2022-04-15"},{"lineNumber":3,"author":{"gitId":"CyberS-N"},"content":"import java.io.File;","lastModifiedDate":"2022-04-14"},{"lineNumber":4,"author":{"gitId":"CyberS-N"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-04-14"},{"lineNumber":5,"author":{"gitId":"CyberS-N"},"content":"import java.io.IOException;","lastModifiedDate":"2022-04-14"},{"lineNumber":6,"author":{"gitId":"CyberS-N"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-04-14"},{"lineNumber":7,"author":{"gitId":"CyberS-N"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-04-14"},{"lineNumber":8,"author":{"gitId":"CyberS-N"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-04-14"},{"lineNumber":9,"author":{"gitId":"CyberS-N"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-04-14"},{"lineNumber":10,"author":{"gitId":"CyberS-N"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-04-16"},{"lineNumber":11,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-14"},{"lineNumber":12,"author":{"gitId":"CyberS-N"},"content":"/**","lastModifiedDate":"2022-04-16"},{"lineNumber":13,"author":{"gitId":"CyberS-N"},"content":" * This class provides the ability to load existing task data into the \u0027TaskList\u0027 and save the latest modified \u0027TaskList\u0027 into a file.","lastModifiedDate":"2022-04-16"},{"lineNumber":14,"author":{"gitId":"CyberS-N"},"content":" * \u003cbr\u003e It also provides some basic function to detect if the existing data is in an incompatible format and allows to throw an exception.","lastModifiedDate":"2022-04-16"},{"lineNumber":15,"author":{"gitId":"CyberS-N"},"content":" */","lastModifiedDate":"2022-04-16"},{"lineNumber":16,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":17,"author":{"gitId":"CyberS-N"},"content":"public class Storage {","lastModifiedDate":"2022-04-14"},{"lineNumber":18,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-14"},{"lineNumber":19,"author":{"gitId":"CyberS-N"},"content":"    protected static int count \u003d 0;","lastModifiedDate":"2022-04-14"},{"lineNumber":20,"author":{"gitId":"CyberS-N"},"content":"    protected static String FileLocation \u003d FilePath.FileLocation;","lastModifiedDate":"2022-04-16"},{"lineNumber":21,"author":{"gitId":"CyberS-N"},"content":"    protected static ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-04-14"},{"lineNumber":22,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":23,"author":{"gitId":"CyberS-N"},"content":"    /**","lastModifiedDate":"2022-04-16"},{"lineNumber":24,"author":{"gitId":"CyberS-N"},"content":"     * This method allows to read any existing file contents within the specified filepath and store its contents into \u0027TaskList\u0027.","lastModifiedDate":"2022-04-16"},{"lineNumber":25,"author":{"gitId":"CyberS-N"},"content":"     * @param filePath The filepath for the file that the method is trying to read the data from.","lastModifiedDate":"2022-04-16"},{"lineNumber":26,"author":{"gitId":"CyberS-N"},"content":"     * @throws DukeException Throws an error exception if the data is in an incompatible format.","lastModifiedDate":"2022-04-16"},{"lineNumber":27,"author":{"gitId":"CyberS-N"},"content":"     * @throws IOException Signals that an I/O exception of some sort has occurred.","lastModifiedDate":"2022-04-16"},{"lineNumber":28,"author":{"gitId":"CyberS-N"},"content":"     */","lastModifiedDate":"2022-04-16"},{"lineNumber":29,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-14"},{"lineNumber":30,"author":{"gitId":"CyberS-N"},"content":"    private static void printFileContents(String filePath) throws DukeException , IOException {","lastModifiedDate":"2022-04-14"},{"lineNumber":31,"author":{"gitId":"CyberS-N"},"content":"        File f \u003d new File(filePath); // create a File for the given file path","lastModifiedDate":"2022-04-16"},{"lineNumber":32,"author":{"gitId":"CyberS-N"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2022-04-16"},{"lineNumber":33,"author":{"gitId":"CyberS-N"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2022-04-14"},{"lineNumber":34,"author":{"gitId":"CyberS-N"},"content":"            String current \u003d s.nextLine();","lastModifiedDate":"2022-04-14"},{"lineNumber":35,"author":{"gitId":"CyberS-N"},"content":"            if (current.contains(\"[T]\")) {","lastModifiedDate":"2022-04-14"},{"lineNumber":36,"author":{"gitId":"CyberS-N"},"content":"                String description \u003d current.substring(7);","lastModifiedDate":"2022-04-14"},{"lineNumber":37,"author":{"gitId":"CyberS-N"},"content":"                list.add(new Todo(description));","lastModifiedDate":"2022-04-14"},{"lineNumber":38,"author":{"gitId":"CyberS-N"},"content":"                if (current.contains(\"\\u2713\")) list.get(count).setStatus(true);","lastModifiedDate":"2022-04-16"},{"lineNumber":39,"author":{"gitId":"CyberS-N"},"content":"            }","lastModifiedDate":"2022-04-14"},{"lineNumber":40,"author":{"gitId":"CyberS-N"},"content":"            else if (current.contains(\"[D]\") || current.contains(\"[E]\")) {","lastModifiedDate":"2022-04-14"},{"lineNumber":41,"author":{"gitId":"CyberS-N"},"content":"                int m \u003d current.indexOf(\"(\");","lastModifiedDate":"2022-04-14"},{"lineNumber":42,"author":{"gitId":"CyberS-N"},"content":"                int n \u003d current.indexOf(\")\");","lastModifiedDate":"2022-04-14"},{"lineNumber":43,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":44,"author":{"gitId":"CyberS-N"},"content":"                String description \u003d current.substring(7,m-1);","lastModifiedDate":"2022-04-16"},{"lineNumber":45,"author":{"gitId":"CyberS-N"},"content":"                LocalDateTime localDateTime \u003d Parser.parse(current.substring(0,n));","lastModifiedDate":"2022-04-16"},{"lineNumber":46,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":47,"author":{"gitId":"CyberS-N"},"content":"                assert localDateTime !\u003d null;","lastModifiedDate":"2022-04-16"},{"lineNumber":48,"author":{"gitId":"CyberS-N"},"content":"                if (current.contains(\"[D]\")) {","lastModifiedDate":"2022-04-14"},{"lineNumber":49,"author":{"gitId":"CyberS-N"},"content":"                    list.add(new Deadline(description, localDateTime));","lastModifiedDate":"2022-04-16"},{"lineNumber":50,"author":{"gitId":"CyberS-N"},"content":"                }","lastModifiedDate":"2022-04-14"},{"lineNumber":51,"author":{"gitId":"CyberS-N"},"content":"                else {","lastModifiedDate":"2022-04-14"},{"lineNumber":52,"author":{"gitId":"CyberS-N"},"content":"                    list.add(new Event(description, localDateTime));","lastModifiedDate":"2022-04-16"},{"lineNumber":53,"author":{"gitId":"CyberS-N"},"content":"                }","lastModifiedDate":"2022-04-14"},{"lineNumber":54,"author":{"gitId":"CyberS-N"},"content":"                if (current.contains(\"\\u2713\")) list.get(count).setStatus(true);","lastModifiedDate":"2022-04-16"},{"lineNumber":55,"author":{"gitId":"CyberS-N"},"content":"            }","lastModifiedDate":"2022-04-14"},{"lineNumber":56,"author":{"gitId":"CyberS-N"},"content":"            else { throw new DukeException(\"Error: Task in existing data is incompatible\\n\"); }","lastModifiedDate":"2022-04-16"},{"lineNumber":57,"author":{"gitId":"CyberS-N"},"content":"            count++;","lastModifiedDate":"2022-04-14"},{"lineNumber":58,"author":{"gitId":"CyberS-N"},"content":"        }","lastModifiedDate":"2022-04-14"},{"lineNumber":59,"author":{"gitId":"CyberS-N"},"content":"    }","lastModifiedDate":"2022-04-14"},{"lineNumber":60,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-14"},{"lineNumber":61,"author":{"gitId":"CyberS-N"},"content":"    /**","lastModifiedDate":"2022-04-16"},{"lineNumber":62,"author":{"gitId":"CyberS-N"},"content":"     * This method allows to store the latest modified \u0027TaskList\u0027 contents into the specified filepath. If the file or directory isn\u0027t available, it creates it automatically.","lastModifiedDate":"2022-04-16"},{"lineNumber":63,"author":{"gitId":"CyberS-N"},"content":"     * @throws IOException Signals that an I/O exception of some sort has occurred.","lastModifiedDate":"2022-04-16"},{"lineNumber":64,"author":{"gitId":"CyberS-N"},"content":"     */","lastModifiedDate":"2022-04-16"},{"lineNumber":65,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":66,"author":{"gitId":"CyberS-N"},"content":"    public static void writeToFile(boolean status) throws IOException {","lastModifiedDate":"2022-04-16"},{"lineNumber":67,"author":{"gitId":"CyberS-N"},"content":"        list \u003d TaskList.UpdatedList();","lastModifiedDate":"2022-04-14"},{"lineNumber":68,"author":{"gitId":"CyberS-N"},"content":"        if (status) Undo.addQueue(); //Add to history if change made to TaskList","lastModifiedDate":"2022-04-16"},{"lineNumber":69,"author":{"gitId":"CyberS-N"},"content":"        FileWriter fw \u003d new FileWriter(FileLocation);","lastModifiedDate":"2022-04-16"},{"lineNumber":70,"author":{"gitId":"CyberS-N"},"content":"        for (Task l : list) {","lastModifiedDate":"2022-04-14"},{"lineNumber":71,"author":{"gitId":"CyberS-N"},"content":"            fw.write(l + System.lineSeparator());","lastModifiedDate":"2022-04-14"},{"lineNumber":72,"author":{"gitId":"CyberS-N"},"content":"        }","lastModifiedDate":"2022-04-14"},{"lineNumber":73,"author":{"gitId":"CyberS-N"},"content":"        fw.close();","lastModifiedDate":"2022-04-14"},{"lineNumber":74,"author":{"gitId":"CyberS-N"},"content":"    }","lastModifiedDate":"2022-04-14"},{"lineNumber":75,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-14"},{"lineNumber":76,"author":{"gitId":"CyberS-N"},"content":"    /**","lastModifiedDate":"2022-04-16"},{"lineNumber":77,"author":{"gitId":"CyberS-N"},"content":"     * This main method is to initialize the Storage class to begin the process of reading existing data and loading it into the \u0027TaskList\u0027.","lastModifiedDate":"2022-04-16"},{"lineNumber":78,"author":{"gitId":"CyberS-N"},"content":"     */","lastModifiedDate":"2022-04-16"},{"lineNumber":79,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":80,"author":{"gitId":"CyberS-N"},"content":"    public static void main() {","lastModifiedDate":"2022-04-14"},{"lineNumber":81,"author":{"gitId":"CyberS-N"},"content":"        try {","lastModifiedDate":"2022-04-14"},{"lineNumber":82,"author":{"gitId":"CyberS-N"},"content":"            printFileContents(FileLocation);","lastModifiedDate":"2022-04-14"},{"lineNumber":83,"author":{"gitId":"CyberS-N"},"content":"            new TaskList(list, count); //Initialize data with existing file","lastModifiedDate":"2022-04-16"},{"lineNumber":84,"author":{"gitId":"CyberS-N"},"content":"            Undo.addQueue(); //Initialize data for undo purpose","lastModifiedDate":"2022-04-16"},{"lineNumber":85,"author":{"gitId":"CyberS-N"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2022-04-14"},{"lineNumber":86,"author":{"gitId":"CyberS-N"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-04-14"},{"lineNumber":87,"author":{"gitId":"CyberS-N"},"content":"        }","lastModifiedDate":"2022-04-14"},{"lineNumber":88,"author":{"gitId":"CyberS-N"},"content":"    }","lastModifiedDate":"2022-04-14"},{"lineNumber":89,"author":{"gitId":"CyberS-N"},"content":"}","lastModifiedDate":"2022-04-14"}],"authorContributionMap":{"CyberS-N":89}},{"path":"src/main/java/duke/command/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CyberS-N"},"content":"package duke.command;","lastModifiedDate":"2022-04-15"},{"lineNumber":2,"author":{"gitId":"CyberS-N"},"content":"import duke.task.*;","lastModifiedDate":"2022-04-16"},{"lineNumber":3,"author":{"gitId":"CyberS-N"},"content":"import java.io.IOException;","lastModifiedDate":"2022-04-14"},{"lineNumber":4,"author":{"gitId":"CyberS-N"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-04-14"},{"lineNumber":5,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-14"},{"lineNumber":6,"author":{"gitId":"CyberS-N"},"content":"/**","lastModifiedDate":"2022-04-16"},{"lineNumber":7,"author":{"gitId":"CyberS-N"},"content":" * This class is to represent the user-interface of the program. It displays an introductory message and provides a list of possible commands that the user can input.","lastModifiedDate":"2022-04-16"},{"lineNumber":8,"author":{"gitId":"CyberS-N"},"content":" * \u003cbr\u003e Once the input is registered, it refers the input to the Parser Class to parse and understand the command that the user wants.","lastModifiedDate":"2022-04-16"},{"lineNumber":9,"author":{"gitId":"CyberS-N"},"content":" */","lastModifiedDate":"2022-04-16"},{"lineNumber":10,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":11,"author":{"gitId":"CyberS-N"},"content":"public class UI {","lastModifiedDate":"2022-04-14"},{"lineNumber":12,"author":{"gitId":"CyberS-N"},"content":"    public static void command() throws IOException, DukeException {","lastModifiedDate":"2022-04-14"},{"lineNumber":13,"author":{"gitId":"CyberS-N"},"content":"        Scanner inPut \u003d new Scanner(System.in);","lastModifiedDate":"2022-04-16"},{"lineNumber":14,"author":{"gitId":"CyberS-N"},"content":"        String line \u003d inPut.nextLine();","lastModifiedDate":"2022-04-16"},{"lineNumber":15,"author":{"gitId":"CyberS-N"},"content":"        Parser.parse(line);","lastModifiedDate":"2022-04-14"},{"lineNumber":16,"author":{"gitId":"CyberS-N"},"content":"    }","lastModifiedDate":"2022-04-14"},{"lineNumber":17,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-14"},{"lineNumber":18,"author":{"gitId":"CyberS-N"},"content":"    /**","lastModifiedDate":"2022-04-16"},{"lineNumber":19,"author":{"gitId":"CyberS-N"},"content":"     * This method starts the interaction with the user and asks to provide for a user-input so that it can scan the input and provide it to another class for execution purposes.","lastModifiedDate":"2022-04-16"},{"lineNumber":20,"author":{"gitId":"CyberS-N"},"content":"     * @throws DukeException Error that is thrown if user inputs an incompatible command.","lastModifiedDate":"2022-04-16"},{"lineNumber":21,"author":{"gitId":"CyberS-N"},"content":"     */","lastModifiedDate":"2022-04-16"},{"lineNumber":22,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":23,"author":{"gitId":"CyberS-N"},"content":"    public static void main() throws DukeException, IOException {","lastModifiedDate":"2022-04-16"},{"lineNumber":24,"author":{"gitId":"CyberS-N"},"content":"        System.out.println(\"Hi! This is Duke:) What can I do for you? \\n\");","lastModifiedDate":"2022-04-16"},{"lineNumber":25,"author":{"gitId":"CyberS-N"},"content":"        FilePath.main(); //Confirm current directory / file or choose a different directory / file.","lastModifiedDate":"2022-04-16"},{"lineNumber":26,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":27,"author":{"gitId":"CyberS-N"},"content":"        assert TaskList.UpdatedList().size() \u003e 0;","lastModifiedDate":"2022-04-16"},{"lineNumber":28,"author":{"gitId":"CyberS-N"},"content":"        Parser.parse(\"list\"); //Load initial list onto screen","lastModifiedDate":"2022-04-16"},{"lineNumber":29,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":30,"author":{"gitId":"CyberS-N"},"content":"        System.out.println(\"Here are the valid entries for the program:\\n\" +","lastModifiedDate":"2022-04-16"},{"lineNumber":31,"author":{"gitId":"CyberS-N"},"content":"                \"Bye\\n\"     +","lastModifiedDate":"2022-04-16"},{"lineNumber":32,"author":{"gitId":"CyberS-N"},"content":"                \"List\\n\"    +","lastModifiedDate":"2022-04-16"},{"lineNumber":33,"author":{"gitId":"CyberS-N"},"content":"                \"Find\\n\"    +","lastModifiedDate":"2022-04-16"},{"lineNumber":34,"author":{"gitId":"CyberS-N"},"content":"                \"Undo\\n\"    +","lastModifiedDate":"2022-04-16"},{"lineNumber":35,"author":{"gitId":"CyberS-N"},"content":"                \"History\\n\" +","lastModifiedDate":"2022-04-16"},{"lineNumber":36,"author":{"gitId":"CyberS-N"},"content":"                \"Done         \u0027Number\u0027\\n\" +","lastModifiedDate":"2022-04-16"},{"lineNumber":37,"author":{"gitId":"CyberS-N"},"content":"                \"Delete       \u0027Number\u0027\\n\" +","lastModifiedDate":"2022-04-16"},{"lineNumber":38,"author":{"gitId":"CyberS-N"},"content":"                \"Todo         \u0027Description\u0027\\n\" +","lastModifiedDate":"2022-04-16"},{"lineNumber":39,"author":{"gitId":"CyberS-N"},"content":"                \"Event        \u0027Description\u0027 /at \u0027Date\u0027\\n\" +","lastModifiedDate":"2022-04-16"},{"lineNumber":40,"author":{"gitId":"CyberS-N"},"content":"                \"Deadline     \u0027Description\u0027 /by \u0027Date\u0027\\n\" +","lastModifiedDate":"2022-04-16"},{"lineNumber":41,"author":{"gitId":"CyberS-N"},"content":"                \"Occurrence       /on \u0027Date\u0027\\n\\n\");","lastModifiedDate":"2022-04-16"},{"lineNumber":42,"author":{"gitId":"CyberS-N"},"content":"        while (true) {","lastModifiedDate":"2022-04-14"},{"lineNumber":43,"author":{"gitId":"CyberS-N"},"content":"            try {","lastModifiedDate":"2022-04-14"},{"lineNumber":44,"author":{"gitId":"CyberS-N"},"content":"                command();","lastModifiedDate":"2022-04-14"},{"lineNumber":45,"author":{"gitId":"CyberS-N"},"content":"                System.out.print(\"\\n\");","lastModifiedDate":"2022-04-16"},{"lineNumber":46,"author":{"gitId":"CyberS-N"},"content":"            } catch (DukeException | IOException e) {","lastModifiedDate":"2022-04-14"},{"lineNumber":47,"author":{"gitId":"CyberS-N"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-04-14"},{"lineNumber":48,"author":{"gitId":"CyberS-N"},"content":"            }","lastModifiedDate":"2022-04-14"},{"lineNumber":49,"author":{"gitId":"CyberS-N"},"content":"        }","lastModifiedDate":"2022-04-14"},{"lineNumber":50,"author":{"gitId":"CyberS-N"},"content":"    }","lastModifiedDate":"2022-04-14"},{"lineNumber":51,"author":{"gitId":"CyberS-N"},"content":"}","lastModifiedDate":"2022-04-14"}],"authorContributionMap":{"CyberS-N":51}},{"path":"src/main/java/duke/command/Undo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CyberS-N"},"content":"package duke.command;","lastModifiedDate":"2022-04-16"},{"lineNumber":2,"author":{"gitId":"CyberS-N"},"content":"import duke.task.*;","lastModifiedDate":"2022-04-16"},{"lineNumber":3,"author":{"gitId":"CyberS-N"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-04-16"},{"lineNumber":4,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":5,"author":{"gitId":"CyberS-N"},"content":"/**","lastModifiedDate":"2022-04-16"},{"lineNumber":6,"author":{"gitId":"CyberS-N"},"content":" * This class allows for a user to undo the last action executed and restore it to a previous state. It allows for multiple undo and also erases it from the history.","lastModifiedDate":"2022-04-16"},{"lineNumber":7,"author":{"gitId":"CyberS-N"},"content":" */","lastModifiedDate":"2022-04-16"},{"lineNumber":8,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":9,"author":{"gitId":"CyberS-N"},"content":"public class Undo {","lastModifiedDate":"2022-04-16"},{"lineNumber":10,"author":{"gitId":"CyberS-N"},"content":"    protected static int action \u003d 0;","lastModifiedDate":"2022-04-16"},{"lineNumber":11,"author":{"gitId":"CyberS-N"},"content":"    protected static ArrayList\u003cArrayList\u003cTask\u003e\u003e Queue \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-04-16"},{"lineNumber":12,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":13,"author":{"gitId":"CyberS-N"},"content":"    /**","lastModifiedDate":"2022-04-16"},{"lineNumber":14,"author":{"gitId":"CyberS-N"},"content":"     * This method adds an entire TaskList into one ArrayList slot to capture both the history changes and allow for undo to previous states.","lastModifiedDate":"2022-04-16"},{"lineNumber":15,"author":{"gitId":"CyberS-N"},"content":"     */","lastModifiedDate":"2022-04-16"},{"lineNumber":16,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":17,"author":{"gitId":"CyberS-N"},"content":"    public static void addQueue() {","lastModifiedDate":"2022-04-16"},{"lineNumber":18,"author":{"gitId":"CyberS-N"},"content":"        Queue.add(new ArrayList\u003c\u003e(TaskList.UpdatedList()));","lastModifiedDate":"2022-04-16"},{"lineNumber":19,"author":{"gitId":"CyberS-N"},"content":"        action++;","lastModifiedDate":"2022-04-16"},{"lineNumber":20,"author":{"gitId":"CyberS-N"},"content":"    }","lastModifiedDate":"2022-04-16"},{"lineNumber":21,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":22,"author":{"gitId":"CyberS-N"},"content":"    /**","lastModifiedDate":"2022-04-16"},{"lineNumber":23,"author":{"gitId":"CyberS-N"},"content":"     * This method allows to print the entire history of TaskLists through the user commands that have been made. Also, if there is an undo made, the history gets deleted.","lastModifiedDate":"2022-04-16"},{"lineNumber":24,"author":{"gitId":"CyberS-N"},"content":"     */","lastModifiedDate":"2022-04-16"},{"lineNumber":25,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":26,"author":{"gitId":"CyberS-N"},"content":"    public static void printQueue() {","lastModifiedDate":"2022-04-16"},{"lineNumber":27,"author":{"gitId":"CyberS-N"},"content":"        int count \u003d 0;","lastModifiedDate":"2022-04-16"},{"lineNumber":28,"author":{"gitId":"CyberS-N"},"content":"        for (ArrayList\u003cTask\u003e tasks : Queue) {","lastModifiedDate":"2022-04-16"},{"lineNumber":29,"author":{"gitId":"CyberS-N"},"content":"            if (count \u003d\u003d 0) {","lastModifiedDate":"2022-04-16"},{"lineNumber":30,"author":{"gitId":"CyberS-N"},"content":"                System.out.println(\"List at initialization:\");","lastModifiedDate":"2022-04-16"},{"lineNumber":31,"author":{"gitId":"CyberS-N"},"content":"                if (Queue.get(0).size() \u003d\u003d 0) { System.out.println(\"NULL\");}","lastModifiedDate":"2022-04-16"},{"lineNumber":32,"author":{"gitId":"CyberS-N"},"content":"                else {","lastModifiedDate":"2022-04-16"},{"lineNumber":33,"author":{"gitId":"CyberS-N"},"content":"                    for (Task task : tasks) { System.out.println(task); }","lastModifiedDate":"2022-04-16"},{"lineNumber":34,"author":{"gitId":"CyberS-N"},"content":"                }","lastModifiedDate":"2022-04-16"},{"lineNumber":35,"author":{"gitId":"CyberS-N"},"content":"            }","lastModifiedDate":"2022-04-16"},{"lineNumber":36,"author":{"gitId":"CyberS-N"},"content":"            else {","lastModifiedDate":"2022-04-16"},{"lineNumber":37,"author":{"gitId":"CyberS-N"},"content":"                System.out.println(\"List after action \" + count + \":\");","lastModifiedDate":"2022-04-16"},{"lineNumber":38,"author":{"gitId":"CyberS-N"},"content":"                if (Queue.get(count).size() \u003d\u003d 0 ) { System.out.println(\"NULL\");}","lastModifiedDate":"2022-04-16"},{"lineNumber":39,"author":{"gitId":"CyberS-N"},"content":"                else {","lastModifiedDate":"2022-04-16"},{"lineNumber":40,"author":{"gitId":"CyberS-N"},"content":"                    for (Task task : tasks) {","lastModifiedDate":"2022-04-16"},{"lineNumber":41,"author":{"gitId":"CyberS-N"},"content":"                        System.out.println(task);","lastModifiedDate":"2022-04-16"},{"lineNumber":42,"author":{"gitId":"CyberS-N"},"content":"                    }","lastModifiedDate":"2022-04-16"},{"lineNumber":43,"author":{"gitId":"CyberS-N"},"content":"                }","lastModifiedDate":"2022-04-16"},{"lineNumber":44,"author":{"gitId":"CyberS-N"},"content":"            }","lastModifiedDate":"2022-04-16"},{"lineNumber":45,"author":{"gitId":"CyberS-N"},"content":"            count++;","lastModifiedDate":"2022-04-16"},{"lineNumber":46,"author":{"gitId":"CyberS-N"},"content":"        }","lastModifiedDate":"2022-04-16"},{"lineNumber":47,"author":{"gitId":"CyberS-N"},"content":"    }","lastModifiedDate":"2022-04-16"},{"lineNumber":48,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":49,"author":{"gitId":"CyberS-N"},"content":"    /**","lastModifiedDate":"2022-04-16"},{"lineNumber":50,"author":{"gitId":"CyberS-N"},"content":"     * This method returns the previous TaskList that existed before the latest user action was executed.","lastModifiedDate":"2022-04-16"},{"lineNumber":51,"author":{"gitId":"CyberS-N"},"content":"     * @return Previous TaskList","lastModifiedDate":"2022-04-16"},{"lineNumber":52,"author":{"gitId":"CyberS-N"},"content":"     * @throws DukeException Error displayed if trying to undo at base case","lastModifiedDate":"2022-04-16"},{"lineNumber":53,"author":{"gitId":"CyberS-N"},"content":"     */","lastModifiedDate":"2022-04-16"},{"lineNumber":54,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":55,"author":{"gitId":"CyberS-N"},"content":"    public static ArrayList\u003cTask\u003e undo() throws DukeException {","lastModifiedDate":"2022-04-16"},{"lineNumber":56,"author":{"gitId":"CyberS-N"},"content":"        if (Queue.size() \u003d\u003d 1) { throw new DukeException(\"Error, undo not applicable as no user-input yet or at baseline initialized information\\n\");}","lastModifiedDate":"2022-04-16"},{"lineNumber":57,"author":{"gitId":"CyberS-N"},"content":"        Queue.remove(action - 1);","lastModifiedDate":"2022-04-16"},{"lineNumber":58,"author":{"gitId":"CyberS-N"},"content":"        action--;","lastModifiedDate":"2022-04-16"},{"lineNumber":59,"author":{"gitId":"CyberS-N"},"content":"        return Queue.get(action - 1);","lastModifiedDate":"2022-04-16"},{"lineNumber":60,"author":{"gitId":"CyberS-N"},"content":"    }","lastModifiedDate":"2022-04-16"},{"lineNumber":61,"author":{"gitId":"CyberS-N"},"content":"}","lastModifiedDate":"2022-04-16"}],"authorContributionMap":{"CyberS-N":61}},{"path":"src/main/java/duke/command/package-info.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":2,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":3,"author":{"gitId":"CyberS-N"},"content":"/**","lastModifiedDate":"2022-04-16"},{"lineNumber":4,"author":{"gitId":"CyberS-N"},"content":" * Provides a package that groups the relevant classes used for key execution of the Task Manager program.","lastModifiedDate":"2022-04-16"},{"lineNumber":5,"author":{"gitId":"CyberS-N"},"content":" * \u003cbr\u003e This including the following:","lastModifiedDate":"2022-04-16"},{"lineNumber":6,"author":{"gitId":"CyberS-N"},"content":" * \u003col\u003e","lastModifiedDate":"2022-04-16"},{"lineNumber":7,"author":{"gitId":"CyberS-N"},"content":" *     \u003cli\u003eDuke Class:    Platform for the main execution method.\u003c/li\u003e","lastModifiedDate":"2022-04-16"},{"lineNumber":8,"author":{"gitId":"CyberS-N"},"content":" *     \u003cli\u003eStorage Class: Provides the ability to read and write data.\u003c/li\u003e","lastModifiedDate":"2022-04-16"},{"lineNumber":9,"author":{"gitId":"CyberS-N"},"content":" *     \u003cli\u003eParser Class:  Provides the ability to read a user-input and make sense of it. \u003c/li\u003e","lastModifiedDate":"2022-04-16"},{"lineNumber":10,"author":{"gitId":"CyberS-N"},"content":" *     \u003cli\u003eUi Class:      Provides the ability to interact with the user and capture the user-input.\u003c/li\u003e","lastModifiedDate":"2022-04-16"},{"lineNumber":11,"author":{"gitId":"CyberS-N"},"content":" * \u003c/ol\u003e","lastModifiedDate":"2022-04-16"},{"lineNumber":12,"author":{"gitId":"CyberS-N"},"content":" */","lastModifiedDate":"2022-04-16"},{"lineNumber":13,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":14,"author":{"gitId":"CyberS-N"},"content":"package duke.command;","lastModifiedDate":"2022-04-16"}],"authorContributionMap":{"CyberS-N":14}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CyberS-N"},"content":"package duke.task;","lastModifiedDate":"2022-04-15"},{"lineNumber":2,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-15"},{"lineNumber":3,"author":{"gitId":"CyberS-N"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-04-16"},{"lineNumber":4,"author":{"gitId":"CyberS-N"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-04-16"},{"lineNumber":5,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":6,"author":{"gitId":"CyberS-N"},"content":"/**","lastModifiedDate":"2022-04-16"},{"lineNumber":7,"author":{"gitId":"CyberS-N"},"content":" * This program is a child of the Task program. It helps add an additional classification to the Task program.","lastModifiedDate":"2022-04-16"},{"lineNumber":8,"author":{"gitId":"CyberS-N"},"content":" * \u003cbr\u003eThis form of program includes a task that includes both a description and its associated completion date.","lastModifiedDate":"2022-04-16"},{"lineNumber":9,"author":{"gitId":"CyberS-N"},"content":" */","lastModifiedDate":"2022-04-16"},{"lineNumber":10,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":11,"author":{"gitId":"CyberS-N"},"content":"public class Deadline extends Task{","lastModifiedDate":"2022-04-15"},{"lineNumber":12,"author":{"gitId":"CyberS-N"},"content":"    protected String formattedDateTime;","lastModifiedDate":"2022-04-16"},{"lineNumber":13,"author":{"gitId":"CyberS-N"},"content":"    protected LocalDateTime localDateTime;","lastModifiedDate":"2022-04-16"},{"lineNumber":14,"author":{"gitId":"CyberS-N"},"content":"    protected DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd y HH:mm\");","lastModifiedDate":"2022-04-16"},{"lineNumber":15,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-15"},{"lineNumber":16,"author":{"gitId":"CyberS-N"},"content":"    /**","lastModifiedDate":"2022-04-16"},{"lineNumber":17,"author":{"gitId":"CyberS-N"},"content":"     * This method initialized an deadline task that takes in 2 parameters and creates the task.","lastModifiedDate":"2022-04-16"},{"lineNumber":18,"author":{"gitId":"CyberS-N"},"content":"     * @param description Description of task","lastModifiedDate":"2022-04-16"},{"lineNumber":19,"author":{"gitId":"CyberS-N"},"content":"     * @param localDateTime Scheduled Date / Time of task completion","lastModifiedDate":"2022-04-16"},{"lineNumber":20,"author":{"gitId":"CyberS-N"},"content":"     */","lastModifiedDate":"2022-04-16"},{"lineNumber":21,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":22,"author":{"gitId":"CyberS-N"},"content":"    public Deadline(String description, LocalDateTime localDateTime) {","lastModifiedDate":"2022-04-16"},{"lineNumber":23,"author":{"gitId":"CyberS-N"},"content":"        super(description);","lastModifiedDate":"2022-04-15"},{"lineNumber":24,"author":{"gitId":"CyberS-N"},"content":"        this.localDateTime \u003d localDateTime;","lastModifiedDate":"2022-04-16"},{"lineNumber":25,"author":{"gitId":"CyberS-N"},"content":"        this.formattedDateTime \u003d localDateTime.format(formatter);","lastModifiedDate":"2022-04-16"},{"lineNumber":26,"author":{"gitId":"CyberS-N"},"content":"    }","lastModifiedDate":"2022-04-15"},{"lineNumber":27,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-15"},{"lineNumber":28,"author":{"gitId":"CyberS-N"},"content":"    /**","lastModifiedDate":"2022-04-16"},{"lineNumber":29,"author":{"gitId":"CyberS-N"},"content":"     * This method provides a String format return for the event task.","lastModifiedDate":"2022-04-16"},{"lineNumber":30,"author":{"gitId":"CyberS-N"},"content":"     * @return Returns a String in the unique format specified in the method.","lastModifiedDate":"2022-04-16"},{"lineNumber":31,"author":{"gitId":"CyberS-N"},"content":"     */","lastModifiedDate":"2022-04-16"},{"lineNumber":32,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":33,"author":{"gitId":"CyberS-N"},"content":"    @Override","lastModifiedDate":"2022-04-16"},{"lineNumber":34,"author":{"gitId":"CyberS-N"},"content":"    public String toString() {","lastModifiedDate":"2022-04-15"},{"lineNumber":35,"author":{"gitId":"CyberS-N"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formattedDateTime + \")\";","lastModifiedDate":"2022-04-16"},{"lineNumber":36,"author":{"gitId":"CyberS-N"},"content":"    }","lastModifiedDate":"2022-04-15"},{"lineNumber":37,"author":{"gitId":"CyberS-N"},"content":"}","lastModifiedDate":"2022-04-15"}],"authorContributionMap":{"CyberS-N":37}},{"path":"src/main/java/duke/task/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CyberS-N"},"content":"package duke.task;","lastModifiedDate":"2022-04-15"},{"lineNumber":2,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-15"},{"lineNumber":3,"author":{"gitId":"CyberS-N"},"content":"/**","lastModifiedDate":"2022-04-16"},{"lineNumber":4,"author":{"gitId":"CyberS-N"},"content":" * This class is to provide for a customized Error message that is usually thrown when an incompatible user-input is provided.","lastModifiedDate":"2022-04-16"},{"lineNumber":5,"author":{"gitId":"CyberS-N"},"content":" */","lastModifiedDate":"2022-04-16"},{"lineNumber":6,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":7,"author":{"gitId":"CyberS-N"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2022-04-13"},{"lineNumber":8,"author":{"gitId":"CyberS-N"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-04-13"},{"lineNumber":9,"author":{"gitId":"CyberS-N"},"content":"        super(message);","lastModifiedDate":"2022-04-13"},{"lineNumber":10,"author":{"gitId":"CyberS-N"},"content":"    }","lastModifiedDate":"2022-04-13"},{"lineNumber":11,"author":{"gitId":"CyberS-N"},"content":"}","lastModifiedDate":"2022-04-13"}],"authorContributionMap":{"CyberS-N":11}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CyberS-N"},"content":"package duke.task;","lastModifiedDate":"2022-04-15"},{"lineNumber":2,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-15"},{"lineNumber":3,"author":{"gitId":"CyberS-N"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-04-16"},{"lineNumber":4,"author":{"gitId":"CyberS-N"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-04-16"},{"lineNumber":5,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":6,"author":{"gitId":"CyberS-N"},"content":"/**","lastModifiedDate":"2022-04-16"},{"lineNumber":7,"author":{"gitId":"CyberS-N"},"content":" * This program is a child of the Task program. It helps add an additional classification to the Task program.","lastModifiedDate":"2022-04-16"},{"lineNumber":8,"author":{"gitId":"CyberS-N"},"content":" * \u003cbr\u003eThis form of program includes a task that includes both a description and its associated completion date.","lastModifiedDate":"2022-04-16"},{"lineNumber":9,"author":{"gitId":"CyberS-N"},"content":" */","lastModifiedDate":"2022-04-16"},{"lineNumber":10,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":11,"author":{"gitId":"CyberS-N"},"content":"public class Event extends Task{","lastModifiedDate":"2022-04-15"},{"lineNumber":12,"author":{"gitId":"CyberS-N"},"content":"    protected String formattedDateTime;","lastModifiedDate":"2022-04-16"},{"lineNumber":13,"author":{"gitId":"CyberS-N"},"content":"    protected LocalDateTime localDateTime;","lastModifiedDate":"2022-04-16"},{"lineNumber":14,"author":{"gitId":"CyberS-N"},"content":"    protected DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd y HH:mm\");","lastModifiedDate":"2022-04-16"},{"lineNumber":15,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-15"},{"lineNumber":16,"author":{"gitId":"CyberS-N"},"content":"    /**","lastModifiedDate":"2022-04-16"},{"lineNumber":17,"author":{"gitId":"CyberS-N"},"content":"     * This method initialized an event task that takes in 2 parameters and creates the task.","lastModifiedDate":"2022-04-16"},{"lineNumber":18,"author":{"gitId":"CyberS-N"},"content":"     * @param description Description of task","lastModifiedDate":"2022-04-16"},{"lineNumber":19,"author":{"gitId":"CyberS-N"},"content":"     * @param localDateTime Scheduled Date / Time of task completion","lastModifiedDate":"2022-04-16"},{"lineNumber":20,"author":{"gitId":"CyberS-N"},"content":"     */","lastModifiedDate":"2022-04-16"},{"lineNumber":21,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":22,"author":{"gitId":"CyberS-N"},"content":"    public Event(String description, LocalDateTime localDateTime) {","lastModifiedDate":"2022-04-16"},{"lineNumber":23,"author":{"gitId":"CyberS-N"},"content":"        super(description);","lastModifiedDate":"2022-04-15"},{"lineNumber":24,"author":{"gitId":"CyberS-N"},"content":"        this.localDateTime \u003d localDateTime;","lastModifiedDate":"2022-04-16"},{"lineNumber":25,"author":{"gitId":"CyberS-N"},"content":"        this.formattedDateTime \u003d localDateTime.format(formatter);","lastModifiedDate":"2022-04-16"},{"lineNumber":26,"author":{"gitId":"CyberS-N"},"content":"    }","lastModifiedDate":"2022-04-15"},{"lineNumber":27,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-15"},{"lineNumber":28,"author":{"gitId":"CyberS-N"},"content":"    /**","lastModifiedDate":"2022-04-16"},{"lineNumber":29,"author":{"gitId":"CyberS-N"},"content":"     * This method provides a String format return for the event task.","lastModifiedDate":"2022-04-16"},{"lineNumber":30,"author":{"gitId":"CyberS-N"},"content":"     * @return Returns a String in the unique format specified in the method.","lastModifiedDate":"2022-04-16"},{"lineNumber":31,"author":{"gitId":"CyberS-N"},"content":"     */","lastModifiedDate":"2022-04-16"},{"lineNumber":32,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":33,"author":{"gitId":"CyberS-N"},"content":"    @Override","lastModifiedDate":"2022-04-15"},{"lineNumber":34,"author":{"gitId":"CyberS-N"},"content":"    public String toString() {","lastModifiedDate":"2022-04-15"},{"lineNumber":35,"author":{"gitId":"CyberS-N"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + formattedDateTime + \")\";","lastModifiedDate":"2022-04-16"},{"lineNumber":36,"author":{"gitId":"CyberS-N"},"content":"    }","lastModifiedDate":"2022-04-15"},{"lineNumber":37,"author":{"gitId":"CyberS-N"},"content":"}","lastModifiedDate":"2022-04-15"}],"authorContributionMap":{"CyberS-N":37}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CyberS-N"},"content":"package duke.task;","lastModifiedDate":"2022-04-15"},{"lineNumber":2,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-15"},{"lineNumber":3,"author":{"gitId":"CyberS-N"},"content":"/**","lastModifiedDate":"2022-04-16"},{"lineNumber":4,"author":{"gitId":"CyberS-N"},"content":" * This Task program defines the basic structure for a Task class. It contains the following key components:","lastModifiedDate":"2022-04-16"},{"lineNumber":5,"author":{"gitId":"CyberS-N"},"content":" *  1. Description","lastModifiedDate":"2022-04-16"},{"lineNumber":6,"author":{"gitId":"CyberS-N"},"content":" *  2. isDone Status (Whether task is completed / not completed)","lastModifiedDate":"2022-04-16"},{"lineNumber":7,"author":{"gitId":"CyberS-N"},"content":" * It also contains the basic constructor, a getter and a setter method.","lastModifiedDate":"2022-04-16"},{"lineNumber":8,"author":{"gitId":"CyberS-N"},"content":" */","lastModifiedDate":"2022-04-16"},{"lineNumber":9,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":10,"author":{"gitId":"CyberS-N"},"content":"public class Task {","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"CyberS-N"},"content":"    protected String description;","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"CyberS-N"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-04-13"},{"lineNumber":13,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"CyberS-N"},"content":"    /**","lastModifiedDate":"2022-04-16"},{"lineNumber":15,"author":{"gitId":"CyberS-N"},"content":"     * This method is used to initialize the Task Class using a String description as a variable.","lastModifiedDate":"2022-04-16"},{"lineNumber":16,"author":{"gitId":"CyberS-N"},"content":"     * @param description Registers the description of the Task.","lastModifiedDate":"2022-04-16"},{"lineNumber":17,"author":{"gitId":"CyberS-N"},"content":"     */","lastModifiedDate":"2022-04-16"},{"lineNumber":18,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":19,"author":{"gitId":"CyberS-N"},"content":"    public Task(String description) {","lastModifiedDate":"2022-04-13"},{"lineNumber":20,"author":{"gitId":"CyberS-N"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-04-13"},{"lineNumber":21,"author":{"gitId":"CyberS-N"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-04-13"},{"lineNumber":22,"author":{"gitId":"CyberS-N"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"CyberS-N"},"content":"    /**","lastModifiedDate":"2022-04-16"},{"lineNumber":25,"author":{"gitId":"CyberS-N"},"content":"     * This method is used to retrieve the status of a task (Completed / Not completed).","lastModifiedDate":"2022-04-16"},{"lineNumber":26,"author":{"gitId":"CyberS-N"},"content":"     * @return Returns either a tick or X symbol representing the task completion status.","lastModifiedDate":"2022-04-16"},{"lineNumber":27,"author":{"gitId":"CyberS-N"},"content":"     */","lastModifiedDate":"2022-04-16"},{"lineNumber":28,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-15"},{"lineNumber":29,"author":{"gitId":"CyberS-N"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-04-16"},{"lineNumber":30,"author":{"gitId":"CyberS-N"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols","lastModifiedDate":"2022-04-16"},{"lineNumber":31,"author":{"gitId":"CyberS-N"},"content":"    }","lastModifiedDate":"2022-04-13"},{"lineNumber":32,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-13"},{"lineNumber":33,"author":{"gitId":"CyberS-N"},"content":"    /**","lastModifiedDate":"2022-04-16"},{"lineNumber":34,"author":{"gitId":"CyberS-N"},"content":"     * This method is used to set the status of a task (Completed / Not completed).","lastModifiedDate":"2022-04-16"},{"lineNumber":35,"author":{"gitId":"CyberS-N"},"content":"     * @param isDone Set the status of a task.","lastModifiedDate":"2022-04-16"},{"lineNumber":36,"author":{"gitId":"CyberS-N"},"content":"     */","lastModifiedDate":"2022-04-16"},{"lineNumber":37,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-15"},{"lineNumber":38,"author":{"gitId":"CyberS-N"},"content":"    public void setStatus(boolean isDone) {","lastModifiedDate":"2022-04-16"},{"lineNumber":39,"author":{"gitId":"CyberS-N"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-04-14"},{"lineNumber":40,"author":{"gitId":"CyberS-N"},"content":"    }","lastModifiedDate":"2022-04-14"},{"lineNumber":41,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-14"},{"lineNumber":42,"author":{"gitId":"CyberS-N"},"content":"    /**","lastModifiedDate":"2022-04-16"},{"lineNumber":43,"author":{"gitId":"CyberS-N"},"content":"     * This method is used to return the String output of the Task is a specified manner.","lastModifiedDate":"2022-04-16"},{"lineNumber":44,"author":{"gitId":"CyberS-N"},"content":"     * @return Returns the String that includes the getStatus and description of the task.","lastModifiedDate":"2022-04-16"},{"lineNumber":45,"author":{"gitId":"CyberS-N"},"content":"     */","lastModifiedDate":"2022-04-16"},{"lineNumber":46,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-15"},{"lineNumber":47,"author":{"gitId":"CyberS-N"},"content":"    public String toString() {","lastModifiedDate":"2022-04-16"},{"lineNumber":48,"author":{"gitId":"CyberS-N"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2022-04-13"},{"lineNumber":49,"author":{"gitId":"CyberS-N"},"content":"    }","lastModifiedDate":"2022-04-13"},{"lineNumber":50,"author":{"gitId":"CyberS-N"},"content":"}","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"CyberS-N":50}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CyberS-N"},"content":"package duke.task;","lastModifiedDate":"2022-04-15"},{"lineNumber":2,"author":{"gitId":"CyberS-N"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-04-14"},{"lineNumber":3,"author":{"gitId":"CyberS-N"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-04-16"},{"lineNumber":4,"author":{"gitId":"CyberS-N"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-04-16"},{"lineNumber":5,"author":{"gitId":"CyberS-N"},"content":"import duke.command.Undo;","lastModifiedDate":"2022-04-16"},{"lineNumber":6,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-14"},{"lineNumber":7,"author":{"gitId":"CyberS-N"},"content":"/**","lastModifiedDate":"2022-04-16"},{"lineNumber":8,"author":{"gitId":"CyberS-N"},"content":" * This class is used for evaluating the actions of the multiple user commands such as add / delete tasks etc.","lastModifiedDate":"2022-04-16"},{"lineNumber":9,"author":{"gitId":"CyberS-N"},"content":" * \u003cbr\u003e It contains the following approved actions:","lastModifiedDate":"2022-04-16"},{"lineNumber":10,"author":{"gitId":"CyberS-N"},"content":" * \u003col\u003e","lastModifiedDate":"2022-04-16"},{"lineNumber":11,"author":{"gitId":"CyberS-N"},"content":" *     \u003cli\u003eList: Allows to list all the tasks inside TaskList\u003c/li\u003e","lastModifiedDate":"2022-04-16"},{"lineNumber":12,"author":{"gitId":"CyberS-N"},"content":" *     \u003cli\u003eBye: Exits the Task Manager\u003c/li\u003e","lastModifiedDate":"2022-04-16"},{"lineNumber":13,"author":{"gitId":"CyberS-N"},"content":" *     \u003cli\u003eDone: Marks a task as completed\u003c/li\u003e","lastModifiedDate":"2022-04-16"},{"lineNumber":14,"author":{"gitId":"CyberS-N"},"content":" *     \u003cli\u003eDelete: Deletes a task from the TaskList\u003c/li\u003e","lastModifiedDate":"2022-04-16"},{"lineNumber":15,"author":{"gitId":"CyberS-N"},"content":" *     \u003cli\u003eTodo / Event / Deadline: Adds one of the following tasks into the TaskList\u003c/li\u003e","lastModifiedDate":"2022-04-16"},{"lineNumber":16,"author":{"gitId":"CyberS-N"},"content":" *     \u003cli\u003eOccurrence: Lists which tasks fall on a specified date\u003c/li\u003e","lastModifiedDate":"2022-04-16"},{"lineNumber":17,"author":{"gitId":"CyberS-N"},"content":" * \u003c/ol\u003e","lastModifiedDate":"2022-04-16"},{"lineNumber":18,"author":{"gitId":"CyberS-N"},"content":" */","lastModifiedDate":"2022-04-16"},{"lineNumber":19,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":20,"author":{"gitId":"CyberS-N"},"content":"public class TaskList {","lastModifiedDate":"2022-04-14"},{"lineNumber":21,"author":{"gitId":"CyberS-N"},"content":"    protected static int count;","lastModifiedDate":"2022-04-14"},{"lineNumber":22,"author":{"gitId":"CyberS-N"},"content":"    protected static ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-04-16"},{"lineNumber":23,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-14"},{"lineNumber":24,"author":{"gitId":"CyberS-N"},"content":"    /**","lastModifiedDate":"2022-04-16"},{"lineNumber":25,"author":{"gitId":"CyberS-N"},"content":"     * This method initializes the TaskList ArrayList.","lastModifiedDate":"2022-04-16"},{"lineNumber":26,"author":{"gitId":"CyberS-N"},"content":"     * @param list Provides the list of tasks","lastModifiedDate":"2022-04-16"},{"lineNumber":27,"author":{"gitId":"CyberS-N"},"content":"     * @param count Provides how many tasks have been added","lastModifiedDate":"2022-04-16"},{"lineNumber":28,"author":{"gitId":"CyberS-N"},"content":"     */","lastModifiedDate":"2022-04-16"},{"lineNumber":29,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":30,"author":{"gitId":"CyberS-N"},"content":"    public TaskList(ArrayList\u003cTask\u003e list, int count) {","lastModifiedDate":"2022-04-14"},{"lineNumber":31,"author":{"gitId":"CyberS-N"},"content":"        TaskList.count \u003d count;","lastModifiedDate":"2022-04-14"},{"lineNumber":32,"author":{"gitId":"CyberS-N"},"content":"        TaskList.list \u003d list;","lastModifiedDate":"2022-04-14"},{"lineNumber":33,"author":{"gitId":"CyberS-N"},"content":"    }","lastModifiedDate":"2022-04-14"},{"lineNumber":34,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-14"},{"lineNumber":35,"author":{"gitId":"CyberS-N"},"content":"    /**","lastModifiedDate":"2022-04-16"},{"lineNumber":36,"author":{"gitId":"CyberS-N"},"content":"     * This method is to retrieve the updated TaskList.","lastModifiedDate":"2022-04-16"},{"lineNumber":37,"author":{"gitId":"CyberS-N"},"content":"     * @return Returns the latest updated TaskList.","lastModifiedDate":"2022-04-16"},{"lineNumber":38,"author":{"gitId":"CyberS-N"},"content":"     */","lastModifiedDate":"2022-04-16"},{"lineNumber":39,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":40,"author":{"gitId":"CyberS-N"},"content":"    public static ArrayList\u003cTask\u003e UpdatedList() { return list;}","lastModifiedDate":"2022-04-16"},{"lineNumber":41,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-14"},{"lineNumber":42,"author":{"gitId":"CyberS-N"},"content":"    /**","lastModifiedDate":"2022-04-16"},{"lineNumber":43,"author":{"gitId":"CyberS-N"},"content":"     * This method provides a list of all the tasks currently inside the TaskList.","lastModifiedDate":"2022-04-16"},{"lineNumber":44,"author":{"gitId":"CyberS-N"},"content":"     * @throws DukeException Throws an error if the list is empty.","lastModifiedDate":"2022-04-16"},{"lineNumber":45,"author":{"gitId":"CyberS-N"},"content":"     */","lastModifiedDate":"2022-04-16"},{"lineNumber":46,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":47,"author":{"gitId":"CyberS-N"},"content":"    public static void List() throws DukeException {","lastModifiedDate":"2022-04-14"},{"lineNumber":48,"author":{"gitId":"CyberS-N"},"content":"        if (count \u003d\u003d 0) throw new DukeException(\"There are no items currently in the list\\n\");","lastModifiedDate":"2022-04-16"},{"lineNumber":49,"author":{"gitId":"CyberS-N"},"content":"        System.out.println(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2022-04-14"},{"lineNumber":50,"author":{"gitId":"CyberS-N"},"content":"        int seq \u003d 1;","lastModifiedDate":"2022-04-14"},{"lineNumber":51,"author":{"gitId":"CyberS-N"},"content":"        for (Task l : list) {","lastModifiedDate":"2022-04-14"},{"lineNumber":52,"author":{"gitId":"CyberS-N"},"content":"            System.out.println(seq + \". \" + l);","lastModifiedDate":"2022-04-14"},{"lineNumber":53,"author":{"gitId":"CyberS-N"},"content":"            seq++;","lastModifiedDate":"2022-04-14"},{"lineNumber":54,"author":{"gitId":"CyberS-N"},"content":"        }","lastModifiedDate":"2022-04-14"},{"lineNumber":55,"author":{"gitId":"CyberS-N"},"content":"    }","lastModifiedDate":"2022-04-14"},{"lineNumber":56,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-14"},{"lineNumber":57,"author":{"gitId":"CyberS-N"},"content":"    /**","lastModifiedDate":"2022-04-16"},{"lineNumber":58,"author":{"gitId":"CyberS-N"},"content":"     * This method helps to exit from the Task Manager.","lastModifiedDate":"2022-04-16"},{"lineNumber":59,"author":{"gitId":"CyberS-N"},"content":"     */","lastModifiedDate":"2022-04-16"},{"lineNumber":60,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":61,"author":{"gitId":"CyberS-N"},"content":"    public static void Bye() {","lastModifiedDate":"2022-04-14"},{"lineNumber":62,"author":{"gitId":"CyberS-N"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-04-14"},{"lineNumber":63,"author":{"gitId":"CyberS-N"},"content":"        System.exit(0);","lastModifiedDate":"2022-04-14"},{"lineNumber":64,"author":{"gitId":"CyberS-N"},"content":"    }","lastModifiedDate":"2022-04-14"},{"lineNumber":65,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-14"},{"lineNumber":66,"author":{"gitId":"CyberS-N"},"content":"    /**","lastModifiedDate":"2022-04-16"},{"lineNumber":67,"author":{"gitId":"CyberS-N"},"content":"     * This task helps to mark a task as completed.","lastModifiedDate":"2022-04-16"},{"lineNumber":68,"author":{"gitId":"CyberS-N"},"content":"     * @param line Provide details into which task is to be marked as completed.","lastModifiedDate":"2022-04-16"},{"lineNumber":69,"author":{"gitId":"CyberS-N"},"content":"     * @throws DukeException Throws various exceptions if the user-input is invalid.","lastModifiedDate":"2022-04-16"},{"lineNumber":70,"author":{"gitId":"CyberS-N"},"content":"     */","lastModifiedDate":"2022-04-16"},{"lineNumber":71,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":72,"author":{"gitId":"CyberS-N"},"content":"    public static void Done(String line) throws DukeException {","lastModifiedDate":"2022-04-14"},{"lineNumber":73,"author":{"gitId":"CyberS-N"},"content":"        int m \u003d line.toLowerCase().indexOf(\"done\");","lastModifiedDate":"2022-04-14"},{"lineNumber":74,"author":{"gitId":"CyberS-N"},"content":"        String num \u003d line.substring(m + 4).trim();","lastModifiedDate":"2022-04-14"},{"lineNumber":75,"author":{"gitId":"CyberS-N"},"content":"        if (num.length() \u003c 1) throw new DukeException(\"Error: Please enter which task is done\\n\");","lastModifiedDate":"2022-04-16"},{"lineNumber":76,"author":{"gitId":"CyberS-N"},"content":"        int n \u003d Integer.parseInt(num);","lastModifiedDate":"2022-04-14"},{"lineNumber":77,"author":{"gitId":"CyberS-N"},"content":"        if (n \u003e count) throw new DukeException(\"Error: Please enter a valid task number\\n\");","lastModifiedDate":"2022-04-16"},{"lineNumber":78,"author":{"gitId":"CyberS-N"},"content":"        if (list.get(n - 1).getStatusIcon().equals(\"\\u2713\"))","lastModifiedDate":"2022-04-16"},{"lineNumber":79,"author":{"gitId":"CyberS-N"},"content":"            throw new DukeException(\"Error: Task has already been completed\\n\");","lastModifiedDate":"2022-04-16"},{"lineNumber":80,"author":{"gitId":"CyberS-N"},"content":"        else {","lastModifiedDate":"2022-04-16"},{"lineNumber":81,"author":{"gitId":"CyberS-N"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-04-16"},{"lineNumber":82,"author":{"gitId":"CyberS-N"},"content":"            list.get(n - 1).setStatus(true);","lastModifiedDate":"2022-04-14"},{"lineNumber":83,"author":{"gitId":"CyberS-N"},"content":"            System.out.println(list.get(n - 1));","lastModifiedDate":"2022-04-14"},{"lineNumber":84,"author":{"gitId":"CyberS-N"},"content":"            list \u003d new ArrayList\u003c\u003e(list);","lastModifiedDate":"2022-04-16"},{"lineNumber":85,"author":{"gitId":"CyberS-N"},"content":"        }","lastModifiedDate":"2022-04-14"},{"lineNumber":86,"author":{"gitId":"CyberS-N"},"content":"    }","lastModifiedDate":"2022-04-14"},{"lineNumber":87,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-14"},{"lineNumber":88,"author":{"gitId":"CyberS-N"},"content":"    /**","lastModifiedDate":"2022-04-16"},{"lineNumber":89,"author":{"gitId":"CyberS-N"},"content":"     * This task helps to delete a task.","lastModifiedDate":"2022-04-16"},{"lineNumber":90,"author":{"gitId":"CyberS-N"},"content":"     * @param line Provide details into which task is to be deleted.","lastModifiedDate":"2022-04-16"},{"lineNumber":91,"author":{"gitId":"CyberS-N"},"content":"     * @throws DukeException Throws various exceptions if the user-input is invalid.","lastModifiedDate":"2022-04-16"},{"lineNumber":92,"author":{"gitId":"CyberS-N"},"content":"     */","lastModifiedDate":"2022-04-16"},{"lineNumber":93,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":94,"author":{"gitId":"CyberS-N"},"content":"    public static void Delete(String line) throws DukeException {","lastModifiedDate":"2022-04-14"},{"lineNumber":95,"author":{"gitId":"CyberS-N"},"content":"        int m \u003d line.toLowerCase().indexOf(\"delete\");","lastModifiedDate":"2022-04-14"},{"lineNumber":96,"author":{"gitId":"CyberS-N"},"content":"        String num \u003d line.substring(m + 6).trim();","lastModifiedDate":"2022-04-14"},{"lineNumber":97,"author":{"gitId":"CyberS-N"},"content":"        if (num.length() \u003c 1) throw new DukeException(\"Error: Please enter which task to be deleted\\n\");","lastModifiedDate":"2022-04-16"},{"lineNumber":98,"author":{"gitId":"CyberS-N"},"content":"        int n \u003d Integer.parseInt(num);","lastModifiedDate":"2022-04-14"},{"lineNumber":99,"author":{"gitId":"CyberS-N"},"content":"        if (n \u003e count) throw new DukeException(\"Error: Please enter a valid task number\\n\");","lastModifiedDate":"2022-04-16"},{"lineNumber":100,"author":{"gitId":"CyberS-N"},"content":"        else {","lastModifiedDate":"2022-04-16"},{"lineNumber":101,"author":{"gitId":"CyberS-N"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2022-04-16"},{"lineNumber":102,"author":{"gitId":"CyberS-N"},"content":"            System.out.println(list.get(n - 1));","lastModifiedDate":"2022-04-14"},{"lineNumber":103,"author":{"gitId":"CyberS-N"},"content":"            list.remove(n - 1);","lastModifiedDate":"2022-04-14"},{"lineNumber":104,"author":{"gitId":"CyberS-N"},"content":"            count--;","lastModifiedDate":"2022-04-14"},{"lineNumber":105,"author":{"gitId":"CyberS-N"},"content":"            System.out.println(\"Now you have \" + count + \" tasks in the list.\");","lastModifiedDate":"2022-04-14"},{"lineNumber":106,"author":{"gitId":"CyberS-N"},"content":"        }","lastModifiedDate":"2022-04-14"},{"lineNumber":107,"author":{"gitId":"CyberS-N"},"content":"    }","lastModifiedDate":"2022-04-14"},{"lineNumber":108,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-14"},{"lineNumber":109,"author":{"gitId":"CyberS-N"},"content":"    /**","lastModifiedDate":"2022-04-16"},{"lineNumber":110,"author":{"gitId":"CyberS-N"},"content":"     * This method is to add a Todo task.","lastModifiedDate":"2022-04-16"},{"lineNumber":111,"author":{"gitId":"CyberS-N"},"content":"     * @param line Provides the description of the task.","lastModifiedDate":"2022-04-16"},{"lineNumber":112,"author":{"gitId":"CyberS-N"},"content":"     * @throws DukeException Throws various exceptions if the user-input is invalid.","lastModifiedDate":"2022-04-16"},{"lineNumber":113,"author":{"gitId":"CyberS-N"},"content":"     */","lastModifiedDate":"2022-04-16"},{"lineNumber":114,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":115,"author":{"gitId":"CyberS-N"},"content":"    public static void Todo(String line) throws DukeException {","lastModifiedDate":"2022-04-14"},{"lineNumber":116,"author":{"gitId":"CyberS-N"},"content":"        if (line.trim().length() \u003c 5) throw new DukeException(\"Error: Description of task cannot be empty.\\n\");","lastModifiedDate":"2022-04-16"},{"lineNumber":117,"author":{"gitId":"CyberS-N"},"content":"        int m \u003d line.toLowerCase().indexOf(\"todo\");","lastModifiedDate":"2022-04-14"},{"lineNumber":118,"author":{"gitId":"CyberS-N"},"content":"        String description \u003d line.substring(m + 4).trim();","lastModifiedDate":"2022-04-14"},{"lineNumber":119,"author":{"gitId":"CyberS-N"},"content":"        for (Task l : list) {","lastModifiedDate":"2022-04-14"},{"lineNumber":120,"author":{"gitId":"CyberS-N"},"content":"            if (l.description.equals(description))","lastModifiedDate":"2022-04-16"},{"lineNumber":121,"author":{"gitId":"CyberS-N"},"content":"                throw new DukeException(\"Error: Task has already been added previously\\n\");","lastModifiedDate":"2022-04-16"},{"lineNumber":122,"author":{"gitId":"CyberS-N"},"content":"        }","lastModifiedDate":"2022-04-14"},{"lineNumber":123,"author":{"gitId":"CyberS-N"},"content":"        list.add(new Todo(description));","lastModifiedDate":"2022-04-14"},{"lineNumber":124,"author":{"gitId":"CyberS-N"},"content":"        UpdateStatus();","lastModifiedDate":"2022-04-14"},{"lineNumber":125,"author":{"gitId":"CyberS-N"},"content":"    }","lastModifiedDate":"2022-04-14"},{"lineNumber":126,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-14"},{"lineNumber":127,"author":{"gitId":"CyberS-N"},"content":"    /**","lastModifiedDate":"2022-04-16"},{"lineNumber":128,"author":{"gitId":"CyberS-N"},"content":"     * This method is to add a Deadline task.","lastModifiedDate":"2022-04-16"},{"lineNumber":129,"author":{"gitId":"CyberS-N"},"content":"     * @param line Provides the description of the task.","lastModifiedDate":"2022-04-16"},{"lineNumber":130,"author":{"gitId":"CyberS-N"},"content":"     * @param localDateTime Provides the scheduled Date / Time of the completion of the task.","lastModifiedDate":"2022-04-16"},{"lineNumber":131,"author":{"gitId":"CyberS-N"},"content":"     * @throws DukeException Throws various exceptions if the user-input is invalid.","lastModifiedDate":"2022-04-16"},{"lineNumber":132,"author":{"gitId":"CyberS-N"},"content":"     */","lastModifiedDate":"2022-04-16"},{"lineNumber":133,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":134,"author":{"gitId":"CyberS-N"},"content":"    public static void Deadline(String line, LocalDateTime localDateTime) throws DukeException {","lastModifiedDate":"2022-04-16"},{"lineNumber":135,"author":{"gitId":"CyberS-N"},"content":"        if (line.trim().length() \u003c 9) throw new DukeException(\"Error: Description of task cannot be empty.\\n\");","lastModifiedDate":"2022-04-16"},{"lineNumber":136,"author":{"gitId":"CyberS-N"},"content":"        if (!line.contains(\"/\")) throw new DukeException(\"Error: Please specify time.\\n\");","lastModifiedDate":"2022-04-16"},{"lineNumber":137,"author":{"gitId":"CyberS-N"},"content":"        int m \u003d line.toLowerCase().indexOf(\"deadline\");","lastModifiedDate":"2022-04-14"},{"lineNumber":138,"author":{"gitId":"CyberS-N"},"content":"        int n \u003d line.indexOf(\u0027/\u0027);","lastModifiedDate":"2022-04-14"},{"lineNumber":139,"author":{"gitId":"CyberS-N"},"content":"        String description \u003d line.substring(m + 8, n).trim();","lastModifiedDate":"2022-04-14"},{"lineNumber":140,"author":{"gitId":"CyberS-N"},"content":"        for (Task l : list) {","lastModifiedDate":"2022-04-14"},{"lineNumber":141,"author":{"gitId":"CyberS-N"},"content":"            if (l.description.equals(description))","lastModifiedDate":"2022-04-16"},{"lineNumber":142,"author":{"gitId":"CyberS-N"},"content":"                throw new DukeException(\"Error: Task has already been added previously\\n\");","lastModifiedDate":"2022-04-16"},{"lineNumber":143,"author":{"gitId":"CyberS-N"},"content":"        }","lastModifiedDate":"2022-04-14"},{"lineNumber":144,"author":{"gitId":"CyberS-N"},"content":"        list.add(new Deadline(description, localDateTime));","lastModifiedDate":"2022-04-16"},{"lineNumber":145,"author":{"gitId":"CyberS-N"},"content":"        UpdateStatus();","lastModifiedDate":"2022-04-14"},{"lineNumber":146,"author":{"gitId":"CyberS-N"},"content":"    }","lastModifiedDate":"2022-04-14"},{"lineNumber":147,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-14"},{"lineNumber":148,"author":{"gitId":"CyberS-N"},"content":"    /**","lastModifiedDate":"2022-04-16"},{"lineNumber":149,"author":{"gitId":"CyberS-N"},"content":"     * This method is to add an Event task.","lastModifiedDate":"2022-04-16"},{"lineNumber":150,"author":{"gitId":"CyberS-N"},"content":"     * @param line Provides the description of the task.","lastModifiedDate":"2022-04-16"},{"lineNumber":151,"author":{"gitId":"CyberS-N"},"content":"     * @param localDateTime Provides the scheduled Date / Time of the completion of the task.","lastModifiedDate":"2022-04-16"},{"lineNumber":152,"author":{"gitId":"CyberS-N"},"content":"     * @throws DukeException Throws various exceptions if the user-input is invalid.","lastModifiedDate":"2022-04-16"},{"lineNumber":153,"author":{"gitId":"CyberS-N"},"content":"     */","lastModifiedDate":"2022-04-16"},{"lineNumber":154,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":155,"author":{"gitId":"CyberS-N"},"content":"    public static void Event(String line, LocalDateTime localDateTime) throws DukeException {","lastModifiedDate":"2022-04-16"},{"lineNumber":156,"author":{"gitId":"CyberS-N"},"content":"        if (line.trim().length() \u003c 6) throw new DukeException(\"Error: Description of task cannot be empty.\\n\");","lastModifiedDate":"2022-04-16"},{"lineNumber":157,"author":{"gitId":"CyberS-N"},"content":"        if (!line.contains(\"/\")) throw new DukeException(\"Error: Please specify time.\\n\");","lastModifiedDate":"2022-04-16"},{"lineNumber":158,"author":{"gitId":"CyberS-N"},"content":"        int m \u003d line.toLowerCase().indexOf(\"event\");","lastModifiedDate":"2022-04-14"},{"lineNumber":159,"author":{"gitId":"CyberS-N"},"content":"        int n \u003d line.indexOf(\u0027/\u0027);","lastModifiedDate":"2022-04-14"},{"lineNumber":160,"author":{"gitId":"CyberS-N"},"content":"        String description \u003d line.substring(m + 5, n).trim();","lastModifiedDate":"2022-04-14"},{"lineNumber":161,"author":{"gitId":"CyberS-N"},"content":"        for (Task l : list) {","lastModifiedDate":"2022-04-14"},{"lineNumber":162,"author":{"gitId":"CyberS-N"},"content":"            if (l.description.equals(description))","lastModifiedDate":"2022-04-16"},{"lineNumber":163,"author":{"gitId":"CyberS-N"},"content":"                throw new DukeException(\"Error: Task has already been added previously\\n\");","lastModifiedDate":"2022-04-16"},{"lineNumber":164,"author":{"gitId":"CyberS-N"},"content":"        }","lastModifiedDate":"2022-04-14"},{"lineNumber":165,"author":{"gitId":"CyberS-N"},"content":"        list.add(new Event(description, localDateTime));","lastModifiedDate":"2022-04-16"},{"lineNumber":166,"author":{"gitId":"CyberS-N"},"content":"        UpdateStatus();","lastModifiedDate":"2022-04-14"},{"lineNumber":167,"author":{"gitId":"CyberS-N"},"content":"    }","lastModifiedDate":"2022-04-14"},{"lineNumber":168,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-14"},{"lineNumber":169,"author":{"gitId":"CyberS-N"},"content":"    /**","lastModifiedDate":"2022-04-16"},{"lineNumber":170,"author":{"gitId":"CyberS-N"},"content":"     * This method is to provide a list of all the tasks that have scheduled deadlines on a particular date.","lastModifiedDate":"2022-04-16"},{"lineNumber":171,"author":{"gitId":"CyberS-N"},"content":"     * @param localDate Provides the input for the tasks that are supposed to be completed on that particular date.","lastModifiedDate":"2022-04-16"},{"lineNumber":172,"author":{"gitId":"CyberS-N"},"content":"     */","lastModifiedDate":"2022-04-16"},{"lineNumber":173,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":174,"author":{"gitId":"CyberS-N"},"content":"    public static void Occurrence(String line, LocalDate localDate) throws DukeException {","lastModifiedDate":"2022-04-16"},{"lineNumber":175,"author":{"gitId":"CyberS-N"},"content":"        if (!line.contains(\"/\")) { throw new DukeException(\"Error: Please specify time.\\n\"); }","lastModifiedDate":"2022-04-16"},{"lineNumber":176,"author":{"gitId":"CyberS-N"},"content":"        boolean match \u003d false;","lastModifiedDate":"2022-04-16"},{"lineNumber":177,"author":{"gitId":"CyberS-N"},"content":"        System.out.println(\"Here are the tasks that fall within this date\\n\");","lastModifiedDate":"2022-04-16"},{"lineNumber":178,"author":{"gitId":"CyberS-N"},"content":"        for (Task l : list) {","lastModifiedDate":"2022-04-16"},{"lineNumber":179,"author":{"gitId":"CyberS-N"},"content":"            if (l.toString().contains(\"[D]\")) {","lastModifiedDate":"2022-04-16"},{"lineNumber":180,"author":{"gitId":"CyberS-N"},"content":"                LocalDate target \u003d (((Deadline) l).localDateTime).toLocalDate();","lastModifiedDate":"2022-04-16"},{"lineNumber":181,"author":{"gitId":"CyberS-N"},"content":"                if (target.equals(localDate)) {","lastModifiedDate":"2022-04-16"},{"lineNumber":182,"author":{"gitId":"CyberS-N"},"content":"                    System.out.println(l);","lastModifiedDate":"2022-04-16"},{"lineNumber":183,"author":{"gitId":"CyberS-N"},"content":"                    match \u003d true;","lastModifiedDate":"2022-04-16"},{"lineNumber":184,"author":{"gitId":"CyberS-N"},"content":"                }","lastModifiedDate":"2022-04-16"},{"lineNumber":185,"author":{"gitId":"CyberS-N"},"content":"            }","lastModifiedDate":"2022-04-16"},{"lineNumber":186,"author":{"gitId":"CyberS-N"},"content":"            if (l.toString().contains(\"[E]\")) {","lastModifiedDate":"2022-04-16"},{"lineNumber":187,"author":{"gitId":"CyberS-N"},"content":"                assert l instanceof Event;","lastModifiedDate":"2022-04-16"},{"lineNumber":188,"author":{"gitId":"CyberS-N"},"content":"                LocalDate target \u003d (((Event) l).localDateTime).toLocalDate();","lastModifiedDate":"2022-04-16"},{"lineNumber":189,"author":{"gitId":"CyberS-N"},"content":"                if (target.equals(localDate)) {","lastModifiedDate":"2022-04-16"},{"lineNumber":190,"author":{"gitId":"CyberS-N"},"content":"                    System.out.println(l);","lastModifiedDate":"2022-04-16"},{"lineNumber":191,"author":{"gitId":"CyberS-N"},"content":"                    match \u003d true;","lastModifiedDate":"2022-04-16"},{"lineNumber":192,"author":{"gitId":"CyberS-N"},"content":"                }","lastModifiedDate":"2022-04-16"},{"lineNumber":193,"author":{"gitId":"CyberS-N"},"content":"            }","lastModifiedDate":"2022-04-16"},{"lineNumber":194,"author":{"gitId":"CyberS-N"},"content":"        }","lastModifiedDate":"2022-04-16"},{"lineNumber":195,"author":{"gitId":"CyberS-N"},"content":"        if (!match) {","lastModifiedDate":"2022-04-16"},{"lineNumber":196,"author":{"gitId":"CyberS-N"},"content":"            System.out.print(\"Sorry no tasks fall on this day\\n\");","lastModifiedDate":"2022-04-16"},{"lineNumber":197,"author":{"gitId":"CyberS-N"},"content":"        }","lastModifiedDate":"2022-04-16"},{"lineNumber":198,"author":{"gitId":"CyberS-N"},"content":"    }","lastModifiedDate":"2022-04-16"},{"lineNumber":199,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":200,"author":{"gitId":"CyberS-N"},"content":"    /**","lastModifiedDate":"2022-04-16"},{"lineNumber":201,"author":{"gitId":"CyberS-N"},"content":"     * This method helps to list which task has been added to the TaskList and provide the count for the total number of tasks inside.","lastModifiedDate":"2022-04-16"},{"lineNumber":202,"author":{"gitId":"CyberS-N"},"content":"     */","lastModifiedDate":"2022-04-16"},{"lineNumber":203,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":204,"author":{"gitId":"CyberS-N"},"content":"    public static void UpdateStatus() {","lastModifiedDate":"2022-04-14"},{"lineNumber":205,"author":{"gitId":"CyberS-N"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-04-16"},{"lineNumber":206,"author":{"gitId":"CyberS-N"},"content":"        System.out.println(list.get(count));","lastModifiedDate":"2022-04-14"},{"lineNumber":207,"author":{"gitId":"CyberS-N"},"content":"        count++;","lastModifiedDate":"2022-04-14"},{"lineNumber":208,"author":{"gitId":"CyberS-N"},"content":"        System.out.println(\"Now you have \" + count + \" tasks in the list.\");","lastModifiedDate":"2022-04-14"},{"lineNumber":209,"author":{"gitId":"CyberS-N"},"content":"    }","lastModifiedDate":"2022-04-14"},{"lineNumber":210,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":211,"author":{"gitId":"CyberS-N"},"content":"    /**","lastModifiedDate":"2022-04-16"},{"lineNumber":212,"author":{"gitId":"CyberS-N"},"content":"     * This method helps undo the most recent command and print the Tasks in the TaskList before the last command was given.","lastModifiedDate":"2022-04-16"},{"lineNumber":213,"author":{"gitId":"CyberS-N"},"content":"     * \u003cbr\u003e It also erases the previous change which was added to the History function.","lastModifiedDate":"2022-04-16"},{"lineNumber":214,"author":{"gitId":"CyberS-N"},"content":"     * @throws DukeException Throws an error if the user tries to undo before entering any input or when reached at the initial loaded list.","lastModifiedDate":"2022-04-16"},{"lineNumber":215,"author":{"gitId":"CyberS-N"},"content":"     */","lastModifiedDate":"2022-04-16"},{"lineNumber":216,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":217,"author":{"gitId":"CyberS-N"},"content":"    public static void Undo() throws DukeException {","lastModifiedDate":"2022-04-16"},{"lineNumber":218,"author":{"gitId":"CyberS-N"},"content":"        list \u003d Undo.undo();","lastModifiedDate":"2022-04-16"},{"lineNumber":219,"author":{"gitId":"CyberS-N"},"content":"        count--;","lastModifiedDate":"2022-04-16"},{"lineNumber":220,"author":{"gitId":"CyberS-N"},"content":"        System.out.println(\"Undo completed.\");","lastModifiedDate":"2022-04-16"},{"lineNumber":221,"author":{"gitId":"CyberS-N"},"content":"        if (list.size() \u003d\u003d 0) {","lastModifiedDate":"2022-04-16"},{"lineNumber":222,"author":{"gitId":"CyberS-N"},"content":"            System.out.println(\"The list is now empty\");","lastModifiedDate":"2022-04-16"},{"lineNumber":223,"author":{"gitId":"CyberS-N"},"content":"        }","lastModifiedDate":"2022-04-16"},{"lineNumber":224,"author":{"gitId":"CyberS-N"},"content":"        int seq \u003d 1;","lastModifiedDate":"2022-04-16"},{"lineNumber":225,"author":{"gitId":"CyberS-N"},"content":"        for (Task l : list) {","lastModifiedDate":"2022-04-16"},{"lineNumber":226,"author":{"gitId":"CyberS-N"},"content":"            System.out.println(seq + \". \" + l);","lastModifiedDate":"2022-04-16"},{"lineNumber":227,"author":{"gitId":"CyberS-N"},"content":"            seq++;","lastModifiedDate":"2022-04-16"},{"lineNumber":228,"author":{"gitId":"CyberS-N"},"content":"        }","lastModifiedDate":"2022-04-16"},{"lineNumber":229,"author":{"gitId":"CyberS-N"},"content":"    }","lastModifiedDate":"2022-04-16"},{"lineNumber":230,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":231,"author":{"gitId":"CyberS-N"},"content":"    /**","lastModifiedDate":"2022-04-16"},{"lineNumber":232,"author":{"gitId":"CyberS-N"},"content":"     * This method helps to take a find keyword and displays any tasks in the TaskList that contain that task description.","lastModifiedDate":"2022-04-16"},{"lineNumber":233,"author":{"gitId":"CyberS-N"},"content":"     * @param line Contains the user-input for the tasks description that he wants to find.","lastModifiedDate":"2022-04-16"},{"lineNumber":234,"author":{"gitId":"CyberS-N"},"content":"     */","lastModifiedDate":"2022-04-16"},{"lineNumber":235,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":236,"author":{"gitId":"CyberS-N"},"content":"    public static void Find(String line) {","lastModifiedDate":"2022-04-16"},{"lineNumber":237,"author":{"gitId":"CyberS-N"},"content":"        int seq \u003d 1;","lastModifiedDate":"2022-04-16"},{"lineNumber":238,"author":{"gitId":"CyberS-N"},"content":"        for (Task l : list) {","lastModifiedDate":"2022-04-16"},{"lineNumber":239,"author":{"gitId":"CyberS-N"},"content":"            if(l.description.toLowerCase().contains(line.toLowerCase())) {","lastModifiedDate":"2022-04-16"},{"lineNumber":240,"author":{"gitId":"CyberS-N"},"content":"                System.out.println(seq + \".\" + l);","lastModifiedDate":"2022-04-16"},{"lineNumber":241,"author":{"gitId":"CyberS-N"},"content":"                seq++;","lastModifiedDate":"2022-04-16"},{"lineNumber":242,"author":{"gitId":"CyberS-N"},"content":"            }","lastModifiedDate":"2022-04-16"},{"lineNumber":243,"author":{"gitId":"CyberS-N"},"content":"        }","lastModifiedDate":"2022-04-16"},{"lineNumber":244,"author":{"gitId":"CyberS-N"},"content":"    }","lastModifiedDate":"2022-04-16"},{"lineNumber":245,"author":{"gitId":"CyberS-N"},"content":"}","lastModifiedDate":"2022-04-14"}],"authorContributionMap":{"CyberS-N":245}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CyberS-N"},"content":"package duke.task;","lastModifiedDate":"2022-04-15"},{"lineNumber":2,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-15"},{"lineNumber":3,"author":{"gitId":"CyberS-N"},"content":"/**","lastModifiedDate":"2022-04-16"},{"lineNumber":4,"author":{"gitId":"CyberS-N"},"content":" * This program is a child of the Task program. It helps add an additional classification to the Task program.","lastModifiedDate":"2022-04-16"},{"lineNumber":5,"author":{"gitId":"CyberS-N"},"content":" * This form of program includes a task that includes only a description but has no time set for its completion.","lastModifiedDate":"2022-04-16"},{"lineNumber":6,"author":{"gitId":"CyberS-N"},"content":" */","lastModifiedDate":"2022-04-16"},{"lineNumber":7,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":8,"author":{"gitId":"CyberS-N"},"content":"public class Todo extends Task{","lastModifiedDate":"2022-04-15"},{"lineNumber":9,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-15"},{"lineNumber":10,"author":{"gitId":"CyberS-N"},"content":"    /**","lastModifiedDate":"2022-04-16"},{"lineNumber":11,"author":{"gitId":"CyberS-N"},"content":"     * This method provides a description for the Todo task.","lastModifiedDate":"2022-04-16"},{"lineNumber":12,"author":{"gitId":"CyberS-N"},"content":"     * @param description Provides a description for the Todo task.","lastModifiedDate":"2022-04-16"},{"lineNumber":13,"author":{"gitId":"CyberS-N"},"content":"     */","lastModifiedDate":"2022-04-16"},{"lineNumber":14,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":15,"author":{"gitId":"CyberS-N"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-04-15"},{"lineNumber":16,"author":{"gitId":"CyberS-N"},"content":"        super(description);","lastModifiedDate":"2022-04-15"},{"lineNumber":17,"author":{"gitId":"CyberS-N"},"content":"    }","lastModifiedDate":"2022-04-15"},{"lineNumber":18,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-15"},{"lineNumber":19,"author":{"gitId":"CyberS-N"},"content":"    /**","lastModifiedDate":"2022-04-16"},{"lineNumber":20,"author":{"gitId":"CyberS-N"},"content":"     * This method provides a String format return for the Todo task.","lastModifiedDate":"2022-04-16"},{"lineNumber":21,"author":{"gitId":"CyberS-N"},"content":"     * @return Returns a String in the unique format specified in the method.","lastModifiedDate":"2022-04-16"},{"lineNumber":22,"author":{"gitId":"CyberS-N"},"content":"     */","lastModifiedDate":"2022-04-16"},{"lineNumber":23,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":24,"author":{"gitId":"CyberS-N"},"content":"    @Override","lastModifiedDate":"2022-04-15"},{"lineNumber":25,"author":{"gitId":"CyberS-N"},"content":"    public String toString() {","lastModifiedDate":"2022-04-15"},{"lineNumber":26,"author":{"gitId":"CyberS-N"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-04-15"},{"lineNumber":27,"author":{"gitId":"CyberS-N"},"content":"    }","lastModifiedDate":"2022-04-15"},{"lineNumber":28,"author":{"gitId":"CyberS-N"},"content":"}","lastModifiedDate":"2022-04-15"}],"authorContributionMap":{"CyberS-N":28}},{"path":"src/main/java/duke/task/package-info.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CyberS-N"},"content":"/**","lastModifiedDate":"2022-04-16"},{"lineNumber":2,"author":{"gitId":"CyberS-N"},"content":" * Provides a package that groups the relevant classes used for handling of Tasks in the TaskList.","lastModifiedDate":"2022-04-16"},{"lineNumber":3,"author":{"gitId":"CyberS-N"},"content":" * \u003cbr\u003e This include the following:","lastModifiedDate":"2022-04-16"},{"lineNumber":4,"author":{"gitId":"CyberS-N"},"content":" * \u003col\u003e","lastModifiedDate":"2022-04-16"},{"lineNumber":5,"author":{"gitId":"CyberS-N"},"content":" *     \u003cli\u003eTask Class:                        Provides the template for a Task definition.\u003c/li\u003e","lastModifiedDate":"2022-04-16"},{"lineNumber":6,"author":{"gitId":"CyberS-N"},"content":" *     \u003cli\u003eTodo / Event / Deadline Class:     Provides the ability to add the different kinds of tasks into the TaskList.\u003c/li\u003e","lastModifiedDate":"2022-04-16"},{"lineNumber":7,"author":{"gitId":"CyberS-N"},"content":" *     \u003cli\u003eTaskList Class:                    Provides the ability execute a specific command given by the Parser Class.\u003c/li\u003e","lastModifiedDate":"2022-04-16"},{"lineNumber":8,"author":{"gitId":"CyberS-N"},"content":" *     \u003cli\u003eDukeException Class:               Provides the ability throw a customized error if the user-input contains an incompatible input.\u003c/li\u003e","lastModifiedDate":"2022-04-16"},{"lineNumber":9,"author":{"gitId":"CyberS-N"},"content":" * \u003c/ol\u003e","lastModifiedDate":"2022-04-16"},{"lineNumber":10,"author":{"gitId":"CyberS-N"},"content":" */","lastModifiedDate":"2022-04-16"},{"lineNumber":11,"author":{"gitId":"CyberS-N"},"content":"","lastModifiedDate":"2022-04-16"},{"lineNumber":12,"author":{"gitId":"CyberS-N"},"content":"package duke.task;","lastModifiedDate":"2022-04-16"}],"authorContributionMap":{"CyberS-N":12}}]
