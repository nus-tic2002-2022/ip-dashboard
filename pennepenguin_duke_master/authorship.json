[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"pennepenguin"},"content":"plugins{","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"pennepenguin"},"content":"\tid \u0027java\u0027","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"pennepenguin"},"content":"}","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"pennepenguin"},"content":"jar{","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"pennepenguin"},"content":"\tmanifest {","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"pennepenguin"},"content":"\t\tattributes \u0027Main-Class\u0027: \u0027Duke\u0027","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"pennepenguin"},"content":"\t}","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"pennepenguin"},"content":"}","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"pennepenguin"},"content":"repositories { ","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"pennepenguin"},"content":"\tmavenCentral() ","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"pennepenguin"},"content":"}","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"pennepenguin"},"content":"test {","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"pennepenguin"},"content":"    useJUnitPlatform()","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"pennepenguin"},"content":"}","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"pennepenguin"},"content":"dependencies {","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"pennepenguin"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.7.1\u0027","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"pennepenguin"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.7.1\u0027","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"pennepenguin"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"pennepenguin":22}},{"path":"data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"pennepenguin"},"content":"[E][X] test (at:[invalid_date] [time_unspecified])","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"pennepenguin"},"content":"[D][ ] test (by:2019-12-01 [time_unspecified])","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"pennepenguin"},"content":"[T][X] test123","lastModifiedDate":"2022-02-16"},{"lineNumber":4,"author":{"gitId":"pennepenguin"},"content":"[ ] asdf","lastModifiedDate":"2022-02-16"},{"lineNumber":5,"author":{"gitId":"pennepenguin"},"content":"[E][X] test (at:2019-12-21 17:30)","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"pennepenguin"},"content":"[D][X] test (by:2019-12-01 17:00)","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"pennepenguin"},"content":"[T][X] test123","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"pennepenguin"},"content":"[X] asdf","lastModifiedDate":"2022-02-16"},{"lineNumber":9,"author":{"gitId":"pennepenguin"},"content":"[X] asdftest","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"pennepenguin"},"content":"[T][ ] test test","lastModifiedDate":"2022-03-13"},{"lineNumber":11,"author":{"gitId":"pennepenguin"},"content":"[ ] llist","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"pennepenguin"},"content":"[X] lllist","lastModifiedDate":"2022-03-13"}],"authorContributionMap":{"pennepenguin":12}},{"path":"fruits.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"pennepenguin"},"content":"apples","lastModifiedDate":"2022-02-10"},{"lineNumber":2,"author":{"gitId":"pennepenguin"},"content":"bananas","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"pennepenguin"},"content":"cherries","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"pennepenguin":3}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"pennepenguin"},"content":"@rem","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"pennepenguin"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"pennepenguin"},"content":"@rem","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"pennepenguin"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"pennepenguin"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"pennepenguin"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"pennepenguin"},"content":"@rem","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"pennepenguin"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"pennepenguin"},"content":"@rem","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"pennepenguin"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"pennepenguin"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"pennepenguin"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"pennepenguin"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"pennepenguin"},"content":"@rem limitations under the License.","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"pennepenguin"},"content":"@rem","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"pennepenguin"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"pennepenguin"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"pennepenguin"},"content":"@rem","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"pennepenguin"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"pennepenguin"},"content":"@rem","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"pennepenguin"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"pennepenguin"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"pennepenguin"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"pennepenguin"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"pennepenguin"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"pennepenguin"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"pennepenguin"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"pennepenguin"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"pennepenguin"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2022-03-17"},{"lineNumber":34,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":35,"author":{"gitId":"pennepenguin"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"pennepenguin"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2022-03-17"},{"lineNumber":37,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":38,"author":{"gitId":"pennepenguin"},"content":"@rem Find java.exe","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"pennepenguin"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2022-03-17"},{"lineNumber":40,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":41,"author":{"gitId":"pennepenguin"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"pennepenguin"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"pennepenguin"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute","lastModifiedDate":"2022-03-17"},{"lineNumber":44,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":45,"author":{"gitId":"pennepenguin"},"content":"echo.","lastModifiedDate":"2022-03-17"},{"lineNumber":46,"author":{"gitId":"pennepenguin"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2022-03-17"},{"lineNumber":47,"author":{"gitId":"pennepenguin"},"content":"echo.","lastModifiedDate":"2022-03-17"},{"lineNumber":48,"author":{"gitId":"pennepenguin"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-03-17"},{"lineNumber":49,"author":{"gitId":"pennepenguin"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-03-17"},{"lineNumber":50,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":51,"author":{"gitId":"pennepenguin"},"content":"goto fail","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"pennepenguin"},"content":":findJavaFromJavaHome","lastModifiedDate":"2022-03-17"},{"lineNumber":54,"author":{"gitId":"pennepenguin"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2022-03-17"},{"lineNumber":55,"author":{"gitId":"pennepenguin"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2022-03-17"},{"lineNumber":56,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":57,"author":{"gitId":"pennepenguin"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":59,"author":{"gitId":"pennepenguin"},"content":"echo.","lastModifiedDate":"2022-03-17"},{"lineNumber":60,"author":{"gitId":"pennepenguin"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2022-03-17"},{"lineNumber":61,"author":{"gitId":"pennepenguin"},"content":"echo.","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"pennepenguin"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"pennepenguin"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-03-17"},{"lineNumber":64,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":65,"author":{"gitId":"pennepenguin"},"content":"goto fail","lastModifiedDate":"2022-03-17"},{"lineNumber":66,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":67,"author":{"gitId":"pennepenguin"},"content":":execute","lastModifiedDate":"2022-03-17"},{"lineNumber":68,"author":{"gitId":"pennepenguin"},"content":"@rem Setup the command line","lastModifiedDate":"2022-03-17"},{"lineNumber":69,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":70,"author":{"gitId":"pennepenguin"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2022-03-17"},{"lineNumber":71,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":72,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":73,"author":{"gitId":"pennepenguin"},"content":"@rem Execute Gradle","lastModifiedDate":"2022-03-17"},{"lineNumber":74,"author":{"gitId":"pennepenguin"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2022-03-17"},{"lineNumber":75,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":76,"author":{"gitId":"pennepenguin"},"content":":end","lastModifiedDate":"2022-03-17"},{"lineNumber":77,"author":{"gitId":"pennepenguin"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2022-03-17"},{"lineNumber":78,"author":{"gitId":"pennepenguin"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2022-03-17"},{"lineNumber":79,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":80,"author":{"gitId":"pennepenguin"},"content":":fail","lastModifiedDate":"2022-03-17"},{"lineNumber":81,"author":{"gitId":"pennepenguin"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2022-03-17"},{"lineNumber":82,"author":{"gitId":"pennepenguin"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2022-03-17"},{"lineNumber":83,"author":{"gitId":"pennepenguin"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2022-03-17"},{"lineNumber":84,"author":{"gitId":"pennepenguin"},"content":"exit /b 1","lastModifiedDate":"2022-03-17"},{"lineNumber":85,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":86,"author":{"gitId":"pennepenguin"},"content":":mainEnd","lastModifiedDate":"2022-03-17"},{"lineNumber":87,"author":{"gitId":"pennepenguin"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2022-03-17"},{"lineNumber":88,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":89,"author":{"gitId":"pennepenguin"},"content":":omega","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"pennepenguin":89}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"pennepenguin"},"content":"/*","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"pennepenguin"},"content":" * This file was generated by the Gradle \u0027init\u0027 task.","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"pennepenguin"},"content":" *","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"pennepenguin"},"content":" * The settings file is used to specify which projects to include in your build.","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"pennepenguin"},"content":" *","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"pennepenguin"},"content":" * Detailed information about configuring a multi-project build in Gradle can be found","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"pennepenguin"},"content":" * in the user manual at https://docs.gradle.org/7.4.1/userguide/multi_project_builds.html","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"pennepenguin"},"content":" */","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"pennepenguin"},"content":"rootProject.name \u003d \u0027duke\u0027","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"pennepenguin":10}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pennepenguin"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"pennepenguin"},"content":"    private Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"pennepenguin"},"content":"    private String input;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"pennepenguin"},"content":"    private Storage storage;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"pennepenguin"},"content":"    private Tasklist tasks;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"pennepenguin"},"content":"    private UI ui;","lastModifiedDate":"2022-03-13"},{"lineNumber":9,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"pennepenguin"},"content":"    //The following method takes an input file and reads it. It attempts to store the values from the file into a tasks Tasklist.","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"pennepenguin"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"pennepenguin"},"content":"        ui \u003d new UI();","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"pennepenguin"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"pennepenguin"},"content":"       try {","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"pennepenguin"},"content":"           tasks \u003d new Tasklist(storage.readFromFile());","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"pennepenguin"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"pennepenguin"},"content":"           ui.showLoadingError();","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"pennepenguin"},"content":"           tasks \u003d new Tasklist();","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"pennepenguin"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"pennepenguin"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":22,"author":{"gitId":"pennepenguin"},"content":"    //The following method runs a loop to take in user inputs, until a user types in \u0027bye\u0027 to signal an exit to the program.","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"pennepenguin"},"content":"    public void run(){","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"pennepenguin"},"content":"        while(true) {","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"pennepenguin"},"content":"            input \u003d in.nextLine();","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"pennepenguin"},"content":"            if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"pennepenguin"},"content":"                ui.exit();","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"pennepenguin"},"content":"                in.close();","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"pennepenguin"},"content":"                break;","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"pennepenguin"},"content":"            }else{","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"pennepenguin"},"content":"                ui.Query(tasks, input);","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"pennepenguin"},"content":"            }","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"pennepenguin"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"pennepenguin"},"content":"        storage.saveToFile(tasks);","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"pennepenguin"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"pennepenguin"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2022-02-10"},{"lineNumber":45,"author":{"gitId":"pennepenguin"},"content":"        new Duke(System.getProperty(\"user.dir\")).run();","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"pennepenguin":37,"-":10}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pennepenguin"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2022-02-15"},{"lineNumber":2,"author":{"gitId":"pennepenguin"},"content":"    public DukeException() {","lastModifiedDate":"2022-02-15"},{"lineNumber":3,"author":{"gitId":"pennepenguin"},"content":"        super();","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"pennepenguin"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":5,"author":{"gitId":"pennepenguin"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-02-15"},{"lineNumber":6,"author":{"gitId":"pennepenguin"},"content":"        super(message);","lastModifiedDate":"2022-02-15"},{"lineNumber":7,"author":{"gitId":"pennepenguin"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":8,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"pennepenguin"},"content":"    public DukeException(Throwable cause) {","lastModifiedDate":"2022-02-15"},{"lineNumber":10,"author":{"gitId":"pennepenguin"},"content":"        super(cause);","lastModifiedDate":"2022-02-15"},{"lineNumber":11,"author":{"gitId":"pennepenguin"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":12,"author":{"gitId":"pennepenguin"},"content":"}","lastModifiedDate":"2022-02-15"}],"authorContributionMap":{"pennepenguin":12}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pennepenguin"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"pennepenguin"},"content":"import java.io.File;","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"pennepenguin"},"content":"import java.io.FileReader;","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"pennepenguin"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"pennepenguin"},"content":"import duke.*;","lastModifiedDate":"2022-03-13"},{"lineNumber":6,"author":{"gitId":"pennepenguin"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"pennepenguin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-13"},{"lineNumber":8,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"pennepenguin"},"content":"public class Storage {","lastModifiedDate":"2022-03-12"},{"lineNumber":10,"author":{"gitId":"pennepenguin"},"content":"    protected File f;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"pennepenguin"},"content":"    protected ArrayList\u003cTask\u003e taskArr;","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"pennepenguin"},"content":"    //The following class takes in the supplied value of filepath and uses it to populate variable File f.","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"pennepenguin"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2022-03-12"},{"lineNumber":15,"author":{"gitId":"pennepenguin"},"content":"        this.f \u003d new File(filepath + \"\\\\data.txt\");","lastModifiedDate":"2022-03-12"},{"lineNumber":16,"author":{"gitId":"pennepenguin"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"pennepenguin"},"content":"    //The following method will write to the file specified in File f. The written value is taken from ArrayList taskArr along with the getDescription method.","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"pennepenguin"},"content":"    public void saveToFile(Tasklist tasks) {","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"pennepenguin"},"content":"        try (PrintWriter out \u003d new PrintWriter(f.getAbsoluteFile())) {","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"pennepenguin"},"content":"            for(int i\u003d0;i\u003ctasks.size();i++){","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"pennepenguin"},"content":"                out.println(tasks.get(i).getDescription());","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"pennepenguin"},"content":"            }","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"pennepenguin"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"pennepenguin"},"content":"        catch (Exception e) {","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"pennepenguin"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"pennepenguin"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"pennepenguin"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"pennepenguin"},"content":"    //The following method returns an ArrayList containing the values stored in file (specified in File f)","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"pennepenguin"},"content":"    public ArrayList\u003cTask\u003e readFromFile(){","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"pennepenguin"},"content":"        int counter \u003d 0;","lastModifiedDate":"2022-03-12"},{"lineNumber":33,"author":{"gitId":"pennepenguin"},"content":"        taskArr \u003d new ArrayList\u003cTask\u003e(100);","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"pennepenguin"},"content":"        Pattern event \u003d Pattern.compile(\"^\\\\[E\\\\].*$\");","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"pennepenguin"},"content":"        Pattern deadline \u003d Pattern.compile(\"^\\\\[D\\\\].*$\");","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"pennepenguin"},"content":"        Pattern todo \u003d Pattern.compile(\"^\\\\[T\\\\].*$\");","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"pennepenguin"},"content":"        Pattern isMarked \u003d Pattern.compile(\"^\\\\[X\\\\]\\\\s.*$\");","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"pennepenguin"},"content":"        try {","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"pennepenguin"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(f.getAbsoluteFile()));","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"pennepenguin"},"content":"            String st;","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"pennepenguin"},"content":"            while ((st \u003d br.readLine()) !\u003d null){","lastModifiedDate":"2022-03-12"},{"lineNumber":42,"author":{"gitId":"pennepenguin"},"content":"                if(event.matcher(st).matches()){","lastModifiedDate":"2022-03-12"},{"lineNumber":43,"author":{"gitId":"pennepenguin"},"content":"                    st \u003d st.replaceAll(\"^\\\\[E\\\\]\",\"\");","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"pennepenguin"},"content":"                    if(isMarked.matcher(st).matches()){","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"pennepenguin"},"content":"                        st \u003d st.replaceAll(\"^\\\\[X\\\\]\\\\s\",\"\");","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"pennepenguin"},"content":"                        String[] splited \u003d st.split(\"\\\\(at:\", 2);","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"pennepenguin"},"content":"                        splited[1] \u003d splited[1].replaceAll(\"\\\\)$\", \"\");","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"pennepenguin"},"content":"                        taskArr.add(new Event(splited[0].replaceAll(\"\\\\s+$\",\"\"), splited[1].replaceAll(\"^\\\\s\",\"\")));","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"pennepenguin"},"content":"                        taskArr.get(counter).setDone(true);","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"pennepenguin"},"content":"                    }else{","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"pennepenguin"},"content":"                        st \u003d st.replaceAll(\"^\\\\[\\\\s\\\\]\\\\s\",\"\");","lastModifiedDate":"2022-03-12"},{"lineNumber":52,"author":{"gitId":"pennepenguin"},"content":"                        String[] splited \u003d st.split(\"\\\\(at:\", 2);","lastModifiedDate":"2022-03-12"},{"lineNumber":53,"author":{"gitId":"pennepenguin"},"content":"                        splited[1] \u003d splited[1].replaceAll(\"\\\\)$\", \"\");","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"pennepenguin"},"content":"                        //System.out.println(\"test : \" + splited[0] + \", \" + splited[1] +\"\\n\");","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"pennepenguin"},"content":"                        taskArr.add(new Event(splited[0].replaceAll(\"\\\\s+$\",\"\"), splited[1].replaceAll(\"^\\\\s+\",\"\")));","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"pennepenguin"},"content":"                    }","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"pennepenguin"},"content":"                }else if(deadline.matcher(st).matches()) {","lastModifiedDate":"2022-03-12"},{"lineNumber":58,"author":{"gitId":"pennepenguin"},"content":"                    st \u003d st.replaceAll(\"^\\\\[D\\\\]\", \"\");","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"pennepenguin"},"content":"                    if (isMarked.matcher(st).matches()) {","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"pennepenguin"},"content":"                        st \u003d st.replaceAll(\"^\\\\[X\\\\]\\\\s\", \"\");","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"pennepenguin"},"content":"                        String[] splited \u003d st.split(\"\\\\(by:\", 2);","lastModifiedDate":"2022-03-12"},{"lineNumber":62,"author":{"gitId":"pennepenguin"},"content":"                        splited[1] \u003d splited[1].replaceAll(\"\\\\)$\", \"\");","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"pennepenguin"},"content":"                        taskArr.add(new Deadline(splited[0].replaceAll(\"\\\\s+$\", \"\"), splited[1].replaceAll(\"^\\\\s\", \"\")));","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"pennepenguin"},"content":"                        taskArr.get(counter).setDone(true);","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"pennepenguin"},"content":"                    } else {","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"pennepenguin"},"content":"                        st \u003d st.replaceAll(\"^\\\\[\\\\s\\\\]\\\\s\", \"\");","lastModifiedDate":"2022-03-12"},{"lineNumber":67,"author":{"gitId":"pennepenguin"},"content":"                        String[] splited \u003d st.split(\"\\\\(by:\", 2);","lastModifiedDate":"2022-03-12"},{"lineNumber":68,"author":{"gitId":"pennepenguin"},"content":"                        splited[1] \u003d splited[1].replaceAll(\"\\\\)$\", \"\");","lastModifiedDate":"2022-03-12"},{"lineNumber":69,"author":{"gitId":"pennepenguin"},"content":"                        taskArr.add(new Deadline(splited[0].replaceAll(\"\\\\s+$\", \"\"), splited[1].replaceAll(\"^\\\\s+\", \"\")));","lastModifiedDate":"2022-03-12"},{"lineNumber":70,"author":{"gitId":"pennepenguin"},"content":"                    }","lastModifiedDate":"2022-03-12"},{"lineNumber":71,"author":{"gitId":"pennepenguin"},"content":"                }else if(todo.matcher(st).matches()) {","lastModifiedDate":"2022-03-12"},{"lineNumber":72,"author":{"gitId":"pennepenguin"},"content":"                    st \u003d st.replaceAll(\"^\\\\[T\\\\]\", \"\");","lastModifiedDate":"2022-03-12"},{"lineNumber":73,"author":{"gitId":"pennepenguin"},"content":"                    if (isMarked.matcher(st).matches()) {","lastModifiedDate":"2022-03-12"},{"lineNumber":74,"author":{"gitId":"pennepenguin"},"content":"                        st \u003d st.replaceAll(\"^\\\\[X\\\\]\\\\s\", \"\");","lastModifiedDate":"2022-03-12"},{"lineNumber":75,"author":{"gitId":"pennepenguin"},"content":"                        taskArr.add(new Todo(st));","lastModifiedDate":"2022-03-12"},{"lineNumber":76,"author":{"gitId":"pennepenguin"},"content":"                        taskArr.get(counter).setDone(true);","lastModifiedDate":"2022-03-12"},{"lineNumber":77,"author":{"gitId":"pennepenguin"},"content":"                    } else {","lastModifiedDate":"2022-03-12"},{"lineNumber":78,"author":{"gitId":"pennepenguin"},"content":"                        st \u003d st.replaceAll(\"^\\\\[\\\\s\\\\]\\\\s\", \"\");","lastModifiedDate":"2022-03-12"},{"lineNumber":79,"author":{"gitId":"pennepenguin"},"content":"                        taskArr.add(new Todo(st));","lastModifiedDate":"2022-03-12"},{"lineNumber":80,"author":{"gitId":"pennepenguin"},"content":"                    }","lastModifiedDate":"2022-03-12"},{"lineNumber":81,"author":{"gitId":"pennepenguin"},"content":"                }else{","lastModifiedDate":"2022-03-12"},{"lineNumber":82,"author":{"gitId":"pennepenguin"},"content":"                    if (isMarked.matcher(st).matches()) {","lastModifiedDate":"2022-03-12"},{"lineNumber":83,"author":{"gitId":"pennepenguin"},"content":"                        st \u003d st.replaceAll(\"^\\\\[X\\\\]\\\\s\", \"\");","lastModifiedDate":"2022-03-12"},{"lineNumber":84,"author":{"gitId":"pennepenguin"},"content":"                        taskArr.add(new Task(st));","lastModifiedDate":"2022-03-12"},{"lineNumber":85,"author":{"gitId":"pennepenguin"},"content":"                        taskArr.get(counter).setDone(true);","lastModifiedDate":"2022-03-12"},{"lineNumber":86,"author":{"gitId":"pennepenguin"},"content":"                    } else {","lastModifiedDate":"2022-03-12"},{"lineNumber":87,"author":{"gitId":"pennepenguin"},"content":"                        st \u003d st.replaceAll(\"^\\\\[\\\\s\\\\]\\\\s\", \"\");","lastModifiedDate":"2022-03-12"},{"lineNumber":88,"author":{"gitId":"pennepenguin"},"content":"                        taskArr.add(new Task(st));","lastModifiedDate":"2022-03-12"},{"lineNumber":89,"author":{"gitId":"pennepenguin"},"content":"                    }","lastModifiedDate":"2022-03-12"},{"lineNumber":90,"author":{"gitId":"pennepenguin"},"content":"                }","lastModifiedDate":"2022-03-12"},{"lineNumber":91,"author":{"gitId":"pennepenguin"},"content":"                counter++;","lastModifiedDate":"2022-03-12"},{"lineNumber":92,"author":{"gitId":"pennepenguin"},"content":"            }","lastModifiedDate":"2022-03-12"},{"lineNumber":93,"author":{"gitId":"pennepenguin"},"content":"        }catch(Exception ex){","lastModifiedDate":"2022-03-12"},{"lineNumber":94,"author":{"gitId":"pennepenguin"},"content":"            System.err.println(ex.getMessage());","lastModifiedDate":"2022-03-12"},{"lineNumber":95,"author":{"gitId":"pennepenguin"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":96,"author":{"gitId":"pennepenguin"},"content":"        return taskArr;","lastModifiedDate":"2022-03-12"},{"lineNumber":97,"author":{"gitId":"pennepenguin"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":98,"author":{"gitId":"pennepenguin"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"pennepenguin":98}},{"path":"src/main/java/Tasklist.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pennepenguin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"pennepenguin"},"content":"import duke.*;","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"pennepenguin"},"content":"public class Tasklist {","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"pennepenguin"},"content":"    protected ArrayList\u003cTask\u003e taskArr;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"pennepenguin"},"content":"    public Tasklist(){","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"pennepenguin"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"pennepenguin"},"content":"    //This class takes in an ArrayList and passes the value to the protected ArrayList taskArr.","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"pennepenguin"},"content":"    public Tasklist(ArrayList\u003cTask\u003e taskArr){","lastModifiedDate":"2022-03-12"},{"lineNumber":12,"author":{"gitId":"pennepenguin"},"content":"        this.taskArr \u003d taskArr;","lastModifiedDate":"2022-03-12"},{"lineNumber":13,"author":{"gitId":"pennepenguin"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":14,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"pennepenguin"},"content":"    //This method prints out all values found in the taskArr","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"pennepenguin"},"content":"    public void list(){","lastModifiedDate":"2022-03-12"},{"lineNumber":17,"author":{"gitId":"pennepenguin"},"content":"        for(int i\u003d0;i\u003ctaskArr.size();i++){","lastModifiedDate":"2022-03-12"},{"lineNumber":18,"author":{"gitId":"pennepenguin"},"content":"            System.out.println((i+1) + \". \" + taskArr.get(i).getDescription());","lastModifiedDate":"2022-03-12"},{"lineNumber":19,"author":{"gitId":"pennepenguin"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":20,"author":{"gitId":"pennepenguin"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":21,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"pennepenguin"},"content":"    //This method is used to mark an item on the taskArr. There is an input validation to check if the number supplied is within bounds of the Array List.","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"pennepenguin"},"content":"    public void mark(int i){","lastModifiedDate":"2022-03-12"},{"lineNumber":24,"author":{"gitId":"pennepenguin"},"content":"        if(i \u003c\u003d taskArr.size() \u0026\u0026 i !\u003d 0){","lastModifiedDate":"2022-03-12"},{"lineNumber":25,"author":{"gitId":"pennepenguin"},"content":"            taskArr.get(i-1).setDone(true);","lastModifiedDate":"2022-03-12"},{"lineNumber":26,"author":{"gitId":"pennepenguin"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + taskArr.get(i-1).getDescription());","lastModifiedDate":"2022-03-12"},{"lineNumber":27,"author":{"gitId":"pennepenguin"},"content":"        }else{","lastModifiedDate":"2022-03-12"},{"lineNumber":28,"author":{"gitId":"pennepenguin"},"content":"            System.out.println(\"Out of range!\");","lastModifiedDate":"2022-03-12"},{"lineNumber":29,"author":{"gitId":"pennepenguin"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":30,"author":{"gitId":"pennepenguin"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":31,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":32,"author":{"gitId":"pennepenguin"},"content":"    //This method is used to unmark an item on the taskArr. There is an input validation to check if the number supplied is within bounds of the Array List.","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"pennepenguin"},"content":"    public void unmark(int i){","lastModifiedDate":"2022-03-12"},{"lineNumber":34,"author":{"gitId":"pennepenguin"},"content":"        if(i \u003c\u003d taskArr.size() \u0026\u0026 i !\u003d 0){","lastModifiedDate":"2022-03-12"},{"lineNumber":35,"author":{"gitId":"pennepenguin"},"content":"            taskArr.get(i-1).setDone(false);","lastModifiedDate":"2022-03-12"},{"lineNumber":36,"author":{"gitId":"pennepenguin"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\\n\" + taskArr.get(i-1).getDescription());","lastModifiedDate":"2022-03-12"},{"lineNumber":37,"author":{"gitId":"pennepenguin"},"content":"        }else{","lastModifiedDate":"2022-03-12"},{"lineNumber":38,"author":{"gitId":"pennepenguin"},"content":"            System.out.println(\"Out of range!\");","lastModifiedDate":"2022-03-12"},{"lineNumber":39,"author":{"gitId":"pennepenguin"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":40,"author":{"gitId":"pennepenguin"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":41,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":42,"author":{"gitId":"pennepenguin"},"content":"    //This method is used to delete an item on the taskArr. There is an input validation to check if the number supplied is within bounds of the Array List.","lastModifiedDate":"2022-03-17"},{"lineNumber":43,"author":{"gitId":"pennepenguin"},"content":"    public void delete(int i){","lastModifiedDate":"2022-03-12"},{"lineNumber":44,"author":{"gitId":"pennepenguin"},"content":"        if(i \u003c\u003d taskArr.size() \u0026\u0026 i !\u003d 0){","lastModifiedDate":"2022-03-12"},{"lineNumber":45,"author":{"gitId":"pennepenguin"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task: \\n\" + taskArr.get(i-1).getDescription() + \"\\nNow you have \" + (taskArr.size() - 1) + \" tasks in the list.\");","lastModifiedDate":"2022-03-12"},{"lineNumber":46,"author":{"gitId":"pennepenguin"},"content":"            taskArr.remove(i-1);","lastModifiedDate":"2022-03-12"},{"lineNumber":47,"author":{"gitId":"pennepenguin"},"content":"        }else{","lastModifiedDate":"2022-03-12"},{"lineNumber":48,"author":{"gitId":"pennepenguin"},"content":"            System.out.println(\"Out of range!\");","lastModifiedDate":"2022-03-12"},{"lineNumber":49,"author":{"gitId":"pennepenguin"},"content":"        }","lastModifiedDate":"2022-03-12"},{"lineNumber":50,"author":{"gitId":"pennepenguin"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":51,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":52,"author":{"gitId":"pennepenguin"},"content":"    //Used to add a new task.","lastModifiedDate":"2022-03-17"},{"lineNumber":53,"author":{"gitId":"pennepenguin"},"content":"    public void add(Task task){","lastModifiedDate":"2022-03-12"},{"lineNumber":54,"author":{"gitId":"pennepenguin"},"content":"        taskArr.add(task);","lastModifiedDate":"2022-03-12"},{"lineNumber":55,"author":{"gitId":"pennepenguin"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":56,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":57,"author":{"gitId":"pennepenguin"},"content":"    //Used to get a new task.","lastModifiedDate":"2022-03-17"},{"lineNumber":58,"author":{"gitId":"pennepenguin"},"content":"    public Task get(int i){","lastModifiedDate":"2022-03-12"},{"lineNumber":59,"author":{"gitId":"pennepenguin"},"content":"        return taskArr.get(i);","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"pennepenguin"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":61,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":62,"author":{"gitId":"pennepenguin"},"content":"    //Used to return the size of the taskArr.","lastModifiedDate":"2022-03-17"},{"lineNumber":63,"author":{"gitId":"pennepenguin"},"content":"    public int size(){","lastModifiedDate":"2022-03-12"},{"lineNumber":64,"author":{"gitId":"pennepenguin"},"content":"        return taskArr.size();","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"pennepenguin"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":66,"author":{"gitId":"pennepenguin"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"pennepenguin":66}},{"path":"src/main/java/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pennepenguin"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"pennepenguin"},"content":"import duke.*;","lastModifiedDate":"2022-03-13"},{"lineNumber":3,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":4,"author":{"gitId":"pennepenguin"},"content":"public class UI {","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"pennepenguin"},"content":"    private Pattern m \u003d Pattern.compile(\"^mark\\\\s[0-9]*$\");","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"pennepenguin"},"content":"    private Pattern u \u003d Pattern.compile(\"^unmark\\\\s[0-9]*$\");","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"pennepenguin"},"content":"    private Pattern rm \u003d Pattern.compile(\"^delete\\\\s[0-9]*$\");","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"pennepenguin"},"content":"    private Pattern t \u003d Pattern.compile(\"^todo.*$\");","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"pennepenguin"},"content":"    private Pattern d \u003d Pattern.compile(\"^deadline.*$\");","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"pennepenguin"},"content":"    private Pattern e \u003d Pattern.compile(\"^event.*$\");","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":12,"author":{"gitId":"pennepenguin"},"content":"    public void UI(){","lastModifiedDate":"2022-03-13"},{"lineNumber":13,"author":{"gitId":"pennepenguin"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":14,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":15,"author":{"gitId":"pennepenguin"},"content":"    //The following method takes in the user input and attempts to identify what to do with the input (i.e. store as a Deadline, Event or Task, etc).","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"pennepenguin"},"content":"    //It will then add the new task to the existing Tasklist.","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"pennepenguin"},"content":"    public Tasklist Query(Tasklist tasks, String input) {","lastModifiedDate":"2022-03-13"},{"lineNumber":18,"author":{"gitId":"pennepenguin"},"content":"        switch (input) {","lastModifiedDate":"2022-03-13"},{"lineNumber":19,"author":{"gitId":"pennepenguin"},"content":"            case \"list\":","lastModifiedDate":"2022-03-13"},{"lineNumber":20,"author":{"gitId":"pennepenguin"},"content":"                tasks.list();","lastModifiedDate":"2022-03-13"},{"lineNumber":21,"author":{"gitId":"pennepenguin"},"content":"                break;","lastModifiedDate":"2022-03-13"},{"lineNumber":22,"author":{"gitId":"pennepenguin"},"content":"            default:","lastModifiedDate":"2022-03-13"},{"lineNumber":23,"author":{"gitId":"pennepenguin"},"content":"                if (m.matcher(input).matches()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":24,"author":{"gitId":"pennepenguin"},"content":"                    input \u003d input.replaceAll(\"\\\\D+\", \"\");","lastModifiedDate":"2022-03-13"},{"lineNumber":25,"author":{"gitId":"pennepenguin"},"content":"                    tasks.mark(Integer.parseInt(input));","lastModifiedDate":"2022-03-13"},{"lineNumber":26,"author":{"gitId":"pennepenguin"},"content":"                } else if (u.matcher(input).matches()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":27,"author":{"gitId":"pennepenguin"},"content":"                    input \u003d input.replaceAll(\"\\\\D+\", \"\");","lastModifiedDate":"2022-03-13"},{"lineNumber":28,"author":{"gitId":"pennepenguin"},"content":"                    tasks.unmark(Integer.parseInt(input));","lastModifiedDate":"2022-03-13"},{"lineNumber":29,"author":{"gitId":"pennepenguin"},"content":"                } else if (rm.matcher(input).matches()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":30,"author":{"gitId":"pennepenguin"},"content":"                    input \u003d input.replaceAll(\"\\\\D+\", \"\");","lastModifiedDate":"2022-03-13"},{"lineNumber":31,"author":{"gitId":"pennepenguin"},"content":"                    tasks.delete(Integer.parseInt(input));","lastModifiedDate":"2022-03-13"},{"lineNumber":32,"author":{"gitId":"pennepenguin"},"content":"                } else if (t.matcher(input).matches()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":33,"author":{"gitId":"pennepenguin"},"content":"                    try {","lastModifiedDate":"2022-03-13"},{"lineNumber":34,"author":{"gitId":"pennepenguin"},"content":"                        String[] check \u003d input.split(\" \");","lastModifiedDate":"2022-03-13"},{"lineNumber":35,"author":{"gitId":"pennepenguin"},"content":"                        if (check.length \u003c 2) {","lastModifiedDate":"2022-03-13"},{"lineNumber":36,"author":{"gitId":"pennepenguin"},"content":"                            throw new DukeException(\"Insufficient arguments!\");","lastModifiedDate":"2022-03-13"},{"lineNumber":37,"author":{"gitId":"pennepenguin"},"content":"                        }","lastModifiedDate":"2022-03-13"},{"lineNumber":38,"author":{"gitId":"pennepenguin"},"content":"                        input \u003d input.replaceAll(\"^todo\\\\s\", \"\");","lastModifiedDate":"2022-03-13"},{"lineNumber":39,"author":{"gitId":"pennepenguin"},"content":"                        tasks.add(new Todo(input));","lastModifiedDate":"2022-03-13"},{"lineNumber":40,"author":{"gitId":"pennepenguin"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task: \\n\" + tasks.get(tasks.size() - 1).getDescription() + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":41,"author":{"gitId":"pennepenguin"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2022-03-13"},{"lineNumber":42,"author":{"gitId":"pennepenguin"},"content":"                        System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2022-03-13"},{"lineNumber":43,"author":{"gitId":"pennepenguin"},"content":"                    }","lastModifiedDate":"2022-03-13"},{"lineNumber":44,"author":{"gitId":"pennepenguin"},"content":"                } else if (d.matcher(input).matches()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":45,"author":{"gitId":"pennepenguin"},"content":"                    try {","lastModifiedDate":"2022-03-13"},{"lineNumber":46,"author":{"gitId":"pennepenguin"},"content":"                        String[] check \u003d input.split(\"/by\");","lastModifiedDate":"2022-03-13"},{"lineNumber":47,"author":{"gitId":"pennepenguin"},"content":"                        if (check.length \u003c 2) {","lastModifiedDate":"2022-03-13"},{"lineNumber":48,"author":{"gitId":"pennepenguin"},"content":"                            throw new DukeException(\"Insufficient arguments!\");","lastModifiedDate":"2022-03-13"},{"lineNumber":49,"author":{"gitId":"pennepenguin"},"content":"                        }","lastModifiedDate":"2022-03-13"},{"lineNumber":50,"author":{"gitId":"pennepenguin"},"content":"                        input \u003d input.replaceAll(\"^deadline\\\\s\", \"\");","lastModifiedDate":"2022-03-13"},{"lineNumber":51,"author":{"gitId":"pennepenguin"},"content":"                        String[] splited \u003d input.split(\"/by\", 2);","lastModifiedDate":"2022-03-13"},{"lineNumber":52,"author":{"gitId":"pennepenguin"},"content":"                        tasks.add(new Deadline(splited[0], splited[1].replaceAll(\"^\\\\s\", \"\")));","lastModifiedDate":"2022-03-13"},{"lineNumber":53,"author":{"gitId":"pennepenguin"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task: \\n\" + tasks.get(tasks.size() - 1).getDescription() + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":54,"author":{"gitId":"pennepenguin"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2022-03-13"},{"lineNumber":55,"author":{"gitId":"pennepenguin"},"content":"                        System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2022-03-13"},{"lineNumber":56,"author":{"gitId":"pennepenguin"},"content":"                    }","lastModifiedDate":"2022-03-13"},{"lineNumber":57,"author":{"gitId":"pennepenguin"},"content":"                } else if (e.matcher(input).matches()) {","lastModifiedDate":"2022-03-13"},{"lineNumber":58,"author":{"gitId":"pennepenguin"},"content":"                    try {","lastModifiedDate":"2022-03-13"},{"lineNumber":59,"author":{"gitId":"pennepenguin"},"content":"                        String[] check \u003d input.split(\"/at\");","lastModifiedDate":"2022-03-13"},{"lineNumber":60,"author":{"gitId":"pennepenguin"},"content":"                        if (check.length \u003c 2) {","lastModifiedDate":"2022-03-13"},{"lineNumber":61,"author":{"gitId":"pennepenguin"},"content":"                            throw new DukeException(\"Insufficient arguments!\");","lastModifiedDate":"2022-03-13"},{"lineNumber":62,"author":{"gitId":"pennepenguin"},"content":"                        }","lastModifiedDate":"2022-03-13"},{"lineNumber":63,"author":{"gitId":"pennepenguin"},"content":"                        input \u003d input.replaceAll(\"^event\\\\s\", \"\");","lastModifiedDate":"2022-03-13"},{"lineNumber":64,"author":{"gitId":"pennepenguin"},"content":"                        String[] splited \u003d input.split(\"/at\", 2);","lastModifiedDate":"2022-03-13"},{"lineNumber":65,"author":{"gitId":"pennepenguin"},"content":"                        tasks.add(new Event(splited[0], splited[1].replaceAll(\"^\\\\s\", \"\")));","lastModifiedDate":"2022-03-13"},{"lineNumber":66,"author":{"gitId":"pennepenguin"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task: \\n\" + tasks.get(tasks.size() - 1).getDescription() + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-03-13"},{"lineNumber":67,"author":{"gitId":"pennepenguin"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2022-03-13"},{"lineNumber":68,"author":{"gitId":"pennepenguin"},"content":"                        System.out.println(\"Error: \" + e.getMessage());","lastModifiedDate":"2022-03-13"},{"lineNumber":69,"author":{"gitId":"pennepenguin"},"content":"                    }","lastModifiedDate":"2022-03-13"},{"lineNumber":70,"author":{"gitId":"pennepenguin"},"content":"                } else if (input.length() \u003e 0) {","lastModifiedDate":"2022-03-13"},{"lineNumber":71,"author":{"gitId":"pennepenguin"},"content":"                    tasks.add(new Task(input));","lastModifiedDate":"2022-03-13"},{"lineNumber":72,"author":{"gitId":"pennepenguin"},"content":"                    System.out.println(\"added: \" + input);","lastModifiedDate":"2022-03-13"},{"lineNumber":73,"author":{"gitId":"pennepenguin"},"content":"                } else {","lastModifiedDate":"2022-03-13"},{"lineNumber":74,"author":{"gitId":"pennepenguin"},"content":"                    System.out.println(\"Please enter something!\");","lastModifiedDate":"2022-03-13"},{"lineNumber":75,"author":{"gitId":"pennepenguin"},"content":"                }","lastModifiedDate":"2022-03-13"},{"lineNumber":76,"author":{"gitId":"pennepenguin"},"content":"        }","lastModifiedDate":"2022-03-13"},{"lineNumber":77,"author":{"gitId":"pennepenguin"},"content":"        return tasks;","lastModifiedDate":"2022-03-13"},{"lineNumber":78,"author":{"gitId":"pennepenguin"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":79,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":80,"author":{"gitId":"pennepenguin"},"content":"    //Exit method. Prints an exit message to the user.","lastModifiedDate":"2022-03-17"},{"lineNumber":81,"author":{"gitId":"pennepenguin"},"content":"    public void exit(){","lastModifiedDate":"2022-03-13"},{"lineNumber":82,"author":{"gitId":"pennepenguin"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-03-13"},{"lineNumber":83,"author":{"gitId":"pennepenguin"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":84,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-13"},{"lineNumber":85,"author":{"gitId":"pennepenguin"},"content":"    //The following method prints an error to inform the user that the specified file location is invalid or the file is unavailable.","lastModifiedDate":"2022-03-17"},{"lineNumber":86,"author":{"gitId":"pennepenguin"},"content":"    public void showLoadingError(){","lastModifiedDate":"2022-03-13"},{"lineNumber":87,"author":{"gitId":"pennepenguin"},"content":"        System.out.println(\"Error: Unable to read or locate local saved file!\");","lastModifiedDate":"2022-03-13"},{"lineNumber":88,"author":{"gitId":"pennepenguin"},"content":"    }","lastModifiedDate":"2022-03-13"},{"lineNumber":89,"author":{"gitId":"pennepenguin"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"pennepenguin":89}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pennepenguin"},"content":"package duke;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"pennepenguin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"pennepenguin"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"pennepenguin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"pennepenguin"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"pennepenguin"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"pennepenguin"},"content":"public class Deadline extends Task{","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"pennepenguin"},"content":"    protected LocalDate by;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"pennepenguin"},"content":"    protected LocalTime time;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"pennepenguin"},"content":"    protected Pattern timePattern \u003d Pattern.compile(\"^[0-2][0-9]:[0-5][0-9]$\");","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":13,"author":{"gitId":"pennepenguin"},"content":"    //This class takes in 2 parameters; String description and String input. String input is the Date/Time provided by the user.","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"pennepenguin"},"content":"    //It will perform a try to see if the input can be parsed into date/time format.","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"pennepenguin"},"content":"    public Deadline(String description, String input) {","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"pennepenguin"},"content":"        super(description);","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"pennepenguin"},"content":"        try {","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"pennepenguin"},"content":"            String[] splited \u003d input.split(\"[\\\\s]\", 2);","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"pennepenguin"},"content":"            try {","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"pennepenguin"},"content":"                this.by \u003d LocalDate.parse(splited[0]);","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"pennepenguin"},"content":"            } catch (Exception e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"pennepenguin"},"content":"                this.by \u003d null;","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"pennepenguin"},"content":"            }","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"pennepenguin"},"content":"            if (splited[1].matches(timePattern.pattern()))","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"pennepenguin"},"content":"                this.time \u003d LocalTime.parse(splited[1]);","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"pennepenguin"},"content":"            else","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"pennepenguin"},"content":"                this.time \u003d null;","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"pennepenguin"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"pennepenguin"},"content":"            this.by \u003d null;","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"pennepenguin"},"content":"            this.time \u003d null;","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"pennepenguin"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"pennepenguin"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":34,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":35,"author":{"gitId":"pennepenguin"},"content":"    //The following method returns the description together with the date/time values of the Deadline class.","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"pennepenguin"},"content":"    @Override","lastModifiedDate":"2022-02-15"},{"lineNumber":37,"author":{"gitId":"pennepenguin"},"content":"    public String getDescription() {","lastModifiedDate":"2022-02-15"},{"lineNumber":38,"author":{"gitId":"pennepenguin"},"content":"        return \"[D]\" + super.getDescription() + \" (by:\" + ((by!\u003dnull)?by:\"[invalid_date]\") + \" \" + ((time!\u003dnull)?time:\"[time_unspecified]\") + \")\";","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"pennepenguin"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":40,"author":{"gitId":"pennepenguin"},"content":"}","lastModifiedDate":"2022-02-15"}],"authorContributionMap":{"pennepenguin":40}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pennepenguin"},"content":"package duke;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"pennepenguin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"pennepenguin"},"content":"import java.time.LocalTime;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"pennepenguin"},"content":"import java.util.concurrent.ExecutionException;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"pennepenguin"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"pennepenguin"},"content":"public class Event extends Task{","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"pennepenguin"},"content":"    protected LocalDate at;","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"pennepenguin"},"content":"    protected LocalTime time;","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"pennepenguin"},"content":"    protected Pattern timePattern \u003d Pattern.compile(\"^[0-2][0-9]:[0-5][0-9]$\");","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":13,"author":{"gitId":"pennepenguin"},"content":"    //This class takes in 2 parameters; String description and String input. String input is the Date/Time provided by the user.","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"pennepenguin"},"content":"    //It will perform a try to see if the input can be parsed into date/time format.","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"pennepenguin"},"content":"    public Event(String description, String input) {","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"pennepenguin"},"content":"        super(description);","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"pennepenguin"},"content":"        try {","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"pennepenguin"},"content":"            String[] splited \u003d input.split(\"[\\\\s]\", 2);","lastModifiedDate":"2022-03-17"},{"lineNumber":19,"author":{"gitId":"pennepenguin"},"content":"            try {","lastModifiedDate":"2022-03-17"},{"lineNumber":20,"author":{"gitId":"pennepenguin"},"content":"                this.at \u003d LocalDate.parse(splited[0]);","lastModifiedDate":"2022-03-17"},{"lineNumber":21,"author":{"gitId":"pennepenguin"},"content":"            }catch(Exception e){","lastModifiedDate":"2022-03-17"},{"lineNumber":22,"author":{"gitId":"pennepenguin"},"content":"                this.at \u003d null;","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"pennepenguin"},"content":"            }","lastModifiedDate":"2022-03-17"},{"lineNumber":24,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":25,"author":{"gitId":"pennepenguin"},"content":"            if(splited[1].matches(timePattern.pattern()))","lastModifiedDate":"2022-03-17"},{"lineNumber":26,"author":{"gitId":"pennepenguin"},"content":"                this.time \u003d LocalTime.parse(splited[1]);","lastModifiedDate":"2022-03-17"},{"lineNumber":27,"author":{"gitId":"pennepenguin"},"content":"            else","lastModifiedDate":"2022-03-17"},{"lineNumber":28,"author":{"gitId":"pennepenguin"},"content":"                this.time \u003d null;","lastModifiedDate":"2022-03-17"},{"lineNumber":29,"author":{"gitId":"pennepenguin"},"content":"        } catch (Exception e) {","lastModifiedDate":"2022-03-17"},{"lineNumber":30,"author":{"gitId":"pennepenguin"},"content":"            this.at \u003d null;","lastModifiedDate":"2022-03-17"},{"lineNumber":31,"author":{"gitId":"pennepenguin"},"content":"            this.time \u003d null;","lastModifiedDate":"2022-03-17"},{"lineNumber":32,"author":{"gitId":"pennepenguin"},"content":"        }","lastModifiedDate":"2022-03-17"},{"lineNumber":33,"author":{"gitId":"pennepenguin"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":34,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":35,"author":{"gitId":"pennepenguin"},"content":"    //The following method returns the description together with the date/time values of the Event class.","lastModifiedDate":"2022-03-17"},{"lineNumber":36,"author":{"gitId":"pennepenguin"},"content":"    @Override","lastModifiedDate":"2022-02-15"},{"lineNumber":37,"author":{"gitId":"pennepenguin"},"content":"    public String getDescription() {","lastModifiedDate":"2022-02-15"},{"lineNumber":38,"author":{"gitId":"pennepenguin"},"content":"        return \"[E]\" +  super.getDescription() + \" (at:\" + ((at!\u003dnull)?at:\"[invalid_date]\") + \" \" + ((time!\u003dnull)?time:\"[time_unspecified]\") + \")\";","lastModifiedDate":"2022-03-17"},{"lineNumber":39,"author":{"gitId":"pennepenguin"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":40,"author":{"gitId":"pennepenguin"},"content":"}","lastModifiedDate":"2022-02-15"}],"authorContributionMap":{"pennepenguin":40}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pennepenguin"},"content":"package duke;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"pennepenguin"},"content":"public class Task {","lastModifiedDate":"2022-02-10"},{"lineNumber":3,"author":{"gitId":"pennepenguin"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"pennepenguin"},"content":"    protected String description;","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":6,"author":{"gitId":"pennepenguin"},"content":"    //When task is created, it takes in the value of String description and stores it in the protected String description.","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"pennepenguin"},"content":"    public Task(String description) {","lastModifiedDate":"2022-02-10"},{"lineNumber":8,"author":{"gitId":"pennepenguin"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-02-10"},{"lineNumber":9,"author":{"gitId":"pennepenguin"},"content":"        isDone \u003d false;","lastModifiedDate":"2022-02-10"},{"lineNumber":10,"author":{"gitId":"pennepenguin"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":11,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":12,"author":{"gitId":"pennepenguin"},"content":"    //The following method returns the description.","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"pennepenguin"},"content":"    public String getDescription() {","lastModifiedDate":"2022-02-10"},{"lineNumber":14,"author":{"gitId":"pennepenguin"},"content":"        return \"[\" + (isDone() ? (\"X\"):(\" \")) + \"] \" + description;","lastModifiedDate":"2022-02-15"},{"lineNumber":15,"author":{"gitId":"pennepenguin"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":16,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":17,"author":{"gitId":"pennepenguin"},"content":"    //The following method sets the protected boolean isDone to the value specified.","lastModifiedDate":"2022-03-17"},{"lineNumber":18,"author":{"gitId":"pennepenguin"},"content":"    public void setDone(boolean isDone){","lastModifiedDate":"2022-02-10"},{"lineNumber":19,"author":{"gitId":"pennepenguin"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-02-11"},{"lineNumber":20,"author":{"gitId":"pennepenguin"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":21,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":22,"author":{"gitId":"pennepenguin"},"content":"    //The following method returns the value of the boolean isDone.","lastModifiedDate":"2022-03-17"},{"lineNumber":23,"author":{"gitId":"pennepenguin"},"content":"    public boolean isDone(){","lastModifiedDate":"2022-02-10"},{"lineNumber":24,"author":{"gitId":"pennepenguin"},"content":"        return this.isDone;","lastModifiedDate":"2022-02-10"},{"lineNumber":25,"author":{"gitId":"pennepenguin"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":26,"author":{"gitId":"pennepenguin"},"content":"}","lastModifiedDate":"2022-02-10"}],"authorContributionMap":{"pennepenguin":26}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pennepenguin"},"content":"package duke;","lastModifiedDate":"2022-03-13"},{"lineNumber":2,"author":{"gitId":"pennepenguin"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-02-15"},{"lineNumber":3,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":4,"author":{"gitId":"pennepenguin"},"content":"    //When todo is created, it takes in the value of String description and stores it in the protected String description.","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"pennepenguin"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-02-15"},{"lineNumber":6,"author":{"gitId":"pennepenguin"},"content":"        super(description);","lastModifiedDate":"2022-02-15"},{"lineNumber":7,"author":{"gitId":"pennepenguin"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":8,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"pennepenguin"},"content":"    //The following method returns the description.","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"pennepenguin"},"content":"    @Override","lastModifiedDate":"2022-02-15"},{"lineNumber":11,"author":{"gitId":"pennepenguin"},"content":"    public String getDescription() {","lastModifiedDate":"2022-02-15"},{"lineNumber":12,"author":{"gitId":"pennepenguin"},"content":"        return \"[T]\" +  super.getDescription();","lastModifiedDate":"2022-02-15"},{"lineNumber":13,"author":{"gitId":"pennepenguin"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":14,"author":{"gitId":"pennepenguin"},"content":"}","lastModifiedDate":"2022-02-15"}],"authorContributionMap":{"pennepenguin":14}},{"path":"src/test/java/GradleTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pennepenguin"},"content":"package duke;","lastModifiedDate":"2022-03-17"},{"lineNumber":2,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":3,"author":{"gitId":"pennepenguin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-03-17"},{"lineNumber":4,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":5,"author":{"gitId":"pennepenguin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-03-17"},{"lineNumber":6,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":7,"author":{"gitId":"pennepenguin"},"content":"public class GradleTest{","lastModifiedDate":"2022-03-17"},{"lineNumber":8,"author":{"gitId":"pennepenguin"},"content":"\t@Test","lastModifiedDate":"2022-03-17"},{"lineNumber":9,"author":{"gitId":"pennepenguin"},"content":"    public void dummyTest(){","lastModifiedDate":"2022-03-17"},{"lineNumber":10,"author":{"gitId":"pennepenguin"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2022-03-17"},{"lineNumber":11,"author":{"gitId":"pennepenguin"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":12,"author":{"gitId":"pennepenguin"},"content":"","lastModifiedDate":"2022-03-17"},{"lineNumber":13,"author":{"gitId":"pennepenguin"},"content":"    @Test","lastModifiedDate":"2022-03-17"},{"lineNumber":14,"author":{"gitId":"pennepenguin"},"content":"    public void anotherDummyTest(){","lastModifiedDate":"2022-03-17"},{"lineNumber":15,"author":{"gitId":"pennepenguin"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2022-03-17"},{"lineNumber":16,"author":{"gitId":"pennepenguin"},"content":"    }","lastModifiedDate":"2022-03-17"},{"lineNumber":17,"author":{"gitId":"pennepenguin"},"content":"}","lastModifiedDate":"2022-03-17"}],"authorContributionMap":{"pennepenguin":17}}]
