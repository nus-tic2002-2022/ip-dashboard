[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"khs818"},"content":"# duke.Duke project template","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"khs818"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"khs818":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"khs818"},"content":"plugins {","lastModifiedDate":"2022-04-11"},{"lineNumber":2,"author":{"gitId":"khs818"},"content":"    id \u0027java\u0027","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"khs818"},"content":"}","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"khs818"},"content":"group \u0027org.example\u0027","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"khs818"},"content":"version \u00271.0-SNAPSHOT\u0027","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"khs818"},"content":"repositories {","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"khs818"},"content":"    mavenCentral()","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"khs818"},"content":"}","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"khs818"},"content":"dependencies {","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"khs818"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter-api:5.7.2\u0027","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"khs818"},"content":"    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine:5.7.2\u0027","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"khs818"},"content":"}","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"khs818"},"content":"test {","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"khs818"},"content":"    useJUnitPlatform()","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"khs818"},"content":"}","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"khs818":19}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"khs818"},"content":"T|1|aaa","lastModifiedDate":"2022-04-11"},{"lineNumber":2,"author":{"gitId":"khs818"},"content":"T|1|read book","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"khs818"},"content":"T|0|read book","lastModifiedDate":"2022-04-06"},{"lineNumber":4,"author":{"gitId":"khs818"},"content":"T|0|go to school","lastModifiedDate":"2022-04-06"},{"lineNumber":5,"author":{"gitId":"khs818"},"content":"T|0|add the last task","lastModifiedDate":"2022-04-06"},{"lineNumber":6,"author":{"gitId":"khs818"},"content":"T|0|aaa","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"khs818"},"content":"D|0|return book|6/6/2019 1200","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"khs818"},"content":"E|0|project meeting|6/8/2019 1400","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"khs818":8}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"khs818"},"content":"@rem","lastModifiedDate":"2022-04-11"},{"lineNumber":2,"author":{"gitId":"khs818"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"khs818"},"content":"@rem","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"khs818"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"khs818"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"khs818"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"khs818"},"content":"@rem","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"khs818"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"khs818"},"content":"@rem","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"khs818"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"khs818"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"khs818"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"khs818"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"khs818"},"content":"@rem limitations under the License.","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"khs818"},"content":"@rem","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"khs818"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"khs818"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"khs818"},"content":"@rem","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"khs818"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"khs818"},"content":"@rem","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"khs818"},"content":"@rem ##########################################################################","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"khs818"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2022-04-11"},{"lineNumber":25,"author":{"gitId":"khs818"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2022-04-11"},{"lineNumber":26,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":27,"author":{"gitId":"khs818"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2022-04-11"},{"lineNumber":28,"author":{"gitId":"khs818"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"khs818"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"khs818"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"khs818"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2022-04-11"},{"lineNumber":33,"author":{"gitId":"khs818"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2022-04-11"},{"lineNumber":34,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":35,"author":{"gitId":"khs818"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2022-04-11"},{"lineNumber":36,"author":{"gitId":"khs818"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2022-04-11"},{"lineNumber":37,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":38,"author":{"gitId":"khs818"},"content":"@rem Find java.exe","lastModifiedDate":"2022-04-11"},{"lineNumber":39,"author":{"gitId":"khs818"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2022-04-11"},{"lineNumber":40,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":41,"author":{"gitId":"khs818"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2022-04-11"},{"lineNumber":42,"author":{"gitId":"khs818"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2022-04-11"},{"lineNumber":43,"author":{"gitId":"khs818"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute","lastModifiedDate":"2022-04-11"},{"lineNumber":44,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":45,"author":{"gitId":"khs818"},"content":"echo.","lastModifiedDate":"2022-04-11"},{"lineNumber":46,"author":{"gitId":"khs818"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2022-04-11"},{"lineNumber":47,"author":{"gitId":"khs818"},"content":"echo.","lastModifiedDate":"2022-04-11"},{"lineNumber":48,"author":{"gitId":"khs818"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-04-11"},{"lineNumber":49,"author":{"gitId":"khs818"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-04-11"},{"lineNumber":50,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":51,"author":{"gitId":"khs818"},"content":"goto fail","lastModifiedDate":"2022-04-11"},{"lineNumber":52,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":53,"author":{"gitId":"khs818"},"content":":findJavaFromJavaHome","lastModifiedDate":"2022-04-11"},{"lineNumber":54,"author":{"gitId":"khs818"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2022-04-11"},{"lineNumber":55,"author":{"gitId":"khs818"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2022-04-11"},{"lineNumber":56,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":57,"author":{"gitId":"khs818"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2022-04-11"},{"lineNumber":58,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":59,"author":{"gitId":"khs818"},"content":"echo.","lastModifiedDate":"2022-04-11"},{"lineNumber":60,"author":{"gitId":"khs818"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2022-04-11"},{"lineNumber":61,"author":{"gitId":"khs818"},"content":"echo.","lastModifiedDate":"2022-04-11"},{"lineNumber":62,"author":{"gitId":"khs818"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2022-04-11"},{"lineNumber":63,"author":{"gitId":"khs818"},"content":"echo location of your Java installation.","lastModifiedDate":"2022-04-11"},{"lineNumber":64,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":65,"author":{"gitId":"khs818"},"content":"goto fail","lastModifiedDate":"2022-04-11"},{"lineNumber":66,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":67,"author":{"gitId":"khs818"},"content":":execute","lastModifiedDate":"2022-04-11"},{"lineNumber":68,"author":{"gitId":"khs818"},"content":"@rem Setup the command line","lastModifiedDate":"2022-04-11"},{"lineNumber":69,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":70,"author":{"gitId":"khs818"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2022-04-11"},{"lineNumber":71,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":72,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":73,"author":{"gitId":"khs818"},"content":"@rem Execute Gradle","lastModifiedDate":"2022-04-11"},{"lineNumber":74,"author":{"gitId":"khs818"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2022-04-11"},{"lineNumber":75,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":76,"author":{"gitId":"khs818"},"content":":end","lastModifiedDate":"2022-04-11"},{"lineNumber":77,"author":{"gitId":"khs818"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2022-04-11"},{"lineNumber":78,"author":{"gitId":"khs818"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2022-04-11"},{"lineNumber":79,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":80,"author":{"gitId":"khs818"},"content":":fail","lastModifiedDate":"2022-04-11"},{"lineNumber":81,"author":{"gitId":"khs818"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2022-04-11"},{"lineNumber":82,"author":{"gitId":"khs818"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2022-04-11"},{"lineNumber":83,"author":{"gitId":"khs818"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2022-04-11"},{"lineNumber":84,"author":{"gitId":"khs818"},"content":"exit /b 1","lastModifiedDate":"2022-04-11"},{"lineNumber":85,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":86,"author":{"gitId":"khs818"},"content":":mainEnd","lastModifiedDate":"2022-04-11"},{"lineNumber":87,"author":{"gitId":"khs818"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2022-04-11"},{"lineNumber":88,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":89,"author":{"gitId":"khs818"},"content":":omega","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"khs818":89}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"khs818"},"content":"rootProject.name \u003d \u0027duke1\u0027","lastModifiedDate":"2022-04-11"},{"lineNumber":2,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"khs818":2}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khs818"},"content":"package duke;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"khs818"},"content":"import duke.exceptions.*;","lastModifiedDate":"2022-04-06"},{"lineNumber":3,"author":{"gitId":"khs818"},"content":"import duke.task.Deadline;","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"khs818"},"content":"import duke.task.Event;","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"khs818"},"content":"import duke.task.ToDo;","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"khs818"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-04-06"},{"lineNumber":7,"author":{"gitId":"khs818"},"content":"import java.io.IOException;","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"khs818"},"content":"import java.nio.file.NoSuchFileException;","lastModifiedDate":"2022-04-06"},{"lineNumber":9,"author":{"gitId":"khs818"},"content":"import java.util.List;","lastModifiedDate":"2022-02-06"},{"lineNumber":10,"author":{"gitId":"khs818"},"content":"import duke.command.Command;","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"khs818"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"khs818"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"khs818"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"khs818"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":16,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Duke{","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":19,"author":{"gitId":"khs818"},"content":"    private Ui ui;","lastModifiedDate":"2022-04-06"},{"lineNumber":20,"author":{"gitId":"khs818"},"content":"    private Parser parser;","lastModifiedDate":"2022-04-06"},{"lineNumber":21,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"khs818"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"khs818"},"content":"     * Constructs Duke application.","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"khs818"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":25,"author":{"gitId":"khs818"},"content":"     * @param filePath the file path of the save file for tasks storage.","lastModifiedDate":"2022-04-11"},{"lineNumber":26,"author":{"gitId":"khs818"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":27,"author":{"gitId":"khs818"},"content":"    public Duke(String filePath){","lastModifiedDate":"2022-04-11"},{"lineNumber":28,"author":{"gitId":"khs818"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2022-04-06"},{"lineNumber":29,"author":{"gitId":"khs818"},"content":"        Storage storage \u003d new Storage(filePath);","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"khs818"},"content":"        TaskList tasks;","lastModifiedDate":"2022-04-06"},{"lineNumber":31,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":32,"author":{"gitId":"khs818"},"content":"        try{","lastModifiedDate":"2022-04-06"},{"lineNumber":33,"author":{"gitId":"khs818"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2022-04-06"},{"lineNumber":34,"author":{"gitId":"khs818"},"content":"        }catch(IOException e){","lastModifiedDate":"2022-04-06"},{"lineNumber":35,"author":{"gitId":"khs818"},"content":"            if (!(e instanceof NoSuchFileException)){","lastModifiedDate":"2022-04-06"},{"lineNumber":36,"author":{"gitId":"khs818"},"content":"                ui.showLoadingError(\"Cannot load tasks. May overwrite old tasks, if continue\");","lastModifiedDate":"2022-04-06"},{"lineNumber":37,"author":{"gitId":"khs818"},"content":"                e.printStackTrace();","lastModifiedDate":"2022-04-06"},{"lineNumber":38,"author":{"gitId":"khs818"},"content":"            }","lastModifiedDate":"2022-03-02"},{"lineNumber":39,"author":{"gitId":"khs818"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2022-04-06"},{"lineNumber":40,"author":{"gitId":"khs818"},"content":"        }","lastModifiedDate":"2022-03-02"},{"lineNumber":41,"author":{"gitId":"khs818"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2022-04-06"},{"lineNumber":42,"author":{"gitId":"khs818"},"content":"        parser.capture(\"todo\", ToDo.getCommand(tasks, storage));","lastModifiedDate":"2022-04-11"},{"lineNumber":43,"author":{"gitId":"khs818"},"content":"        parser.capture(\"event\", Event.getCommand(tasks, storage));","lastModifiedDate":"2022-04-06"},{"lineNumber":44,"author":{"gitId":"khs818"},"content":"        parser.capture(\"deadline\", Deadline.getCommand(tasks, storage));","lastModifiedDate":"2022-04-06"},{"lineNumber":45,"author":{"gitId":"khs818"},"content":"        parser.capture(\"list\", new ListCommand(tasks));","lastModifiedDate":"2022-04-06"},{"lineNumber":46,"author":{"gitId":"khs818"},"content":"        parser.capture(\"done\", new DoneCommand(tasks,storage));","lastModifiedDate":"2022-04-06"},{"lineNumber":47,"author":{"gitId":"khs818"},"content":"        parser.capture(\"delete\", new DeleteCommand(tasks, storage));","lastModifiedDate":"2022-04-06"},{"lineNumber":48,"author":{"gitId":"khs818"},"content":"        parser.capture(\"bye\", new ByeCommand());","lastModifiedDate":"2022-04-06"},{"lineNumber":49,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-03-02"},{"lineNumber":50,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-03-02"},{"lineNumber":51,"author":{"gitId":"khs818"},"content":"    static void checkWord(String keyWord)throws DukeCheckLineException{","lastModifiedDate":"2022-04-11"},{"lineNumber":52,"author":{"gitId":"khs818"},"content":"        String keyword \u003d keyWord.toLowerCase();","lastModifiedDate":"2022-04-11"},{"lineNumber":53,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-03-15"},{"lineNumber":54,"author":{"gitId":"khs818"},"content":"        if (!keyword.equals(\"list\") \u0026\u0026 !keyword.equals(\"bye\")","lastModifiedDate":"2022-04-11"},{"lineNumber":55,"author":{"gitId":"khs818"},"content":"                \u0026\u0026 !keyword.equals(\"todo\") \u0026\u0026 !keyword.equals(\"done\")","lastModifiedDate":"2022-04-11"},{"lineNumber":56,"author":{"gitId":"khs818"},"content":"                \u0026\u0026 !keyword.equals(\"event\") \u0026\u0026 !keyword.equals(\"deadline\")","lastModifiedDate":"2022-04-11"},{"lineNumber":57,"author":{"gitId":"khs818"},"content":"                \u0026\u0026 !keyword.equals(\"delete\")){","lastModifiedDate":"2022-04-11"},{"lineNumber":58,"author":{"gitId":"khs818"},"content":"            throw new DukeCheckLineException();","lastModifiedDate":"2022-04-11"},{"lineNumber":59,"author":{"gitId":"khs818"},"content":"        }","lastModifiedDate":"2022-04-11"},{"lineNumber":60,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":61,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":62,"author":{"gitId":"khs818"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":63,"author":{"gitId":"khs818"},"content":"     * Run Duke application.","lastModifiedDate":"2022-04-11"},{"lineNumber":64,"author":{"gitId":"khs818"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":65,"author":{"gitId":"khs818"},"content":"    public void run(){","lastModifiedDate":"2022-04-06"},{"lineNumber":66,"author":{"gitId":"khs818"},"content":"        ui.showWelcome();","lastModifiedDate":"2022-04-06"},{"lineNumber":67,"author":{"gitId":"khs818"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2022-04-06"},{"lineNumber":68,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":69,"author":{"gitId":"khs818"},"content":"        while(!isExit \u0026\u0026 ui.hasNextLine()){","lastModifiedDate":"2022-04-06"},{"lineNumber":70,"author":{"gitId":"khs818"},"content":"            String[] fullCommand \u003d ui.readCommand().split(\" \");","lastModifiedDate":"2022-04-06"},{"lineNumber":71,"author":{"gitId":"khs818"},"content":"            ui.printWithLine(List.of());","lastModifiedDate":"2022-04-06"},{"lineNumber":72,"author":{"gitId":"khs818"},"content":"            try{","lastModifiedDate":"2022-03-15"},{"lineNumber":73,"author":{"gitId":"khs818"},"content":"                checkWord(fullCommand[0]);","lastModifiedDate":"2022-04-06"},{"lineNumber":74,"author":{"gitId":"khs818"},"content":"                Command c \u003d parser.parse(fullCommand);","lastModifiedDate":"2022-04-06"},{"lineNumber":75,"author":{"gitId":"khs818"},"content":"                ui.printCommand(c.run(fullCommand));","lastModifiedDate":"2022-04-06"},{"lineNumber":76,"author":{"gitId":"khs818"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2022-04-06"},{"lineNumber":77,"author":{"gitId":"khs818"},"content":"            }catch(DukeException | IOException e){","lastModifiedDate":"2022-04-06"},{"lineNumber":78,"author":{"gitId":"khs818"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2022-04-06"},{"lineNumber":79,"author":{"gitId":"khs818"},"content":"            }catch(DukeCheckLineException e){","lastModifiedDate":"2022-04-06"},{"lineNumber":80,"author":{"gitId":"khs818"},"content":"                ui.showError(\" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-04-11"},{"lineNumber":81,"author":{"gitId":"khs818"},"content":"            }","lastModifiedDate":"2022-03-15"},{"lineNumber":82,"author":{"gitId":"khs818"},"content":"        }","lastModifiedDate":"2022-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":84,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-02-06"},{"lineNumber":85,"author":{"gitId":"khs818"},"content":"    public static void main(String[] args){","lastModifiedDate":"2022-04-11"},{"lineNumber":86,"author":{"gitId":"khs818"},"content":"        new Duke(\"C:\\\\Users\\\\Administrator\\\\Documents\\\\duke\\\\data\\\\tasks.txt\").run();","lastModifiedDate":"2022-04-11"},{"lineNumber":87,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":88,"author":{"gitId":"khs818"},"content":"}","lastModifiedDate":"2022-04-06"}],"authorContributionMap":{"khs818":86,"-":2}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khs818"},"content":"package duke;","lastModifiedDate":"2022-04-06"},{"lineNumber":2,"author":{"gitId":"khs818"},"content":"import duke.exceptions.*;","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"khs818"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-04-06"},{"lineNumber":4,"author":{"gitId":"khs818"},"content":"import java.util.List;","lastModifiedDate":"2022-04-06"},{"lineNumber":5,"author":{"gitId":"khs818"},"content":"import java.util.Map;","lastModifiedDate":"2022-04-06"},{"lineNumber":6,"author":{"gitId":"khs818"},"content":"import duke.command.*;","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":8,"author":{"gitId":"khs818"},"content":"public class Parser {","lastModifiedDate":"2022-04-06"},{"lineNumber":9,"author":{"gitId":"khs818"},"content":"    private Map\u003cString, Command\u003ecommands \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-04-06"},{"lineNumber":10,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":11,"author":{"gitId":"khs818"},"content":"    public static void checkWord(String keyword) throws DukeCheckLineException{","lastModifiedDate":"2022-04-06"},{"lineNumber":12,"author":{"gitId":"khs818"},"content":"        if(keyword \u003d\u003d null){","lastModifiedDate":"2022-04-06"},{"lineNumber":13,"author":{"gitId":"khs818"},"content":"            throw new DukeCheckLineException();","lastModifiedDate":"2022-04-06"},{"lineNumber":14,"author":{"gitId":"khs818"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":15,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":16,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":17,"author":{"gitId":"khs818"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"khs818"},"content":"     * Capture a command to be returned later.","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"khs818"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"khs818"},"content":"     * @param name the key word that trigger the command.","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"khs818"},"content":"     * @param command for mapping the name and to be returned later.","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"khs818"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"khs818"},"content":"    public void capture(String name, Command command){","lastModifiedDate":"2022-04-06"},{"lineNumber":24,"author":{"gitId":"khs818"},"content":"        commands.put(name, command);","lastModifiedDate":"2022-04-06"},{"lineNumber":25,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":26,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":27,"author":{"gitId":"khs818"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":28,"author":{"gitId":"khs818"},"content":"     * To check and return an appropriate command.","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"khs818"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"khs818"},"content":"     * @param fullCommand the input from user.","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"khs818"},"content":"     * @return command to use for the next processing.","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"khs818"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":33,"author":{"gitId":"khs818"},"content":"    public Command parse(String [] fullCommand){","lastModifiedDate":"2022-04-06"},{"lineNumber":34,"author":{"gitId":"khs818"},"content":"        Command command \u003d commands.get(fullCommand[0].toLowerCase());","lastModifiedDate":"2022-04-06"},{"lineNumber":35,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":36,"author":{"gitId":"khs818"},"content":"        try{","lastModifiedDate":"2022-04-06"},{"lineNumber":37,"author":{"gitId":"khs818"},"content":"            checkWord(fullCommand[0]);","lastModifiedDate":"2022-04-06"},{"lineNumber":38,"author":{"gitId":"khs818"},"content":"        }catch (DukeCheckLineException e){","lastModifiedDate":"2022-04-06"},{"lineNumber":39,"author":{"gitId":"khs818"},"content":"            return (Command) List.of(\" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2022-04-11"},{"lineNumber":40,"author":{"gitId":"khs818"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":41,"author":{"gitId":"khs818"},"content":"        return command;","lastModifiedDate":"2022-04-06"},{"lineNumber":42,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":43,"author":{"gitId":"khs818"},"content":"}","lastModifiedDate":"2022-04-06"}],"authorContributionMap":{"khs818":43}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khs818"},"content":"package duke;","lastModifiedDate":"2022-04-06"},{"lineNumber":2,"author":{"gitId":"khs818"},"content":"import duke.exceptions.*;","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"khs818"},"content":"import java.io.IOException;","lastModifiedDate":"2022-04-06"},{"lineNumber":4,"author":{"gitId":"khs818"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-04-06"},{"lineNumber":5,"author":{"gitId":"khs818"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-04-06"},{"lineNumber":6,"author":{"gitId":"khs818"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-04-06"},{"lineNumber":7,"author":{"gitId":"khs818"},"content":"import java.util.List;","lastModifiedDate":"2022-04-06"},{"lineNumber":8,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":9,"author":{"gitId":"khs818"},"content":"public class Storage {","lastModifiedDate":"2022-04-06"},{"lineNumber":10,"author":{"gitId":"khs818"},"content":"    private Path path;","lastModifiedDate":"2022-04-06"},{"lineNumber":11,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":12,"author":{"gitId":"khs818"},"content":"    public Storage(String fileLocation) {","lastModifiedDate":"2022-04-06"},{"lineNumber":13,"author":{"gitId":"khs818"},"content":"        path \u003d Paths.get(fileLocation);","lastModifiedDate":"2022-04-06"},{"lineNumber":14,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":15,"author":{"gitId":"khs818"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"khs818"},"content":"     * Save the provided list of lines to a file.","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"khs818"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"khs818"},"content":"     * @param lines list of lines to save.","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"khs818"},"content":"     * @throws IOException if the task cannot be recorded.","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"khs818"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":22,"author":{"gitId":"khs818"},"content":"    public void store(List\u003cString\u003e lines) throws IOException {","lastModifiedDate":"2022-04-06"},{"lineNumber":23,"author":{"gitId":"khs818"},"content":"        Files.write(path, lines);","lastModifiedDate":"2022-04-06"},{"lineNumber":24,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":25,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":26,"author":{"gitId":"khs818"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":27,"author":{"gitId":"khs818"},"content":"     * Read the file and return the list of lines.","lastModifiedDate":"2022-04-11"},{"lineNumber":28,"author":{"gitId":"khs818"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"khs818"},"content":"     * @return list of lines loaded.","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"khs818"},"content":"     * @throws IOException if the lines cannot be loaded.","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"khs818"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"khs818"},"content":"    public List\u003cString\u003eload() throws IOException{","lastModifiedDate":"2022-04-11"},{"lineNumber":33,"author":{"gitId":"khs818"},"content":"        return Files.readAllLines(path);","lastModifiedDate":"2022-04-06"},{"lineNumber":34,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":35,"author":{"gitId":"khs818"},"content":"}","lastModifiedDate":"2022-04-06"}],"authorContributionMap":{"khs818":35}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khs818"},"content":"package duke;","lastModifiedDate":"2022-04-06"},{"lineNumber":2,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":3,"author":{"gitId":"khs818"},"content":"import java.util.List;","lastModifiedDate":"2022-04-06"},{"lineNumber":4,"author":{"gitId":"khs818"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-04-06"},{"lineNumber":5,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":6,"author":{"gitId":"khs818"},"content":"public class Ui {","lastModifiedDate":"2022-04-06"},{"lineNumber":7,"author":{"gitId":"khs818"},"content":"    public void showWelcome(){","lastModifiedDate":"2022-04-06"},{"lineNumber":8,"author":{"gitId":"khs818"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-04-06"},{"lineNumber":9,"author":{"gitId":"khs818"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-04-06"},{"lineNumber":10,"author":{"gitId":"khs818"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-04-06"},{"lineNumber":11,"author":{"gitId":"khs818"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-04-06"},{"lineNumber":12,"author":{"gitId":"khs818"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-04-06"},{"lineNumber":13,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":14,"author":{"gitId":"khs818"},"content":"        printWithLine(List.of(\"Hello from\\n\" + logo));","lastModifiedDate":"2022-04-06"},{"lineNumber":15,"author":{"gitId":"khs818"},"content":"        printWithLine(List.of(\"Hello! I\u0027m Duke\", \"What can I do for you?\"));","lastModifiedDate":"2022-04-06"},{"lineNumber":16,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":17,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":18,"author":{"gitId":"khs818"},"content":"    private Scanner in \u003d new Scanner (System.in);","lastModifiedDate":"2022-04-06"},{"lineNumber":19,"author":{"gitId":"khs818"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"khs818"},"content":"     * Return whether there is another line of input.","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"khs818"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"khs818"},"content":"     * @return whether there is another line of input.","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"khs818"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":25,"author":{"gitId":"khs818"},"content":"    boolean hasNextLine(){","lastModifiedDate":"2022-04-06"},{"lineNumber":26,"author":{"gitId":"khs818"},"content":"        return in.hasNextLine();","lastModifiedDate":"2022-04-06"},{"lineNumber":27,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":28,"author":{"gitId":"khs818"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"khs818"},"content":"     * Read a line from the user input.","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"khs818"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"khs818"},"content":"     * @return next line of input.","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"khs818"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":33,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":34,"author":{"gitId":"khs818"},"content":"    String readCommand(){","lastModifiedDate":"2022-04-06"},{"lineNumber":35,"author":{"gitId":"khs818"},"content":"        return in.nextLine();","lastModifiedDate":"2022-04-06"},{"lineNumber":36,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":37,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":38,"author":{"gitId":"khs818"},"content":"    public void showLoadingError(String message){","lastModifiedDate":"2022-04-06"},{"lineNumber":39,"author":{"gitId":"khs818"},"content":"        printWithLine(List.of());","lastModifiedDate":"2022-04-06"},{"lineNumber":40,"author":{"gitId":"khs818"},"content":"        printWithLine(List.of(message));","lastModifiedDate":"2022-04-06"},{"lineNumber":41,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":42,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":43,"author":{"gitId":"khs818"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":44,"author":{"gitId":"khs818"},"content":"     * Show an error message.","lastModifiedDate":"2022-04-11"},{"lineNumber":45,"author":{"gitId":"khs818"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":46,"author":{"gitId":"khs818"},"content":"     * @param message error message.","lastModifiedDate":"2022-04-11"},{"lineNumber":47,"author":{"gitId":"khs818"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":48,"author":{"gitId":"khs818"},"content":"    public void showError(String message){","lastModifiedDate":"2022-04-06"},{"lineNumber":49,"author":{"gitId":"khs818"},"content":"        printWithLine(List.of(message));","lastModifiedDate":"2022-04-06"},{"lineNumber":50,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":51,"author":{"gitId":"khs818"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":52,"author":{"gitId":"khs818"},"content":"     * Show output of a list messages.","lastModifiedDate":"2022-04-11"},{"lineNumber":53,"author":{"gitId":"khs818"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":54,"author":{"gitId":"khs818"},"content":"     * @param messages the list of messages.","lastModifiedDate":"2022-04-11"},{"lineNumber":55,"author":{"gitId":"khs818"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":56,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":57,"author":{"gitId":"khs818"},"content":"    public static void printCommand(List\u003cString\u003emessages){","lastModifiedDate":"2022-04-06"},{"lineNumber":58,"author":{"gitId":"khs818"},"content":"        for (String message : messages){","lastModifiedDate":"2022-04-06"},{"lineNumber":59,"author":{"gitId":"khs818"},"content":"            printWithLine(List.of(message));","lastModifiedDate":"2022-04-06"},{"lineNumber":60,"author":{"gitId":"khs818"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":61,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":62,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":63,"author":{"gitId":"khs818"},"content":"    public static void printWithLine(List\u003cString\u003e messages){","lastModifiedDate":"2022-04-06"},{"lineNumber":64,"author":{"gitId":"khs818"},"content":"        for (String message : messages){","lastModifiedDate":"2022-04-06"},{"lineNumber":65,"author":{"gitId":"khs818"},"content":"            System.out.println(\"   \" + message);","lastModifiedDate":"2022-04-06"},{"lineNumber":66,"author":{"gitId":"khs818"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":67,"author":{"gitId":"khs818"},"content":"        System.out.println(\"   _____________________________________\");","lastModifiedDate":"2022-04-06"},{"lineNumber":68,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":69,"author":{"gitId":"khs818"},"content":"}","lastModifiedDate":"2022-04-06"}],"authorContributionMap":{"khs818":69}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khs818"},"content":"package duke.command;","lastModifiedDate":"2022-04-11"},{"lineNumber":2,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"khs818"},"content":"import java.util.List;","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"khs818"},"content":"public class ByeCommand implements Command {","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"khs818"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"khs818"},"content":"     * Returns the message to user when he/she leave.","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"khs818"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"khs818"},"content":"     * @param line array of string input from user.","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"khs818"},"content":"     * @return message to show the user.","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"khs818"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"khs818"},"content":"    @Override","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"khs818"},"content":"    public List\u003cString\u003e run(String[] line){","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"khs818"},"content":"        return List.of(\"    Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"khs818"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"khs818"},"content":"     * Return true to exit the program.","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"khs818"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"khs818"},"content":"     * @return true when execute this command to exit the program.","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"khs818"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"khs818"},"content":"    @Override","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"khs818"},"content":"    public boolean isExit(){","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"khs818"},"content":"        return true;","lastModifiedDate":"2022-04-11"},{"lineNumber":25,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":26,"author":{"gitId":"khs818"},"content":"}","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"khs818":26}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khs818"},"content":"package duke.command;","lastModifiedDate":"2022-04-11"},{"lineNumber":2,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"khs818"},"content":"import java.util.List;","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"khs818"},"content":"import java.io.IOException;","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"khs818"},"content":"import duke.exceptions.*;","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"khs818"},"content":"public interface Command {","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"khs818"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"khs818"},"content":"     * Returns the message to user after the command is run.","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"khs818"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"khs818"},"content":"     * @param fullCommand array of command from the user input.","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"khs818"},"content":"     * @return message to the user.","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"khs818"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"khs818"},"content":"    List\u003cString\u003e run(String[] fullCommand) throws DukeException, IOException;","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"khs818"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"khs818"},"content":"     * Returns the message to user after the command is run.","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"khs818"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"khs818"},"content":"     * @param strNum array of command from the user input.","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"khs818"},"content":"     * @return message to the user.","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"khs818"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":25,"author":{"gitId":"khs818"},"content":"    public default boolean isDigit(String strNum) {","lastModifiedDate":"2022-04-11"},{"lineNumber":26,"author":{"gitId":"khs818"},"content":"        return strNum.matches(\"[0-9]{1,}\");","lastModifiedDate":"2022-04-11"},{"lineNumber":27,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":28,"author":{"gitId":"khs818"},"content":"    default boolean isExit(){","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"khs818"},"content":"        return false;","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"khs818"},"content":"}","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"khs818":31}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khs818"},"content":"package duke.command;","lastModifiedDate":"2022-04-11"},{"lineNumber":2,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"khs818"},"content":"import duke.Storage;","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"khs818"},"content":"import duke.task.Task;","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"khs818"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"khs818"},"content":"import java.io.IOException;","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"khs818"},"content":"import java.util.*;","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"khs818"},"content":"public class DeleteCommand implements Command{","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"khs818"},"content":"    private final TaskList tasks;","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"khs818"},"content":"    private Storage storage;","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"khs818"},"content":"    public DeleteCommand(TaskList tasks, Storage storage){","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"khs818"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"khs818"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"khs818"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"khs818"},"content":"     * Remove a task according to the index input by the user.","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"khs818"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"khs818"},"content":"     * @param fullCommand fullCommand array of command from the user input.","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"khs818"},"content":"     * @return message to the user.","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"khs818"},"content":"     * @throws NumberFormatException catch a error if the user input is not a number.","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"khs818"},"content":"     * @throws IndexOutOfBoundsException catch a error if the input index is out of bound.","lastModifiedDate":"2022-04-11"},{"lineNumber":25,"author":{"gitId":"khs818"},"content":"     * @throws IOException if the task cannot be recorded.","lastModifiedDate":"2022-04-11"},{"lineNumber":26,"author":{"gitId":"khs818"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":27,"author":{"gitId":"khs818"},"content":"    @Override","lastModifiedDate":"2022-04-11"},{"lineNumber":28,"author":{"gitId":"khs818"},"content":"    public List\u003cString\u003e run(String[] fullCommand)throws NumberFormatException, IndexOutOfBoundsException, IOException{","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"khs818"},"content":"        try{","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"khs818"},"content":"            List\u003cInteger\u003elist \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"khs818"},"content":"            String[] sarray;","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"khs818"},"content":"            if (fullCommand[1].contains(\"-\")){","lastModifiedDate":"2022-04-11"},{"lineNumber":33,"author":{"gitId":"khs818"},"content":"                sarray\u003dfullCommand[1].split(\"-\");","lastModifiedDate":"2022-04-11"},{"lineNumber":34,"author":{"gitId":"khs818"},"content":"                int start \u003d Integer.parseInt(sarray[0]),end\u003dInteger.parseInt(sarray[1]);","lastModifiedDate":"2022-04-11"},{"lineNumber":35,"author":{"gitId":"khs818"},"content":"                for (int i \u003d start;i\u003c\u003dend;i++){","lastModifiedDate":"2022-04-11"},{"lineNumber":36,"author":{"gitId":"khs818"},"content":"                    list.add(i);","lastModifiedDate":"2022-04-11"},{"lineNumber":37,"author":{"gitId":"khs818"},"content":"                }","lastModifiedDate":"2022-04-11"},{"lineNumber":38,"author":{"gitId":"khs818"},"content":"            }else {","lastModifiedDate":"2022-04-11"},{"lineNumber":39,"author":{"gitId":"khs818"},"content":"                sarray \u003d fullCommand[1].split(\",\");","lastModifiedDate":"2022-04-11"},{"lineNumber":40,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":41,"author":{"gitId":"khs818"},"content":"                for (int i \u003d 0; i \u003c sarray.length; i++) {","lastModifiedDate":"2022-04-11"},{"lineNumber":42,"author":{"gitId":"khs818"},"content":"                    list.add(Integer.parseInt(sarray[i]));","lastModifiedDate":"2022-04-11"},{"lineNumber":43,"author":{"gitId":"khs818"},"content":"                }","lastModifiedDate":"2022-04-11"},{"lineNumber":44,"author":{"gitId":"khs818"},"content":"            }","lastModifiedDate":"2022-04-11"},{"lineNumber":45,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":46,"author":{"gitId":"khs818"},"content":"            list.sort(new Comparator\u003cInteger\u003e() {","lastModifiedDate":"2022-04-11"},{"lineNumber":47,"author":{"gitId":"khs818"},"content":"                public int compare(Integer o1, Integer o2) {","lastModifiedDate":"2022-04-11"},{"lineNumber":48,"author":{"gitId":"khs818"},"content":"                    if(o1\u003eo2)","lastModifiedDate":"2022-04-11"},{"lineNumber":49,"author":{"gitId":"khs818"},"content":"                        return -1;","lastModifiedDate":"2022-04-11"},{"lineNumber":50,"author":{"gitId":"khs818"},"content":"                    if(o1\u003d\u003do2)","lastModifiedDate":"2022-04-11"},{"lineNumber":51,"author":{"gitId":"khs818"},"content":"                        return 0;","lastModifiedDate":"2022-04-11"},{"lineNumber":52,"author":{"gitId":"khs818"},"content":"                    return 1;","lastModifiedDate":"2022-04-11"},{"lineNumber":53,"author":{"gitId":"khs818"},"content":"                }","lastModifiedDate":"2022-04-11"},{"lineNumber":54,"author":{"gitId":"khs818"},"content":"            });","lastModifiedDate":"2022-04-11"},{"lineNumber":55,"author":{"gitId":"khs818"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2022-04-11"},{"lineNumber":56,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":57,"author":{"gitId":"khs818"},"content":"                Task deleteItem \u003d tasks.remove(list.get(i) - 1);","lastModifiedDate":"2022-04-11"},{"lineNumber":58,"author":{"gitId":"khs818"},"content":"                storage.store(tasks.convertAsLines());","lastModifiedDate":"2022-04-11"},{"lineNumber":59,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":60,"author":{"gitId":"khs818"},"content":"            }","lastModifiedDate":"2022-04-11"},{"lineNumber":61,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":62,"author":{"gitId":"khs818"},"content":"            return List.of(\"Nice! I\u0027ve removed this task as done: \" + fullCommand[1]);","lastModifiedDate":"2022-04-11"},{"lineNumber":63,"author":{"gitId":"khs818"},"content":"        }catch(NumberFormatException e){","lastModifiedDate":"2022-04-11"},{"lineNumber":64,"author":{"gitId":"khs818"},"content":"            return List.of(\" OOPS!!! This is not a number: \" + fullCommand[1]);","lastModifiedDate":"2022-04-11"},{"lineNumber":65,"author":{"gitId":"khs818"},"content":"        }catch(IndexOutOfBoundsException e){","lastModifiedDate":"2022-04-11"},{"lineNumber":66,"author":{"gitId":"khs818"},"content":"            return List.of(\" OOPS!!! The index out of bound: \" + fullCommand[1]);","lastModifiedDate":"2022-04-11"},{"lineNumber":67,"author":{"gitId":"khs818"},"content":"        }","lastModifiedDate":"2022-04-11"},{"lineNumber":68,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":69,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":70,"author":{"gitId":"khs818"},"content":"}","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"khs818":70}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khs818"},"content":"package duke.command;","lastModifiedDate":"2022-04-11"},{"lineNumber":2,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"khs818"},"content":"import duke.Storage;","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"khs818"},"content":"import duke.task.Task;","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"khs818"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"khs818"},"content":"import java.io.IOException;","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"khs818"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"khs818"},"content":"import java.util.List;","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"khs818"},"content":"public class DoneCommand implements Command{","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"khs818"},"content":"    private final TaskList tasks;","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"khs818"},"content":"    private Storage storage;","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"khs818"},"content":"    public DoneCommand(TaskList tasks, Storage storage){","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"khs818"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"khs818"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"khs818"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"khs818"},"content":"     * Marks the task as done and returns the message to user.","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"khs818"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"khs818"},"content":"     * @param fullCommand array of command from the user input.","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"khs818"},"content":"     * @return a message to user.","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"khs818"},"content":"     * @throws NumberFormatException catch an error if the user input is not a number.","lastModifiedDate":"2022-04-11"},{"lineNumber":25,"author":{"gitId":"khs818"},"content":"     * @throws IndexOutOfBoundsException catch an error if the input index is out of bound.","lastModifiedDate":"2022-04-11"},{"lineNumber":26,"author":{"gitId":"khs818"},"content":"     * @throws IOException if the task cannot be recorded.","lastModifiedDate":"2022-04-11"},{"lineNumber":27,"author":{"gitId":"khs818"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":28,"author":{"gitId":"khs818"},"content":"    @Override","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"khs818"},"content":"    public List\u003cString\u003e run(String[] fullCommand) throws NumberFormatException, IndexOutOfBoundsException, IOException{","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"khs818"},"content":"        try{","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"khs818"},"content":"            List\u003cInteger\u003elist \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"khs818"},"content":"            String[] sarray;","lastModifiedDate":"2022-04-11"},{"lineNumber":33,"author":{"gitId":"khs818"},"content":"            if (fullCommand[1].contains(\"-\")){","lastModifiedDate":"2022-04-11"},{"lineNumber":34,"author":{"gitId":"khs818"},"content":"                sarray\u003dfullCommand[1].split(\"-\");","lastModifiedDate":"2022-04-11"},{"lineNumber":35,"author":{"gitId":"khs818"},"content":"                int start \u003d Integer.parseInt(sarray[0]),end\u003dInteger.parseInt(sarray[1]);","lastModifiedDate":"2022-04-11"},{"lineNumber":36,"author":{"gitId":"khs818"},"content":"                for (int i \u003d start;i\u003c\u003dend;i++){","lastModifiedDate":"2022-04-11"},{"lineNumber":37,"author":{"gitId":"khs818"},"content":"                    list.add(i);","lastModifiedDate":"2022-04-11"},{"lineNumber":38,"author":{"gitId":"khs818"},"content":"                }","lastModifiedDate":"2022-04-11"},{"lineNumber":39,"author":{"gitId":"khs818"},"content":"            }else {","lastModifiedDate":"2022-04-11"},{"lineNumber":40,"author":{"gitId":"khs818"},"content":"                sarray \u003d fullCommand[1].split(\",\");","lastModifiedDate":"2022-04-11"},{"lineNumber":41,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":42,"author":{"gitId":"khs818"},"content":"                for (int i \u003d 0; i \u003c sarray.length; i++) {","lastModifiedDate":"2022-04-11"},{"lineNumber":43,"author":{"gitId":"khs818"},"content":"                    list.add(Integer.parseInt(sarray[i]));","lastModifiedDate":"2022-04-11"},{"lineNumber":44,"author":{"gitId":"khs818"},"content":"                }","lastModifiedDate":"2022-04-11"},{"lineNumber":45,"author":{"gitId":"khs818"},"content":"            }","lastModifiedDate":"2022-04-11"},{"lineNumber":46,"author":{"gitId":"khs818"},"content":"            List\u003cInteger\u003eintegerList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-04-11"},{"lineNumber":47,"author":{"gitId":"khs818"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2022-04-11"},{"lineNumber":48,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":49,"author":{"gitId":"khs818"},"content":"                Task markItem \u003d tasks.get(Integer.parseInt(sarray[i]) - 1);","lastModifiedDate":"2022-04-11"},{"lineNumber":50,"author":{"gitId":"khs818"},"content":"                markItem.markAsDone();","lastModifiedDate":"2022-04-11"},{"lineNumber":51,"author":{"gitId":"khs818"},"content":"                storage.store(tasks.convertAsLines());","lastModifiedDate":"2022-04-11"},{"lineNumber":52,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":53,"author":{"gitId":"khs818"},"content":"            }","lastModifiedDate":"2022-04-11"},{"lineNumber":54,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":55,"author":{"gitId":"khs818"},"content":"            return List.of(\"Nice! I\u0027ve marked this task as done: \" + fullCommand[1]);","lastModifiedDate":"2022-04-11"},{"lineNumber":56,"author":{"gitId":"khs818"},"content":"        }catch(NumberFormatException e){","lastModifiedDate":"2022-04-11"},{"lineNumber":57,"author":{"gitId":"khs818"},"content":"            return List.of(\" OOPS!!! This is not a number: \" + fullCommand[1]);","lastModifiedDate":"2022-04-11"},{"lineNumber":58,"author":{"gitId":"khs818"},"content":"        }catch(IndexOutOfBoundsException e){","lastModifiedDate":"2022-04-11"},{"lineNumber":59,"author":{"gitId":"khs818"},"content":"            return List.of(\" OOPS!!! The index out of bound: \" + fullCommand[1]);","lastModifiedDate":"2022-04-11"},{"lineNumber":60,"author":{"gitId":"khs818"},"content":"        }","lastModifiedDate":"2022-04-11"},{"lineNumber":61,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":62,"author":{"gitId":"khs818"},"content":"}","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"khs818":62}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khs818"},"content":"package duke.command;","lastModifiedDate":"2022-04-11"},{"lineNumber":2,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":3,"author":{"gitId":"khs818"},"content":"import duke.task.TaskList;","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"khs818"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-04-06"},{"lineNumber":5,"author":{"gitId":"khs818"},"content":"import java.util.List;","lastModifiedDate":"2022-04-06"},{"lineNumber":6,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":7,"author":{"gitId":"khs818"},"content":"public class ListCommand implements Command{","lastModifiedDate":"2022-04-06"},{"lineNumber":8,"author":{"gitId":"khs818"},"content":"    private TaskList tasks;","lastModifiedDate":"2022-04-06"},{"lineNumber":9,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":10,"author":{"gitId":"khs818"},"content":"    public ListCommand(TaskList tasks){","lastModifiedDate":"2022-04-06"},{"lineNumber":11,"author":{"gitId":"khs818"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2022-04-06"},{"lineNumber":12,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":13,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":14,"author":{"gitId":"khs818"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"khs818"},"content":"     * Return a message with the task list.","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"khs818"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"khs818"},"content":"     * @param fullCommand array of command from the user input.","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"khs818"},"content":"     * @return message to the user.","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"khs818"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"khs818"},"content":"    public List\u003cString\u003e run(String[] fullCommand){","lastModifiedDate":"2022-04-06"},{"lineNumber":21,"author":{"gitId":"khs818"},"content":"        List\u003cString\u003e messages \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-04-06"},{"lineNumber":22,"author":{"gitId":"khs818"},"content":"        messages.add(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-04-06"},{"lineNumber":23,"author":{"gitId":"khs818"},"content":"        for(int i \u003d 0; i \u003c tasks.size(); i++){","lastModifiedDate":"2022-04-06"},{"lineNumber":24,"author":{"gitId":"khs818"},"content":"            messages.add((i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2022-04-06"},{"lineNumber":25,"author":{"gitId":"khs818"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":26,"author":{"gitId":"khs818"},"content":"        return messages;","lastModifiedDate":"2022-04-06"},{"lineNumber":27,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":28,"author":{"gitId":"khs818"},"content":"}","lastModifiedDate":"2022-04-06"}],"authorContributionMap":{"khs818":28}},{"path":"src/main/java/duke/exceptions/DukeCheckLineEmptyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khs818"},"content":"package duke.exceptions;","lastModifiedDate":"2022-04-06"},{"lineNumber":2,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"khs818"},"content":"public class DukeCheckLineEmptyException extends Exception {","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"khs818"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"khs818":4}},{"path":"src/main/java/duke/exceptions/DukeCheckLineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khs818"},"content":"package duke.exceptions;","lastModifiedDate":"2022-04-06"},{"lineNumber":2,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"khs818"},"content":"public class DukeCheckLineException extends Exception{","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"khs818"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"khs818":4}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khs818"},"content":"package duke.exceptions;","lastModifiedDate":"2022-04-06"},{"lineNumber":2,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"khs818"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2022-03-02"},{"lineNumber":4,"author":{"gitId":"khs818"},"content":"}","lastModifiedDate":"2022-03-02"}],"authorContributionMap":{"khs818":4}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khs818"},"content":"package duke.task;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"khs818"},"content":"import duke.Storage;","lastModifiedDate":"2022-04-06"},{"lineNumber":4,"author":{"gitId":"khs818"},"content":"import duke.command.Command;","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"khs818"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"khs818"},"content":"import java.util.List;","lastModifiedDate":"2022-04-06"},{"lineNumber":7,"author":{"gitId":"khs818"},"content":"import duke.exceptions.*;","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":9,"author":{"gitId":"khs818"},"content":"public class Deadline extends Time {","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"khs818"},"content":"    public Deadline(String description, String Time){","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"khs818"},"content":"        super(description,Time);","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":14,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":15,"author":{"gitId":"khs818"},"content":"    public static void checkDescription(int index)throws DukeException{","lastModifiedDate":"2022-04-06"},{"lineNumber":16,"author":{"gitId":"khs818"},"content":"        if(index \u003d\u003d 1){","lastModifiedDate":"2022-04-06"},{"lineNumber":17,"author":{"gitId":"khs818"},"content":"            throw new DukeException();","lastModifiedDate":"2022-04-06"},{"lineNumber":18,"author":{"gitId":"khs818"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":19,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":20,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"khs818"},"content":"    public static void checkTime(int index)throws DukeCheckLineException{","lastModifiedDate":"2022-04-06"},{"lineNumber":22,"author":{"gitId":"khs818"},"content":"        if(index \u003d\u003d -1){","lastModifiedDate":"2022-04-06"},{"lineNumber":23,"author":{"gitId":"khs818"},"content":"            throw new DukeCheckLineException();","lastModifiedDate":"2022-04-06"},{"lineNumber":24,"author":{"gitId":"khs818"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":25,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":26,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":27,"author":{"gitId":"khs818"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":28,"author":{"gitId":"khs818"},"content":"     * To generate a Deadline detail and store in the tasks list according to user input.","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"khs818"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"khs818"},"content":"     * @param tasks the list of tasks;","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"khs818"},"content":"     * @param storage to save the deadline detail of the task.","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"khs818"},"content":"     * @return a command which generates deadlines task.","lastModifiedDate":"2022-04-11"},{"lineNumber":33,"author":{"gitId":"khs818"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":34,"author":{"gitId":"khs818"},"content":"    public static Command getCommand(TaskList tasks, Storage storage){","lastModifiedDate":"2022-04-06"},{"lineNumber":35,"author":{"gitId":"khs818"},"content":"        return fullCommand -\u003e {","lastModifiedDate":"2022-04-06"},{"lineNumber":36,"author":{"gitId":"khs818"},"content":"            List\u003cString\u003e commandList \u003d List.of(fullCommand);","lastModifiedDate":"2022-04-06"},{"lineNumber":37,"author":{"gitId":"khs818"},"content":"            int position \u003d commandList.indexOf(\"/by\");","lastModifiedDate":"2022-04-06"},{"lineNumber":38,"author":{"gitId":"khs818"},"content":"            try{","lastModifiedDate":"2022-04-06"},{"lineNumber":39,"author":{"gitId":"khs818"},"content":"                checkDescription(position);","lastModifiedDate":"2022-04-06"},{"lineNumber":40,"author":{"gitId":"khs818"},"content":"                checkTime(position);","lastModifiedDate":"2022-04-06"},{"lineNumber":41,"author":{"gitId":"khs818"},"content":"                String description \u003d String.join(\" \", commandList.subList(1, position));","lastModifiedDate":"2022-04-06"},{"lineNumber":42,"author":{"gitId":"khs818"},"content":"                String time \u003d String.join(\" \", commandList.subList(position + 1, fullCommand.length));","lastModifiedDate":"2022-04-06"},{"lineNumber":43,"author":{"gitId":"khs818"},"content":"                Task deadlineTask \u003d new Deadline(description, time);","lastModifiedDate":"2022-04-06"},{"lineNumber":44,"author":{"gitId":"khs818"},"content":"                tasks.add(deadlineTask);","lastModifiedDate":"2022-04-06"},{"lineNumber":45,"author":{"gitId":"khs818"},"content":"                storage.store(tasks.convertAsLines());","lastModifiedDate":"2022-04-06"},{"lineNumber":46,"author":{"gitId":"khs818"},"content":"                return List.of(\"Got it. I\u0027ve added this task: \" + System.lineSeparator() +","lastModifiedDate":"2022-04-06"},{"lineNumber":47,"author":{"gitId":"khs818"},"content":"                        \"     \" + deadlineTask + System.lineSeparator() +","lastModifiedDate":"2022-04-06"},{"lineNumber":48,"author":{"gitId":"khs818"},"content":"                        \"   Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-04-06"},{"lineNumber":49,"author":{"gitId":"khs818"},"content":"            }catch(DukeException e){","lastModifiedDate":"2022-04-06"},{"lineNumber":50,"author":{"gitId":"khs818"},"content":"                return List.of(\" OOPS!!! The description of a \" + \"Deadline\" + \" cannot be empty.\");","lastModifiedDate":"2022-04-11"},{"lineNumber":51,"author":{"gitId":"khs818"},"content":"            }catch(DukeCheckLineException e){","lastModifiedDate":"2022-04-06"},{"lineNumber":52,"author":{"gitId":"khs818"},"content":"                return List.of(\" OOPS!!! A deadline must have a time.\");","lastModifiedDate":"2022-04-11"},{"lineNumber":53,"author":{"gitId":"khs818"},"content":"            }","lastModifiedDate":"2022-04-06"},{"lineNumber":54,"author":{"gitId":"khs818"},"content":"        };","lastModifiedDate":"2022-04-06"},{"lineNumber":55,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":56,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":57,"author":{"gitId":"khs818"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":58,"author":{"gitId":"khs818"},"content":"     * Return a list of strings that can be saved.","lastModifiedDate":"2022-04-11"},{"lineNumber":59,"author":{"gitId":"khs818"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":60,"author":{"gitId":"khs818"},"content":"     * @return a task list for saving.","lastModifiedDate":"2022-04-11"},{"lineNumber":61,"author":{"gitId":"khs818"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":62,"author":{"gitId":"khs818"},"content":"    @Override","lastModifiedDate":"2022-04-11"},{"lineNumber":63,"author":{"gitId":"khs818"},"content":"    public List\u003cString\u003e getList(){","lastModifiedDate":"2022-04-11"},{"lineNumber":64,"author":{"gitId":"khs818"},"content":"        List\u003cString\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-04-11"},{"lineNumber":65,"author":{"gitId":"khs818"},"content":"        list.add(\"D\");","lastModifiedDate":"2022-04-11"},{"lineNumber":66,"author":{"gitId":"khs818"},"content":"        list.addAll(super.getList());","lastModifiedDate":"2022-04-11"},{"lineNumber":67,"author":{"gitId":"khs818"},"content":"        list.add(convertSaveTimeString());","lastModifiedDate":"2022-04-11"},{"lineNumber":68,"author":{"gitId":"khs818"},"content":"        return list;","lastModifiedDate":"2022-04-11"},{"lineNumber":69,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":70,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":71,"author":{"gitId":"khs818"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":72,"author":{"gitId":"khs818"},"content":"     * Return a list of strings to user.","lastModifiedDate":"2022-04-11"},{"lineNumber":73,"author":{"gitId":"khs818"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":74,"author":{"gitId":"khs818"},"content":"     * @return this string task.","lastModifiedDate":"2022-04-11"},{"lineNumber":75,"author":{"gitId":"khs818"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":76,"author":{"gitId":"khs818"},"content":"    @Override","lastModifiedDate":"2022-04-11"},{"lineNumber":77,"author":{"gitId":"khs818"},"content":"    public String toString(){","lastModifiedDate":"2022-04-11"},{"lineNumber":78,"author":{"gitId":"khs818"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + convertTimeString() + \")\";","lastModifiedDate":"2022-04-11"},{"lineNumber":79,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":80,"author":{"gitId":"khs818"},"content":"}","lastModifiedDate":"2022-02-16"}],"authorContributionMap":{"khs818":80}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khs818"},"content":"package duke.task;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"khs818"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"khs818"},"content":"import java.util.List;","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"khs818"},"content":"import duke.Storage;","lastModifiedDate":"2022-04-06"},{"lineNumber":6,"author":{"gitId":"khs818"},"content":"import duke.command.Command;","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"khs818"},"content":"import duke.exceptions.*;","lastModifiedDate":"2022-04-06"},{"lineNumber":8,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":9,"author":{"gitId":"khs818"},"content":"public class Event extends Time{","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":11,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-02-16"},{"lineNumber":12,"author":{"gitId":"khs818"},"content":"    public Event(String description, String time){","lastModifiedDate":"2022-02-16"},{"lineNumber":13,"author":{"gitId":"khs818"},"content":"        super(description,time);","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":15,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"khs818"},"content":"    public static void checkDescription(int index)throws DukeException{","lastModifiedDate":"2022-04-06"},{"lineNumber":17,"author":{"gitId":"khs818"},"content":"        if(index \u003d\u003d 1){","lastModifiedDate":"2022-04-06"},{"lineNumber":18,"author":{"gitId":"khs818"},"content":"            throw new DukeException();","lastModifiedDate":"2022-04-06"},{"lineNumber":19,"author":{"gitId":"khs818"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":20,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":21,"author":{"gitId":"khs818"},"content":"    public static void checkTime(int index)throws DukeCheckLineException{","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"khs818"},"content":"        if(index \u003d\u003d -1){","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"khs818"},"content":"            throw new DukeCheckLineException();","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"khs818"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":25,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":26,"author":{"gitId":"khs818"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":27,"author":{"gitId":"khs818"},"content":"     * To generate a Event detail and store in the tasks list according to user input.","lastModifiedDate":"2022-04-11"},{"lineNumber":28,"author":{"gitId":"khs818"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"khs818"},"content":"     * @param tasks the list of tasks;","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"khs818"},"content":"     * @param storage to save the event detail of the task.","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"khs818"},"content":"     * @return a command which generates events task.","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"khs818"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":33,"author":{"gitId":"khs818"},"content":"    public static Command getCommand(TaskList tasks, Storage storage){","lastModifiedDate":"2022-04-06"},{"lineNumber":34,"author":{"gitId":"khs818"},"content":"        return fullCommand -\u003e {","lastModifiedDate":"2022-04-06"},{"lineNumber":35,"author":{"gitId":"khs818"},"content":"            List\u003cString\u003e commandList \u003d List.of(fullCommand);","lastModifiedDate":"2022-04-06"},{"lineNumber":36,"author":{"gitId":"khs818"},"content":"            int position \u003d commandList.indexOf(\"/at\");","lastModifiedDate":"2022-04-06"},{"lineNumber":37,"author":{"gitId":"khs818"},"content":"            try{","lastModifiedDate":"2022-04-06"},{"lineNumber":38,"author":{"gitId":"khs818"},"content":"                checkDescription(position);","lastModifiedDate":"2022-04-06"},{"lineNumber":39,"author":{"gitId":"khs818"},"content":"                checkTime(position);","lastModifiedDate":"2022-04-06"},{"lineNumber":40,"author":{"gitId":"khs818"},"content":"                String description \u003d String.join(\" \", commandList.subList(1, position));","lastModifiedDate":"2022-04-06"},{"lineNumber":41,"author":{"gitId":"khs818"},"content":"                String time \u003d String.join(\" \", commandList.subList(position + 1, fullCommand.length));","lastModifiedDate":"2022-04-06"},{"lineNumber":42,"author":{"gitId":"khs818"},"content":"                Task eventTask \u003d new Event(description, time);","lastModifiedDate":"2022-04-06"},{"lineNumber":43,"author":{"gitId":"khs818"},"content":"                tasks.add(eventTask);","lastModifiedDate":"2022-04-06"},{"lineNumber":44,"author":{"gitId":"khs818"},"content":"                storage.store(tasks.convertAsLines());","lastModifiedDate":"2022-04-06"},{"lineNumber":45,"author":{"gitId":"khs818"},"content":"                return List.of(\"Got it. I\u0027ve added this task: \" + System.lineSeparator() +","lastModifiedDate":"2022-04-06"},{"lineNumber":46,"author":{"gitId":"khs818"},"content":"                        \"     \" + eventTask + System.lineSeparator() +","lastModifiedDate":"2022-04-06"},{"lineNumber":47,"author":{"gitId":"khs818"},"content":"                        \"   Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-04-06"},{"lineNumber":48,"author":{"gitId":"khs818"},"content":"            }catch(DukeException e){","lastModifiedDate":"2022-04-06"},{"lineNumber":49,"author":{"gitId":"khs818"},"content":"                return List.of(\" OOPS!!! The description of a \" + \"Event\" + \" cannot be empty.\");","lastModifiedDate":"2022-04-11"},{"lineNumber":50,"author":{"gitId":"khs818"},"content":"            }catch(DukeCheckLineException e){","lastModifiedDate":"2022-04-06"},{"lineNumber":51,"author":{"gitId":"khs818"},"content":"                return List.of(\" OOPS!!! An event must have a time.\");","lastModifiedDate":"2022-04-11"},{"lineNumber":52,"author":{"gitId":"khs818"},"content":"            }","lastModifiedDate":"2022-04-06"},{"lineNumber":53,"author":{"gitId":"khs818"},"content":"        };","lastModifiedDate":"2022-04-06"},{"lineNumber":54,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":55,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":56,"author":{"gitId":"khs818"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":57,"author":{"gitId":"khs818"},"content":"     * Return a list of strings that can be saved.","lastModifiedDate":"2022-04-11"},{"lineNumber":58,"author":{"gitId":"khs818"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":59,"author":{"gitId":"khs818"},"content":"     * @return a task list for saving.","lastModifiedDate":"2022-04-11"},{"lineNumber":60,"author":{"gitId":"khs818"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":61,"author":{"gitId":"khs818"},"content":"    @Override","lastModifiedDate":"2022-04-11"},{"lineNumber":62,"author":{"gitId":"khs818"},"content":"    public List\u003cString\u003e getList(){","lastModifiedDate":"2022-04-11"},{"lineNumber":63,"author":{"gitId":"khs818"},"content":"        List\u003cString\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-04-11"},{"lineNumber":64,"author":{"gitId":"khs818"},"content":"        list.add(\"E\");","lastModifiedDate":"2022-04-11"},{"lineNumber":65,"author":{"gitId":"khs818"},"content":"        list.addAll(super.getList());","lastModifiedDate":"2022-04-11"},{"lineNumber":66,"author":{"gitId":"khs818"},"content":"        list.add(convertSaveTimeString());","lastModifiedDate":"2022-04-11"},{"lineNumber":67,"author":{"gitId":"khs818"},"content":"        return list;","lastModifiedDate":"2022-04-11"},{"lineNumber":68,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":69,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":70,"author":{"gitId":"khs818"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":71,"author":{"gitId":"khs818"},"content":"     * Return a list of strings to user.","lastModifiedDate":"2022-04-11"},{"lineNumber":72,"author":{"gitId":"khs818"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":73,"author":{"gitId":"khs818"},"content":"     * @return this string task.","lastModifiedDate":"2022-04-11"},{"lineNumber":74,"author":{"gitId":"khs818"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":75,"author":{"gitId":"khs818"},"content":"    @Override","lastModifiedDate":"2022-02-16"},{"lineNumber":76,"author":{"gitId":"khs818"},"content":"    public String toString(){","lastModifiedDate":"2022-02-16"},{"lineNumber":77,"author":{"gitId":"khs818"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + convertTimeString() + \")\";","lastModifiedDate":"2022-04-11"},{"lineNumber":78,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":79,"author":{"gitId":"khs818"},"content":"}","lastModifiedDate":"2022-02-16"}],"authorContributionMap":{"khs818":79}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khs818"},"content":"package duke.task;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"khs818"},"content":"import java.util.List;","lastModifiedDate":"2022-04-06"},{"lineNumber":4,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":5,"author":{"gitId":"khs818"},"content":"public class Task {","lastModifiedDate":"2022-02-09"},{"lineNumber":6,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":7,"author":{"gitId":"khs818"},"content":"    protected String description;","lastModifiedDate":"2022-02-09"},{"lineNumber":8,"author":{"gitId":"khs818"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-02-09"},{"lineNumber":9,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":10,"author":{"gitId":"khs818"},"content":"    public Task(String description){","lastModifiedDate":"2022-02-09"},{"lineNumber":11,"author":{"gitId":"khs818"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-02-09"},{"lineNumber":12,"author":{"gitId":"khs818"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-02-09"},{"lineNumber":13,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":14,"author":{"gitId":"khs818"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"khs818"},"content":"     * Marks this task as done.","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"khs818"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"khs818"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-02-09"},{"lineNumber":18,"author":{"gitId":"khs818"},"content":"        isDone \u003d true;","lastModifiedDate":"2022-02-09"},{"lineNumber":19,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":20,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":21,"author":{"gitId":"khs818"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"khs818"},"content":"     * Display the status icon of this task (\" \" or \"x\" symbols) to the user.","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"khs818"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"khs818"},"content":"     * @return Status icon.","lastModifiedDate":"2022-04-11"},{"lineNumber":25,"author":{"gitId":"khs818"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":26,"author":{"gitId":"khs818"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-02-09"},{"lineNumber":27,"author":{"gitId":"khs818"},"content":"        return (isDone ? \"x\" : \" \");","lastModifiedDate":"2022-02-09"},{"lineNumber":28,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":29,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":30,"author":{"gitId":"khs818"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"khs818"},"content":"     * Return a list of strings to user.","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"khs818"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":33,"author":{"gitId":"khs818"},"content":"     * @return This string task.","lastModifiedDate":"2022-04-11"},{"lineNumber":34,"author":{"gitId":"khs818"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":35,"author":{"gitId":"khs818"},"content":"    public String toString() {","lastModifiedDate":"2022-02-09"},{"lineNumber":36,"author":{"gitId":"khs818"},"content":"        return \"[\" + getStatusIcon() + \"]\" + description;","lastModifiedDate":"2022-02-09"},{"lineNumber":37,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-02-09"},{"lineNumber":38,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":39,"author":{"gitId":"khs818"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":40,"author":{"gitId":"khs818"},"content":"     * Return a list of strings that can be saved.","lastModifiedDate":"2022-04-11"},{"lineNumber":41,"author":{"gitId":"khs818"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":42,"author":{"gitId":"khs818"},"content":"     * @return A task list for saving.","lastModifiedDate":"2022-04-11"},{"lineNumber":43,"author":{"gitId":"khs818"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":44,"author":{"gitId":"khs818"},"content":"    public List\u003cString\u003e getList() {","lastModifiedDate":"2022-04-06"},{"lineNumber":45,"author":{"gitId":"khs818"},"content":"        return List.of(isDone ? \"1\" : \"0\", description);","lastModifiedDate":"2022-04-06"},{"lineNumber":46,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":47,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":48,"author":{"gitId":"khs818"},"content":"}","lastModifiedDate":"2022-02-09"}],"authorContributionMap":{"khs818":48}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khs818"},"content":"package duke.task;","lastModifiedDate":"2022-04-06"},{"lineNumber":2,"author":{"gitId":"khs818"},"content":"import duke.exceptions.*;","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"khs818"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-04-06"},{"lineNumber":4,"author":{"gitId":"khs818"},"content":"import java.util.List;","lastModifiedDate":"2022-04-06"},{"lineNumber":5,"author":{"gitId":"khs818"},"content":"import java.util.StringJoiner;","lastModifiedDate":"2022-04-06"},{"lineNumber":6,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":7,"author":{"gitId":"khs818"},"content":"public class TaskList {","lastModifiedDate":"2022-04-06"},{"lineNumber":8,"author":{"gitId":"khs818"},"content":"    private List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-04-06"},{"lineNumber":9,"author":{"gitId":"khs818"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"khs818"},"content":"     * Constructs a new empty task list.","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"khs818"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"khs818"},"content":"    public TaskList() {","lastModifiedDate":"2022-04-06"},{"lineNumber":13,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":14,"author":{"gitId":"khs818"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"khs818"},"content":"     * Parse the given string to a task.","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"khs818"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"khs818"},"content":"     * @param line to parse.","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"khs818"},"content":"     * @return parsed task.","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"khs818"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"khs818"},"content":"    private Task parseTask(String line) {","lastModifiedDate":"2022-04-06"},{"lineNumber":21,"author":{"gitId":"khs818"},"content":"        String[] load \u003d line.split(\"\\\\|\");","lastModifiedDate":"2022-04-06"},{"lineNumber":22,"author":{"gitId":"khs818"},"content":"        Task task;","lastModifiedDate":"2022-04-06"},{"lineNumber":23,"author":{"gitId":"khs818"},"content":"        switch (load[0]){","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"khs818"},"content":"            case \"T\":","lastModifiedDate":"2022-04-06"},{"lineNumber":25,"author":{"gitId":"khs818"},"content":"                task \u003d new ToDo(load[2]);","lastModifiedDate":"2022-04-11"},{"lineNumber":26,"author":{"gitId":"khs818"},"content":"                break;","lastModifiedDate":"2022-04-06"},{"lineNumber":27,"author":{"gitId":"khs818"},"content":"            case \"D\":","lastModifiedDate":"2022-04-06"},{"lineNumber":28,"author":{"gitId":"khs818"},"content":"                task \u003d new Deadline(load[2], load[3]);","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"khs818"},"content":"                break;","lastModifiedDate":"2022-04-06"},{"lineNumber":30,"author":{"gitId":"khs818"},"content":"            case \"E\":","lastModifiedDate":"2022-04-06"},{"lineNumber":31,"author":{"gitId":"khs818"},"content":"                task \u003d new Event(load[2], load[3]);","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"khs818"},"content":"                break;","lastModifiedDate":"2022-04-06"},{"lineNumber":33,"author":{"gitId":"khs818"},"content":"            default:","lastModifiedDate":"2022-04-06"},{"lineNumber":34,"author":{"gitId":"khs818"},"content":"                return null;","lastModifiedDate":"2022-04-06"},{"lineNumber":35,"author":{"gitId":"khs818"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":36,"author":{"gitId":"khs818"},"content":"        if(load[1].equals(\"1\")){","lastModifiedDate":"2022-04-06"},{"lineNumber":37,"author":{"gitId":"khs818"},"content":"            task.markAsDone();","lastModifiedDate":"2022-04-06"},{"lineNumber":38,"author":{"gitId":"khs818"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":39,"author":{"gitId":"khs818"},"content":"        return task;","lastModifiedDate":"2022-04-06"},{"lineNumber":40,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":41,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":42,"author":{"gitId":"khs818"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":43,"author":{"gitId":"khs818"},"content":"     * Constructs a task list with the parsed tasks.","lastModifiedDate":"2022-04-11"},{"lineNumber":44,"author":{"gitId":"khs818"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":45,"author":{"gitId":"khs818"},"content":"     * @param lines to parse tasks.","lastModifiedDate":"2022-04-11"},{"lineNumber":46,"author":{"gitId":"khs818"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":47,"author":{"gitId":"khs818"},"content":"    public TaskList(List\u003cString\u003e lines){","lastModifiedDate":"2022-04-06"},{"lineNumber":48,"author":{"gitId":"khs818"},"content":"        for(String line : lines){","lastModifiedDate":"2022-04-06"},{"lineNumber":49,"author":{"gitId":"khs818"},"content":"            tasks.add(parseTask(line));","lastModifiedDate":"2022-04-06"},{"lineNumber":50,"author":{"gitId":"khs818"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":51,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":52,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":53,"author":{"gitId":"khs818"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":54,"author":{"gitId":"khs818"},"content":"     * Converts the task list into a list of lines for saving.","lastModifiedDate":"2022-04-11"},{"lineNumber":55,"author":{"gitId":"khs818"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":56,"author":{"gitId":"khs818"},"content":"     * @return a list of converted tasks.","lastModifiedDate":"2022-04-11"},{"lineNumber":57,"author":{"gitId":"khs818"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":58,"author":{"gitId":"khs818"},"content":"    public List\u003cString\u003e convertAsLines(){","lastModifiedDate":"2022-04-06"},{"lineNumber":59,"author":{"gitId":"khs818"},"content":"        List\u003cString\u003e saveIn \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-04-06"},{"lineNumber":60,"author":{"gitId":"khs818"},"content":"        for(Task task : tasks){","lastModifiedDate":"2022-04-06"},{"lineNumber":61,"author":{"gitId":"khs818"},"content":"            saveIn.add(getSaveIn(task));","lastModifiedDate":"2022-04-06"},{"lineNumber":62,"author":{"gitId":"khs818"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":63,"author":{"gitId":"khs818"},"content":"        return saveIn;","lastModifiedDate":"2022-04-06"},{"lineNumber":64,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":65,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":66,"author":{"gitId":"khs818"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":67,"author":{"gitId":"khs818"},"content":"     * Converts the provided task to a string for saving.","lastModifiedDate":"2022-04-11"},{"lineNumber":68,"author":{"gitId":"khs818"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":69,"author":{"gitId":"khs818"},"content":"     * @param task to convert into a string.","lastModifiedDate":"2022-04-11"},{"lineNumber":70,"author":{"gitId":"khs818"},"content":"     * @return string for saving.","lastModifiedDate":"2022-04-11"},{"lineNumber":71,"author":{"gitId":"khs818"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":72,"author":{"gitId":"khs818"},"content":"    private String getSaveIn(Task task){","lastModifiedDate":"2022-04-06"},{"lineNumber":73,"author":{"gitId":"khs818"},"content":"        StringJoiner joiner \u003d new StringJoiner(\"|\");","lastModifiedDate":"2022-04-06"},{"lineNumber":74,"author":{"gitId":"khs818"},"content":"        for(String stringLine : task.getList()){","lastModifiedDate":"2022-04-06"},{"lineNumber":75,"author":{"gitId":"khs818"},"content":"            joiner.add(stringLine);","lastModifiedDate":"2022-04-06"},{"lineNumber":76,"author":{"gitId":"khs818"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":77,"author":{"gitId":"khs818"},"content":"        return joiner.toString();","lastModifiedDate":"2022-04-06"},{"lineNumber":78,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":79,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":80,"author":{"gitId":"khs818"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":81,"author":{"gitId":"khs818"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2022-04-11"},{"lineNumber":82,"author":{"gitId":"khs818"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":83,"author":{"gitId":"khs818"},"content":"     * @param task to add.","lastModifiedDate":"2022-04-11"},{"lineNumber":84,"author":{"gitId":"khs818"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":85,"author":{"gitId":"khs818"},"content":"    public void add(Task task){","lastModifiedDate":"2022-04-06"},{"lineNumber":86,"author":{"gitId":"khs818"},"content":"        tasks.add(task);","lastModifiedDate":"2022-04-06"},{"lineNumber":87,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":88,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":89,"author":{"gitId":"khs818"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":90,"author":{"gitId":"khs818"},"content":"     * Remove a task from the task list according to index provided by the user.","lastModifiedDate":"2022-04-11"},{"lineNumber":91,"author":{"gitId":"khs818"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":92,"author":{"gitId":"khs818"},"content":"     * @param index position of the task in the list.","lastModifiedDate":"2022-04-11"},{"lineNumber":93,"author":{"gitId":"khs818"},"content":"     * @return the removed task.","lastModifiedDate":"2022-04-11"},{"lineNumber":94,"author":{"gitId":"khs818"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":95,"author":{"gitId":"khs818"},"content":"    public Task remove(int index){","lastModifiedDate":"2022-04-06"},{"lineNumber":96,"author":{"gitId":"khs818"},"content":"        return tasks.remove(index);","lastModifiedDate":"2022-04-06"},{"lineNumber":97,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":98,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":99,"author":{"gitId":"khs818"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":100,"author":{"gitId":"khs818"},"content":"     * Return the task of given index in the list.","lastModifiedDate":"2022-04-11"},{"lineNumber":101,"author":{"gitId":"khs818"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":102,"author":{"gitId":"khs818"},"content":"     * @param index position of the task in the list.","lastModifiedDate":"2022-04-11"},{"lineNumber":103,"author":{"gitId":"khs818"},"content":"     * @return the requested task.","lastModifiedDate":"2022-04-11"},{"lineNumber":104,"author":{"gitId":"khs818"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":105,"author":{"gitId":"khs818"},"content":"    public Task get(int index){","lastModifiedDate":"2022-04-06"},{"lineNumber":106,"author":{"gitId":"khs818"},"content":"        return tasks.get(index);","lastModifiedDate":"2022-04-06"},{"lineNumber":107,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":108,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":109,"author":{"gitId":"khs818"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":110,"author":{"gitId":"khs818"},"content":"     * Return of the size of the task list.","lastModifiedDate":"2022-04-11"},{"lineNumber":111,"author":{"gitId":"khs818"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":112,"author":{"gitId":"khs818"},"content":"     * @return the size of the task list.","lastModifiedDate":"2022-04-11"},{"lineNumber":113,"author":{"gitId":"khs818"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":114,"author":{"gitId":"khs818"},"content":"    public int size(){","lastModifiedDate":"2022-04-06"},{"lineNumber":115,"author":{"gitId":"khs818"},"content":"        return tasks.size();","lastModifiedDate":"2022-04-06"},{"lineNumber":116,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":117,"author":{"gitId":"khs818"},"content":"}","lastModifiedDate":"2022-04-06"}],"authorContributionMap":{"khs818":117}},{"path":"src/main/java/duke/task/Time.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khs818"},"content":"package duke.task;","lastModifiedDate":"2022-04-11"},{"lineNumber":2,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"khs818"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"khs818"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"khs818"},"content":"import duke.exceptions.*;","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"khs818"},"content":"public class Time extends Task{","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"khs818"},"content":"    private LocalDateTime time;","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"khs818"},"content":"    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"khs818"},"content":"    Time(String description, String timeString){","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"khs818"},"content":"        super(description);","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"khs818"},"content":"        time \u003d LocalDateTime.parse(timeString, formatter);","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"khs818"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"khs818"},"content":"     * To convert the time for saving.","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"khs818"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"khs818"},"content":"     * @return time as a string.","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"khs818"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"khs818"},"content":"    String convertSaveTimeString(){","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"khs818"},"content":"        return formatter.format(time);","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"khs818"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":25,"author":{"gitId":"khs818"},"content":"     * Send a converted time string to display to the user.","lastModifiedDate":"2022-04-11"},{"lineNumber":26,"author":{"gitId":"khs818"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":27,"author":{"gitId":"khs818"},"content":"     * @return time as a string.","lastModifiedDate":"2022-04-11"},{"lineNumber":28,"author":{"gitId":"khs818"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"khs818"},"content":"    String convertTimeString(){","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"khs818"},"content":"        return DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\").format(time);","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":33,"author":{"gitId":"khs818"},"content":"}","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"khs818":33}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khs818"},"content":"package duke.task;","lastModifiedDate":"2022-03-21"},{"lineNumber":2,"author":{"gitId":"khs818"},"content":"import duke.exceptions.*;","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"khs818"},"content":"import duke.command.Command;","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"khs818"},"content":"import duke.Storage;","lastModifiedDate":"2022-04-06"},{"lineNumber":5,"author":{"gitId":"khs818"},"content":"import duke.exceptions.*;","lastModifiedDate":"2022-04-06"},{"lineNumber":6,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":7,"author":{"gitId":"khs818"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-04-06"},{"lineNumber":8,"author":{"gitId":"khs818"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-04-06"},{"lineNumber":9,"author":{"gitId":"khs818"},"content":"import java.util.List;","lastModifiedDate":"2022-04-06"},{"lineNumber":10,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":11,"author":{"gitId":"khs818"},"content":"public class ToDo extends Task{","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"khs818"},"content":"    public ToDo(String description){","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"khs818"},"content":"        super(description);","lastModifiedDate":"2022-02-16"},{"lineNumber":15,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-02-16"},{"lineNumber":16,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":17,"author":{"gitId":"khs818"},"content":"    public static void checkDescription(String[] command)throws DukeException {","lastModifiedDate":"2022-04-06"},{"lineNumber":18,"author":{"gitId":"khs818"},"content":"        if(command.length \u003d\u003d 1){","lastModifiedDate":"2022-04-06"},{"lineNumber":19,"author":{"gitId":"khs818"},"content":"            throw new DukeException();","lastModifiedDate":"2022-04-06"},{"lineNumber":20,"author":{"gitId":"khs818"},"content":"        }","lastModifiedDate":"2022-04-06"},{"lineNumber":21,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":22,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":23,"author":{"gitId":"khs818"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"khs818"},"content":"     * To generate a Todo detail and store in the tasks list according to user input.","lastModifiedDate":"2022-04-11"},{"lineNumber":25,"author":{"gitId":"khs818"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":26,"author":{"gitId":"khs818"},"content":"     * @param tasks the list of tasks;","lastModifiedDate":"2022-04-11"},{"lineNumber":27,"author":{"gitId":"khs818"},"content":"     * @param storage to save the todo detail of the task.","lastModifiedDate":"2022-04-11"},{"lineNumber":28,"author":{"gitId":"khs818"},"content":"     * @return a command which generates todo task.","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"khs818"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"khs818"},"content":"    public static Command getCommand(TaskList tasks, Storage storage){","lastModifiedDate":"2022-04-06"},{"lineNumber":31,"author":{"gitId":"khs818"},"content":"        return fullCommand -\u003e{","lastModifiedDate":"2022-04-06"},{"lineNumber":32,"author":{"gitId":"khs818"},"content":"            try{","lastModifiedDate":"2022-04-06"},{"lineNumber":33,"author":{"gitId":"khs818"},"content":"                checkDescription(fullCommand);","lastModifiedDate":"2022-04-06"},{"lineNumber":34,"author":{"gitId":"khs818"},"content":"                String[] keyword \u003d Arrays.copyOfRange(fullCommand, 1, fullCommand.length);","lastModifiedDate":"2022-04-06"},{"lineNumber":35,"author":{"gitId":"khs818"},"content":"                Task todoTask \u003d new ToDo(String.join(\" \", keyword));","lastModifiedDate":"2022-04-11"},{"lineNumber":36,"author":{"gitId":"khs818"},"content":"                tasks.add(todoTask);","lastModifiedDate":"2022-04-06"},{"lineNumber":37,"author":{"gitId":"khs818"},"content":"                storage.store(tasks.convertAsLines());","lastModifiedDate":"2022-04-06"},{"lineNumber":38,"author":{"gitId":"khs818"},"content":"                return List.of(\"Got it. I\u0027ve added this task: \" + System.lineSeparator() +","lastModifiedDate":"2022-04-06"},{"lineNumber":39,"author":{"gitId":"khs818"},"content":"                        \"     \" + todoTask + System.lineSeparator() +","lastModifiedDate":"2022-04-06"},{"lineNumber":40,"author":{"gitId":"khs818"},"content":"                        \"   Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2022-04-06"},{"lineNumber":41,"author":{"gitId":"khs818"},"content":"            }catch(DukeException e){","lastModifiedDate":"2022-04-06"},{"lineNumber":42,"author":{"gitId":"khs818"},"content":"                return List.of(\" OOPS!!! The description of a \" + \"todo\" + \" cannot be empty.\");","lastModifiedDate":"2022-04-11"},{"lineNumber":43,"author":{"gitId":"khs818"},"content":"            }","lastModifiedDate":"2022-04-06"},{"lineNumber":44,"author":{"gitId":"khs818"},"content":"        };","lastModifiedDate":"2022-04-06"},{"lineNumber":45,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":46,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":47,"author":{"gitId":"khs818"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":48,"author":{"gitId":"khs818"},"content":"     * Return a list of strings to user.","lastModifiedDate":"2022-04-11"},{"lineNumber":49,"author":{"gitId":"khs818"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":50,"author":{"gitId":"khs818"},"content":"     * @return this string task.","lastModifiedDate":"2022-04-11"},{"lineNumber":51,"author":{"gitId":"khs818"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":52,"author":{"gitId":"khs818"},"content":"    @Override","lastModifiedDate":"2022-04-11"},{"lineNumber":53,"author":{"gitId":"khs818"},"content":"    public String toString(){","lastModifiedDate":"2022-04-11"},{"lineNumber":54,"author":{"gitId":"khs818"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-04-11"},{"lineNumber":55,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":56,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-06"},{"lineNumber":57,"author":{"gitId":"khs818"},"content":"    /**","lastModifiedDate":"2022-04-11"},{"lineNumber":58,"author":{"gitId":"khs818"},"content":"     * Return a list of strings that can be saved.","lastModifiedDate":"2022-04-11"},{"lineNumber":59,"author":{"gitId":"khs818"},"content":"     *","lastModifiedDate":"2022-04-11"},{"lineNumber":60,"author":{"gitId":"khs818"},"content":"     * @return a task list for saving.","lastModifiedDate":"2022-04-11"},{"lineNumber":61,"author":{"gitId":"khs818"},"content":"     */","lastModifiedDate":"2022-04-11"},{"lineNumber":62,"author":{"gitId":"khs818"},"content":"    @Override","lastModifiedDate":"2022-04-06"},{"lineNumber":63,"author":{"gitId":"khs818"},"content":"    public List\u003cString\u003e getList() {","lastModifiedDate":"2022-04-06"},{"lineNumber":64,"author":{"gitId":"khs818"},"content":"        List\u003cString\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-04-06"},{"lineNumber":65,"author":{"gitId":"khs818"},"content":"        list.add(\"T\");","lastModifiedDate":"2022-04-06"},{"lineNumber":66,"author":{"gitId":"khs818"},"content":"        list.addAll(super.getList());","lastModifiedDate":"2022-04-06"},{"lineNumber":67,"author":{"gitId":"khs818"},"content":"        return list;","lastModifiedDate":"2022-04-06"},{"lineNumber":68,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-06"},{"lineNumber":69,"author":{"gitId":"khs818"},"content":"}","lastModifiedDate":"2022-02-16"}],"authorContributionMap":{"khs818":69}},{"path":"src/test/java/duke/command/ByeCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khs818"},"content":"package duke.command;","lastModifiedDate":"2022-04-11"},{"lineNumber":2,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"khs818"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"khs818"},"content":"import java.util.List;","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"khs818"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"khs818"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"khs818"},"content":"class ByeCommandTest {","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"khs818"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"khs818"},"content":"    void run() {","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"khs818"},"content":"        List\u003cString\u003e message \u003d new ByeCommand().run(new String[]{\"bye\"});","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"khs818"},"content":"        assertEquals(List.of(\"Bye. Hope to see you again soon!\"), message);","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"khs818"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"khs818"},"content":"    void isExit() {","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"khs818"},"content":"        assertTrue(new ByeCommand().isExit());","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"khs818"},"content":"}","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"khs818":22}},{"path":"src/test/java/duke/command/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khs818"},"content":"package duke.command;","lastModifiedDate":"2022-04-11"},{"lineNumber":2,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"khs818"},"content":"import duke.task.StorageTemp;","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"khs818"},"content":"import duke.task.Task;","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"khs818"},"content":"import duke.task.TaskListTemp;","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"khs818"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"khs818"},"content":"import java.io.IOException;","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"khs818"},"content":"import java.util.List;","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"khs818"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"khs818"},"content":"class DeleteCommandTest {","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"khs818"},"content":"    private static final TaskListTemp taskListTemp \u003d new TaskListTemp();","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"khs818"},"content":"    private static final StorageTemp storageTemp \u003d new StorageTemp();","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"khs818"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"khs818"},"content":"    void run() throws IOException {","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"khs818"},"content":"        String removeString \u003d new Task(\"remove 3\").toString();","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"khs818"},"content":"        List\u003cString\u003e expected \u003d List.of(\"Noted. I\u0027ve removed this task: \" + System.lineSeparator() + \"     \"","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"khs818"},"content":"                + removeString);","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"khs818"},"content":"        List\u003cString\u003e actual \u003d new DeleteCommand(taskListTemp, storageTemp).run(","lastModifiedDate":"2022-04-11"},{"lineNumber":25,"author":{"gitId":"khs818"},"content":"                new String[]{\"delete\", \"4\"});","lastModifiedDate":"2022-04-11"},{"lineNumber":26,"author":{"gitId":"khs818"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2022-04-11"},{"lineNumber":27,"author":{"gitId":"khs818"},"content":"        assertEquals(removeString, taskListTemp.doTask.toString());","lastModifiedDate":"2022-04-11"},{"lineNumber":28,"author":{"gitId":"khs818"},"content":"        assertEquals(removeString, storageTemp.stored.get(0));","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"khs818"},"content":"}","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"khs818":30}},{"path":"src/test/java/duke/command/DoneCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khs818"},"content":"package duke.command;","lastModifiedDate":"2022-04-11"},{"lineNumber":2,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"khs818"},"content":"import duke.task.StorageTemp;","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"khs818"},"content":"import duke.task.TaskListTemp;","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"khs818"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"khs818"},"content":"import java.io.IOException;","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"khs818"},"content":"import java.util.List;","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"khs818"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"khs818"},"content":"class DoneCommandTest {","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"khs818"},"content":"    private static final TaskListTemp taskListTemp \u003d new TaskListTemp();","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"khs818"},"content":"    private static final StorageTemp storageTemp \u003d new StorageTemp();","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"khs818"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"khs818"},"content":"    void run() throws IOException {","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"khs818"},"content":"        List\u003cString\u003e expected \u003d List.of(\"Nice! I\u0027ve marked this task as done: \" + System.lineSeparator()","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"khs818"},"content":"                + \"     \" + \"[x]get 2\");","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"khs818"},"content":"        List\u003cString\u003e actual \u003d new DoneCommand(taskListTemp, storageTemp).run(new String[]{\"done\", \"3\"});","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"khs818"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"khs818"},"content":"}","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"khs818":24}},{"path":"src/test/java/duke/command/ListCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khs818"},"content":"package duke.command;","lastModifiedDate":"2022-04-11"},{"lineNumber":2,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"khs818"},"content":"import duke.task.TaskListTemp;","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"khs818"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"khs818"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"khs818"},"content":"import java.util.List;","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"khs818"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"khs818"},"content":"class ListCommandTest {","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"khs818"},"content":"    private static final TaskListTemp taskListTemp \u003d new TaskListTemp();","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"khs818"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"khs818"},"content":"    void run() {","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"khs818"},"content":"        List\u003cString\u003e expected \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"khs818"},"content":"        expected.add(\"Here are the tasks in your list:\");","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"khs818"},"content":"        for (int i \u003d 0; i \u003c taskListTemp.size(); i++) {","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"khs818"},"content":"            expected.add(i + 1 + \".\" + taskListTemp.get(i));","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"khs818"},"content":"        }","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"khs818"},"content":"        List\u003cString\u003e actual \u003d new ListCommand(taskListTemp).run(new String[]{\"list\"});","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"khs818"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"khs818"},"content":"}","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"khs818":24}},{"path":"src/test/java/duke/task/DukeCheckLineExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khs818"},"content":"package duke.task;","lastModifiedDate":"2022-04-11"},{"lineNumber":2,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"khs818"},"content":"import duke.exceptions.DukeCheckLineException;","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"khs818"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"khs818"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"khs818"},"content":"class DukeCheckLineExceptionTest {","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"khs818"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"khs818"},"content":"    void testDukeCheckLineException() {","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"khs818"},"content":"        DukeCheckLineException exception \u003d new DukeCheckLineException();","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"khs818"},"content":"        assertNull(exception.getMessage());","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"khs818"},"content":"}","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"khs818":14}},{"path":"src/test/java/duke/task/DukeExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khs818"},"content":"package duke.task;","lastModifiedDate":"2022-04-11"},{"lineNumber":2,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"khs818"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"khs818"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"khs818"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"khs818"},"content":"class DukeExceptionTest {","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"khs818"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"khs818"},"content":"    void testDukeException() {","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"khs818"},"content":"        DukeException exception \u003d new DukeException();","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"khs818"},"content":"        assertNull(exception.getMessage());","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"khs818"},"content":"}","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"khs818":14}},{"path":"src/test/java/duke/task/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khs818"},"content":"package duke.task;","lastModifiedDate":"2022-04-11"},{"lineNumber":2,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"khs818"},"content":"import duke.Parser;","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"khs818"},"content":"import duke.command.Command;","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"khs818"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"khs818"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"khs818"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"khs818"},"content":"import java.io.IOException;","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"khs818"},"content":"import java.util.List;","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"khs818"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"khs818"},"content":"class ParserTest {","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"khs818"},"content":"    private Parser parser;","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"khs818"},"content":"    @BeforeEach","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"khs818"},"content":"    void  elementary() {","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"khs818"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"khs818"},"content":"        parser.capture(\"wang\", fullCommand -\u003e List.of(fullCommand[0]));","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"khs818"},"content":"        parser.capture(\"wenwei\", fullCommand -\u003e List.of(fullCommand[1]));","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"khs818"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":25,"author":{"gitId":"khs818"},"content":"    void parserValidCommandWang() throws DukeException, IOException {","lastModifiedDate":"2022-04-11"},{"lineNumber":26,"author":{"gitId":"khs818"},"content":"        Command command \u003d parser.parse(new String[]{\"wang\"});","lastModifiedDate":"2022-04-11"},{"lineNumber":27,"author":{"gitId":"khs818"},"content":"        assertEquals(\"wang\", command.run(new String[]{\"wang\", \"input\"}).get(0));","lastModifiedDate":"2022-04-11"},{"lineNumber":28,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"khs818"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"khs818"},"content":"    void parserValidCommandWenwei() throws DukeException, IOException, DukeException {","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"khs818"},"content":"        Command command \u003d parser.parse(new String[]{\"wenwei\"});","lastModifiedDate":"2022-04-11"},{"lineNumber":33,"author":{"gitId":"khs818"},"content":"        assertEquals(\"input\", command.run(new String[]{\"wenwei\", \"input\"}).get(0));","lastModifiedDate":"2022-04-11"},{"lineNumber":34,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":35,"author":{"gitId":"khs818"},"content":"}","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"khs818":35}},{"path":"src/test/java/duke/task/StorageTemp.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khs818"},"content":"package duke.task;","lastModifiedDate":"2022-04-11"},{"lineNumber":2,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"khs818"},"content":"import duke.Storage;","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"khs818"},"content":"import java.util.List;","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"khs818"},"content":"public class StorageTemp extends Storage {","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"khs818"},"content":"    public List\u003cString\u003e stored;","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"khs818"},"content":"    public StorageTemp() {","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"khs818"},"content":"        super(\"StorageTemp.txt\");","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"khs818"},"content":"    @Override","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"khs818"},"content":"    public void store(List\u003cString\u003e lines) {","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"khs818"},"content":"        stored \u003d lines;","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"khs818"},"content":"}","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"khs818":18}},{"path":"src/test/java/duke/task/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khs818"},"content":"package duke.task;","lastModifiedDate":"2022-04-11"},{"lineNumber":2,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"khs818"},"content":"import duke.Storage;","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"khs818"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"khs818"},"content":"import java.io.IOException;","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"khs818"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"khs818"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"khs818"},"content":"import java.util.List;","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"khs818"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"khs818"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"khs818"},"content":"class StorageTest {","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"khs818"},"content":"    private static final String location \u003d \"StorageTest.txt\";","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"khs818"},"content":"    private static final List\u003cString\u003e data \u003d List.of(\"This is a test file.\", \"You can delete it.\");","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"khs818"},"content":"    @Test","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"khs818"},"content":"    void storeAndLoadTest() throws IOException {","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"khs818"},"content":"        new Storage(location).store(data);","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"khs818"},"content":"        List\u003cString\u003e loadData \u003d new Storage(location).load();","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"khs818"},"content":"        assertEquals(data, loadData);","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"khs818"},"content":"        assertTrue(Files.deleteIfExists(Paths.get(location)));","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":25,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":26,"author":{"gitId":"khs818"},"content":"}","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"khs818":26}},{"path":"src/test/java/duke/task/TaskListTemp.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khs818"},"content":"package duke.task;","lastModifiedDate":"2022-04-11"},{"lineNumber":2,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"khs818"},"content":"import java.util.List;","lastModifiedDate":"2022-04-11"},{"lineNumber":4,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"khs818"},"content":"public class TaskListTemp extends TaskList {","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"khs818"},"content":"    public Task doTask;","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":9,"author":{"gitId":"khs818"},"content":"    @Override","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"khs818"},"content":"    public void add(Task task) {","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"khs818"},"content":"        doTask \u003d task;","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"khs818"},"content":"    @Override","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"khs818"},"content":"    public Task remove(int indexNo) {","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"khs818"},"content":"        return doTask \u003d new Task(\"remove \" + indexNo);","lastModifiedDate":"2022-04-11"},{"lineNumber":17,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":18,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"khs818"},"content":"    @Override","lastModifiedDate":"2022-04-11"},{"lineNumber":20,"author":{"gitId":"khs818"},"content":"    public Task get(int indexNo) {","lastModifiedDate":"2022-04-11"},{"lineNumber":21,"author":{"gitId":"khs818"},"content":"        return doTask \u003d new Task(\"get \" + indexNo);","lastModifiedDate":"2022-04-11"},{"lineNumber":22,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"khs818"},"content":"    @Override","lastModifiedDate":"2022-04-11"},{"lineNumber":25,"author":{"gitId":"khs818"},"content":"    public int size() {","lastModifiedDate":"2022-04-11"},{"lineNumber":26,"author":{"gitId":"khs818"},"content":"        return 1;","lastModifiedDate":"2022-04-11"},{"lineNumber":27,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":28,"author":{"gitId":"khs818"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"khs818"},"content":"    @Override","lastModifiedDate":"2022-04-11"},{"lineNumber":30,"author":{"gitId":"khs818"},"content":"    public List\u003cString\u003e convertAsLines() {","lastModifiedDate":"2022-04-11"},{"lineNumber":31,"author":{"gitId":"khs818"},"content":"        return List.of(doTask.toString());","lastModifiedDate":"2022-04-11"},{"lineNumber":32,"author":{"gitId":"khs818"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":33,"author":{"gitId":"khs818"},"content":"}","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"khs818":33}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"khs818"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"khs818":1,"-":20}}]
