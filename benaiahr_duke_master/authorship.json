[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"benaiahr"},"content":"# List of commands","lastModifiedDate":"2022-04-21"},{"lineNumber":6,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-21"},{"lineNumber":7,"author":{"gitId":"benaiahr"},"content":"Below is the list of commands that can be executed.","lastModifiedDate":"2022-04-21"},{"lineNumber":8,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-21"},{"lineNumber":9,"author":{"gitId":"benaiahr"},"content":"1. Add task ","lastModifiedDate":"2022-04-21"},{"lineNumber":10,"author":{"gitId":"benaiahr"},"content":"   1. Todo (todo [description])","lastModifiedDate":"2022-04-21"},{"lineNumber":11,"author":{"gitId":"benaiahr"},"content":"   2. Event (event [description] /at [yyyy-MM-dd HH:mm])","lastModifiedDate":"2022-04-21"},{"lineNumber":12,"author":{"gitId":"benaiahr"},"content":"   3. Deadline (deadline [description] /at [yyyy-MM-dd HH:mm])","lastModifiedDate":"2022-04-21"},{"lineNumber":13,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-21"},{"lineNumber":14,"author":{"gitId":"benaiahr"},"content":"2. List of tasks (list)","lastModifiedDate":"2022-04-21"},{"lineNumber":15,"author":{"gitId":"benaiahr"},"content":"   ","lastModifiedDate":"2022-04-21"},{"lineNumber":16,"author":{"gitId":"benaiahr"},"content":"3. Update task","lastModifiedDate":"2022-04-21"},{"lineNumber":17,"author":{"gitId":"benaiahr"},"content":"   1. Mark task (mark [index of task])","lastModifiedDate":"2022-04-21"},{"lineNumber":18,"author":{"gitId":"benaiahr"},"content":"   2. Unmark task (unmark [index of task])","lastModifiedDate":"2022-04-21"},{"lineNumber":19,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-21"},{"lineNumber":20,"author":{"gitId":"benaiahr"},"content":"4. Find task","lastModifiedDate":"2022-04-21"},{"lineNumber":21,"author":{"gitId":"benaiahr"},"content":"   1. Word Search (find [keyword])","lastModifiedDate":"2022-04-21"},{"lineNumber":22,"author":{"gitId":"benaiahr"},"content":"   2. Date Search (find [yyyy-MM-dd HH:mm])","lastModifiedDate":"2022-04-21"},{"lineNumber":23,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-21"},{"lineNumber":24,"author":{"gitId":"benaiahr"},"content":"5. Snooze task (snooze [index of task] [year/month/day/hour/minute] [amount])","lastModifiedDate":"2022-04-21"},{"lineNumber":25,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-21"},{"lineNumber":26,"author":{"gitId":"benaiahr"},"content":"5. Load file (load)","lastModifiedDate":"2022-04-21"},{"lineNumber":27,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-21"},{"lineNumber":28,"author":{"gitId":"benaiahr"},"content":"6. Delete task (delete [index of task]","lastModifiedDate":"2022-04-21"},{"lineNumber":29,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-21"},{"lineNumber":30,"author":{"gitId":"benaiahr"},"content":"7. Exit program (bye)","lastModifiedDate":"2022-04-21"},{"lineNumber":31,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-21"},{"lineNumber":32,"author":{"gitId":"benaiahr"},"content":"---","lastModifiedDate":"2022-04-21"},{"lineNumber":33,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":24,"benaiahr":29}},{"path":"src/main/java/zhixuan/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package zhixuan.duke;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.File;","lastModifiedDate":"2022-04-19"},{"lineNumber":4,"author":{"gitId":"benaiahr"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-13"},{"lineNumber":5,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":6,"author":{"gitId":"benaiahr"},"content":"import zhixuan.duke.storage.StorageFile;","lastModifiedDate":"2022-04-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import zhixuan.duke.ui.DukeUI;","lastModifiedDate":"2022-04-08"},{"lineNumber":8,"author":{"gitId":"benaiahr"},"content":"import zhixuan.duke.commands.Command;","lastModifiedDate":"2022-04-17"},{"lineNumber":9,"author":{"gitId":"benaiahr"},"content":"import zhixuan.duke.commands.ExitCommand;","lastModifiedDate":"2022-04-17"},{"lineNumber":10,"author":{"gitId":"benaiahr"},"content":"import zhixuan.duke.parser.Parser;","lastModifiedDate":"2022-04-17"},{"lineNumber":11,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-04-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Entry point of the Duke application.","lastModifiedDate":"2022-04-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Initializes the application and starts the interaction with the user.","lastModifiedDate":"2022-04-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-04-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private DukeUI ui;","lastModifiedDate":"2022-04-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final File defaultFileLocation \u003d StorageFile.getDefaultLocation();","lastModifiedDate":"2022-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private File fileLocation \u003d defaultFileLocation;","lastModifiedDate":"2022-04-19"},{"lineNumber":21,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":22,"author":{"gitId":"benaiahr"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-04-17"},{"lineNumber":23,"author":{"gitId":"benaiahr"},"content":"        new Duke().run();","lastModifiedDate":"2022-04-17"},{"lineNumber":24,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-04-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Main method that starts the application","lastModifiedDate":"2022-04-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Displays welcome message \u0026 checks for existing list file","lastModifiedDate":"2022-04-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Loads list file if available","lastModifiedDate":"2022-04-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Read \u0026 act on user input","lastModifiedDate":"2022-04-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     **/","lastModifiedDate":"2022-04-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void run() {","lastModifiedDate":"2022-04-08"},{"lineNumber":34,"author":{"gitId":"benaiahr"},"content":"        ui \u003d new DukeUI();","lastModifiedDate":"2022-04-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ui.printWelcomeMessage(StorageFile.loadFile(defaultFileLocation));","lastModifiedDate":"2022-04-19"},{"lineNumber":36,"author":{"gitId":"benaiahr"},"content":"        readCommandTillExitLoop();","lastModifiedDate":"2022-04-17"},{"lineNumber":37,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-17"},{"lineNumber":38,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-04-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Constantly read \u0026 process user input till exit command is sent","lastModifiedDate":"2022-04-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     **/","lastModifiedDate":"2022-04-18"},{"lineNumber":42,"author":{"gitId":"benaiahr"},"content":"    private void readCommandTillExitLoop() {","lastModifiedDate":"2022-04-17"},{"lineNumber":43,"author":{"gitId":"benaiahr"},"content":"        Parser pr \u003d new Parser(new Scanner(System.in));","lastModifiedDate":"2022-04-17"},{"lineNumber":44,"author":{"gitId":"benaiahr"},"content":"        Command command \u003d null;","lastModifiedDate":"2022-04-17"},{"lineNumber":45,"author":{"gitId":"benaiahr"},"content":"        while (!ExitCommand.selectedCommand(command)) {","lastModifiedDate":"2022-04-17"},{"lineNumber":46,"author":{"gitId":"benaiahr"},"content":"            command \u003d pr.processInput();","lastModifiedDate":"2022-04-17"},{"lineNumber":47,"author":{"gitId":"benaiahr"},"content":"            boolean isUpdated \u003d command.execute();","lastModifiedDate":"2022-04-17"},{"lineNumber":48,"author":{"gitId":"benaiahr"},"content":"            if (isUpdated) {","lastModifiedDate":"2022-04-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                if (StorageFile.isLoadedNewFile) {","lastModifiedDate":"2022-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                    fileLocation \u003d StorageFile.loadedFile;","lastModifiedDate":"2022-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2022-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                StorageFile.saveFile(fileLocation);","lastModifiedDate":"2022-04-19"},{"lineNumber":53,"author":{"gitId":"benaiahr"},"content":"            }","lastModifiedDate":"2022-02-13"},{"lineNumber":54,"author":{"gitId":"benaiahr"},"content":"        }","lastModifiedDate":"2022-02-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":30,"benaiahr":26}},{"path":"src/main/java/zhixuan/duke/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benaiahr"},"content":"package zhixuan.duke.commands;","lastModifiedDate":"2022-04-11"},{"lineNumber":2,"author":{"gitId":"benaiahr"},"content":"import zhixuan.duke.data.task.TaskManager;","lastModifiedDate":"2022-04-17"},{"lineNumber":3,"author":{"gitId":"benaiahr"},"content":"import zhixuan.duke.common.EnumTask;","lastModifiedDate":"2022-04-17"},{"lineNumber":4,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-04-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Adds task to task list","lastModifiedDate":"2022-04-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":" **/","lastModifiedDate":"2022-04-18"},{"lineNumber":8,"author":{"gitId":"benaiahr"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-04-17"},{"lineNumber":9,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":10,"author":{"gitId":"benaiahr"},"content":"    public static final String TODO_COMMAND \u003d \"todo\";","lastModifiedDate":"2022-04-11"},{"lineNumber":11,"author":{"gitId":"benaiahr"},"content":"    public static final String DEADLINE_COMMAND \u003d \"deadline\";","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"benaiahr"},"content":"    public static final String EVENT_COMMAND \u003d \"event\";","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":14,"author":{"gitId":"benaiahr"},"content":"    private final String type;","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"benaiahr"},"content":"    private final String command;","lastModifiedDate":"2022-04-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final boolean isDone;","lastModifiedDate":"2022-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean isSilent;","lastModifiedDate":"2022-04-19"},{"lineNumber":18,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-04-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructor for normal add task","lastModifiedDate":"2022-04-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-04-18"},{"lineNumber":22,"author":{"gitId":"benaiahr"},"content":"    public AddCommand(String type, String command) {","lastModifiedDate":"2022-04-11"},{"lineNumber":23,"author":{"gitId":"benaiahr"},"content":"        this.type \u003d type.toUpperCase();","lastModifiedDate":"2022-04-11"},{"lineNumber":24,"author":{"gitId":"benaiahr"},"content":"        this.command \u003d command;","lastModifiedDate":"2022-04-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.isSilent \u003d false;","lastModifiedDate":"2022-04-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-04-18"},{"lineNumber":27,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":28,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-04-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructor for add task when loading file","lastModifiedDate":"2022-04-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-04-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public AddCommand(boolean isSilent, String type, boolean isDone, String command) {","lastModifiedDate":"2022-04-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.isSilent \u003d isSilent;","lastModifiedDate":"2022-04-18"},{"lineNumber":34,"author":{"gitId":"benaiahr"},"content":"        this.type \u003d type.toUpperCase();","lastModifiedDate":"2022-04-17"},{"lineNumber":35,"author":{"gitId":"benaiahr"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-04-17"},{"lineNumber":36,"author":{"gitId":"benaiahr"},"content":"        this.command \u003d command;","lastModifiedDate":"2022-04-17"},{"lineNumber":37,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-17"},{"lineNumber":38,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":39,"author":{"gitId":"benaiahr"},"content":"    @Override","lastModifiedDate":"2022-04-11"},{"lineNumber":40,"author":{"gitId":"benaiahr"},"content":"    public boolean execute() {","lastModifiedDate":"2022-04-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return TaskManager.getInstance().addToTaskList(isSilent, EnumTask.valueOf(type), isDone, command);","lastModifiedDate":"2022-04-18"},{"lineNumber":42,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":43,"author":{"gitId":"benaiahr"},"content":"}","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"benaiahr":27,"-":16}},{"path":"src/main/java/zhixuan/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benaiahr"},"content":"package zhixuan.duke.commands;","lastModifiedDate":"2022-04-11"},{"lineNumber":2,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-04-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an executable command.","lastModifiedDate":"2022-04-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-04-18"},{"lineNumber":6,"author":{"gitId":"benaiahr"},"content":"public abstract class Command {","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-04-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     * Executes the command and returns success boolean.","lastModifiedDate":"2022-04-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"     * @retyrn boolean true if successful, else false","lastModifiedDate":"2022-04-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-04-18"},{"lineNumber":13,"author":{"gitId":"benaiahr"},"content":"    public abstract boolean execute();","lastModifiedDate":"2022-04-17"},{"lineNumber":14,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":15,"author":{"gitId":"benaiahr"},"content":"}","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"benaiahr":7,"-":8}},{"path":"src/main/java/zhixuan/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benaiahr"},"content":"package zhixuan.duke.commands;","lastModifiedDate":"2022-04-17"},{"lineNumber":2,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":3,"author":{"gitId":"benaiahr"},"content":"import zhixuan.duke.data.task.TaskManager;","lastModifiedDate":"2022-04-17"},{"lineNumber":4,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":5,"author":{"gitId":"benaiahr"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-04-17"},{"lineNumber":6,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":7,"author":{"gitId":"benaiahr"},"content":"    public static final String DELETE_COMMAND \u003d \"delete\";","lastModifiedDate":"2022-04-19"},{"lineNumber":8,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":9,"author":{"gitId":"benaiahr"},"content":"    private final int index;","lastModifiedDate":"2022-04-17"},{"lineNumber":10,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":11,"author":{"gitId":"benaiahr"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2022-04-17"},{"lineNumber":12,"author":{"gitId":"benaiahr"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-04-17"},{"lineNumber":13,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-17"},{"lineNumber":14,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":15,"author":{"gitId":"benaiahr"},"content":"    @Override","lastModifiedDate":"2022-04-17"},{"lineNumber":16,"author":{"gitId":"benaiahr"},"content":"    public boolean execute() {","lastModifiedDate":"2022-04-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return TaskManager.getInstance().deleteTask(index);","lastModifiedDate":"2022-04-18"},{"lineNumber":18,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-17"},{"lineNumber":19,"author":{"gitId":"benaiahr"},"content":"}","lastModifiedDate":"2022-04-17"}],"authorContributionMap":{"benaiahr":18,"-":1}},{"path":"src/main/java/zhixuan/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benaiahr"},"content":"package zhixuan.duke.commands;","lastModifiedDate":"2022-04-17"},{"lineNumber":2,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":3,"author":{"gitId":"benaiahr"},"content":"import zhixuan.duke.ui.DukeUI;","lastModifiedDate":"2022-04-17"},{"lineNumber":4,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-04-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2022-04-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-04-18"},{"lineNumber":8,"author":{"gitId":"benaiahr"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-04-17"},{"lineNumber":9,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":10,"author":{"gitId":"benaiahr"},"content":"    public static final String BYE_COMMAND \u003d \"bye\";","lastModifiedDate":"2022-04-17"},{"lineNumber":11,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":12,"author":{"gitId":"benaiahr"},"content":"    public static boolean selectedCommand(Command instance) {","lastModifiedDate":"2022-04-17"},{"lineNumber":13,"author":{"gitId":"benaiahr"},"content":"        return (instance instanceof ExitCommand);","lastModifiedDate":"2022-04-17"},{"lineNumber":14,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-17"},{"lineNumber":15,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":16,"author":{"gitId":"benaiahr"},"content":"    @Override","lastModifiedDate":"2022-04-19"},{"lineNumber":17,"author":{"gitId":"benaiahr"},"content":"    public boolean execute() {","lastModifiedDate":"2022-04-17"},{"lineNumber":18,"author":{"gitId":"benaiahr"},"content":"        new DukeUI().printEndingMessage();","lastModifiedDate":"2022-04-17"},{"lineNumber":19,"author":{"gitId":"benaiahr"},"content":"        return false;","lastModifiedDate":"2022-04-17"},{"lineNumber":20,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-17"},{"lineNumber":21,"author":{"gitId":"benaiahr"},"content":"}","lastModifiedDate":"2022-04-17"}],"authorContributionMap":{"benaiahr":18,"-":3}},{"path":"src/main/java/zhixuan/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benaiahr"},"content":"package zhixuan.duke.commands;","lastModifiedDate":"2022-04-19"},{"lineNumber":2,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-19"},{"lineNumber":3,"author":{"gitId":"benaiahr"},"content":"import zhixuan.duke.data.task.TaskManager;","lastModifiedDate":"2022-04-19"},{"lineNumber":4,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-19"},{"lineNumber":5,"author":{"gitId":"benaiahr"},"content":"/**","lastModifiedDate":"2022-04-19"},{"lineNumber":6,"author":{"gitId":"benaiahr"},"content":" * Find task based on specified date or keyword","lastModifiedDate":"2022-04-21"},{"lineNumber":7,"author":{"gitId":"benaiahr"},"content":" */","lastModifiedDate":"2022-04-19"},{"lineNumber":8,"author":{"gitId":"benaiahr"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-04-19"},{"lineNumber":9,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-19"},{"lineNumber":10,"author":{"gitId":"benaiahr"},"content":"    public static final String FIND_COMMAND \u003d \"find\";","lastModifiedDate":"2022-04-19"},{"lineNumber":11,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-19"},{"lineNumber":12,"author":{"gitId":"benaiahr"},"content":"    private final String input;","lastModifiedDate":"2022-04-21"},{"lineNumber":13,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-19"},{"lineNumber":14,"author":{"gitId":"benaiahr"},"content":"    /**","lastModifiedDate":"2022-04-19"},{"lineNumber":15,"author":{"gitId":"benaiahr"},"content":"     * Constructor with input string","lastModifiedDate":"2022-04-21"},{"lineNumber":16,"author":{"gitId":"benaiahr"},"content":"     */","lastModifiedDate":"2022-04-19"},{"lineNumber":17,"author":{"gitId":"benaiahr"},"content":"    public FindCommand(String input) {","lastModifiedDate":"2022-04-21"},{"lineNumber":18,"author":{"gitId":"benaiahr"},"content":"        this.input \u003d input;","lastModifiedDate":"2022-04-21"},{"lineNumber":19,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-19"},{"lineNumber":20,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-19"},{"lineNumber":21,"author":{"gitId":"benaiahr"},"content":"    @Override","lastModifiedDate":"2022-04-19"},{"lineNumber":22,"author":{"gitId":"benaiahr"},"content":"    public boolean execute() {","lastModifiedDate":"2022-04-19"},{"lineNumber":23,"author":{"gitId":"benaiahr"},"content":"        TaskManager.getInstance().findTask(input);","lastModifiedDate":"2022-04-21"},{"lineNumber":24,"author":{"gitId":"benaiahr"},"content":"        return false;","lastModifiedDate":"2022-04-19"},{"lineNumber":25,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-19"},{"lineNumber":26,"author":{"gitId":"benaiahr"},"content":"}","lastModifiedDate":"2022-04-19"}],"authorContributionMap":{"benaiahr":26}},{"path":"src/main/java/zhixuan/duke/commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benaiahr"},"content":"package zhixuan.duke.commands;","lastModifiedDate":"2022-04-17"},{"lineNumber":2,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":3,"author":{"gitId":"benaiahr"},"content":"import zhixuan.duke.ui.DukeUI;","lastModifiedDate":"2022-04-17"},{"lineNumber":4,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-04-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents an invalid command. Upon execution, produces some feedback to the user.","lastModifiedDate":"2022-04-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-04-18"},{"lineNumber":8,"author":{"gitId":"benaiahr"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2022-04-17"},{"lineNumber":9,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":10,"author":{"gitId":"benaiahr"},"content":"    private final static String REPLY_INVALID_INDEX \u003d \"Invalid task selected.\";","lastModifiedDate":"2022-04-17"},{"lineNumber":11,"author":{"gitId":"benaiahr"},"content":"    private final static String REPLY_UNKNOWN_COMMAND \u003d \"You have entered an invalid command.\";","lastModifiedDate":"2022-04-17"},{"lineNumber":12,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":13,"author":{"gitId":"benaiahr"},"content":"    private final String commandType;","lastModifiedDate":"2022-04-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-18"},{"lineNumber":15,"author":{"gitId":"benaiahr"},"content":"    public InvalidCommand(String commandType) {","lastModifiedDate":"2022-04-17"},{"lineNumber":16,"author":{"gitId":"benaiahr"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2022-04-17"},{"lineNumber":17,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-18"},{"lineNumber":19,"author":{"gitId":"benaiahr"},"content":"    private String decipherType() {","lastModifiedDate":"2022-04-17"},{"lineNumber":20,"author":{"gitId":"benaiahr"},"content":"        switch (commandType) {","lastModifiedDate":"2022-04-17"},{"lineNumber":21,"author":{"gitId":"benaiahr"},"content":"            case \"invalid_index\":","lastModifiedDate":"2022-04-17"},{"lineNumber":22,"author":{"gitId":"benaiahr"},"content":"                return REPLY_INVALID_INDEX;","lastModifiedDate":"2022-04-17"},{"lineNumber":23,"author":{"gitId":"benaiahr"},"content":"            default:","lastModifiedDate":"2022-04-17"},{"lineNumber":24,"author":{"gitId":"benaiahr"},"content":"                return REPLY_UNKNOWN_COMMAND;","lastModifiedDate":"2022-04-17"},{"lineNumber":25,"author":{"gitId":"benaiahr"},"content":"        }","lastModifiedDate":"2022-04-17"},{"lineNumber":26,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-17"},{"lineNumber":27,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":28,"author":{"gitId":"benaiahr"},"content":"    @Override","lastModifiedDate":"2022-04-17"},{"lineNumber":29,"author":{"gitId":"benaiahr"},"content":"    public boolean execute() {","lastModifiedDate":"2022-04-17"},{"lineNumber":30,"author":{"gitId":"benaiahr"},"content":"        new DukeUI().showToUser(decipherType());","lastModifiedDate":"2022-04-17"},{"lineNumber":31,"author":{"gitId":"benaiahr"},"content":"        return false;","lastModifiedDate":"2022-04-17"},{"lineNumber":32,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-17"},{"lineNumber":33,"author":{"gitId":"benaiahr"},"content":"}","lastModifiedDate":"2022-04-17"}],"authorContributionMap":{"benaiahr":28,"-":5}},{"path":"src/main/java/zhixuan/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benaiahr"},"content":"package zhixuan.duke.commands;","lastModifiedDate":"2022-04-17"},{"lineNumber":2,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":3,"author":{"gitId":"benaiahr"},"content":"import zhixuan.duke.data.task.TaskManager;","lastModifiedDate":"2022-04-17"},{"lineNumber":4,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-04-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Lists all tasks in the task list.","lastModifiedDate":"2022-04-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-04-18"},{"lineNumber":8,"author":{"gitId":"benaiahr"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-04-17"},{"lineNumber":9,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":10,"author":{"gitId":"benaiahr"},"content":"    public static final String LIST_COMMAND \u003d \"list\";","lastModifiedDate":"2022-04-19"},{"lineNumber":11,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":12,"author":{"gitId":"benaiahr"},"content":"    @Override","lastModifiedDate":"2022-04-19"},{"lineNumber":13,"author":{"gitId":"benaiahr"},"content":"    public boolean execute() {","lastModifiedDate":"2022-04-17"},{"lineNumber":14,"author":{"gitId":"benaiahr"},"content":"        TaskManager.getInstance().listTask();","lastModifiedDate":"2022-04-17"},{"lineNumber":15,"author":{"gitId":"benaiahr"},"content":"        return false;","lastModifiedDate":"2022-04-17"},{"lineNumber":16,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-17"},{"lineNumber":17,"author":{"gitId":"benaiahr"},"content":"    ","lastModifiedDate":"2022-04-17"},{"lineNumber":18,"author":{"gitId":"benaiahr"},"content":"}","lastModifiedDate":"2022-04-17"}],"authorContributionMap":{"benaiahr":15,"-":3}},{"path":"src/main/java/zhixuan/duke/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benaiahr"},"content":"package zhixuan.duke.commands;","lastModifiedDate":"2022-04-17"},{"lineNumber":2,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":3,"author":{"gitId":"benaiahr"},"content":"import zhixuan.duke.data.task.TaskManager;","lastModifiedDate":"2022-04-17"},{"lineNumber":4,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-04-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Mark task based on index","lastModifiedDate":"2022-04-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-04-18"},{"lineNumber":8,"author":{"gitId":"benaiahr"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2022-04-17"},{"lineNumber":9,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":10,"author":{"gitId":"benaiahr"},"content":"    public static final String MARK_COMMAND \u003d \"mark\";","lastModifiedDate":"2022-04-17"},{"lineNumber":11,"author":{"gitId":"benaiahr"},"content":"    public static final String UNMARK_COMMAND \u003d \"unmark\";","lastModifiedDate":"2022-04-17"},{"lineNumber":12,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":13,"author":{"gitId":"benaiahr"},"content":"    private final int index;","lastModifiedDate":"2022-04-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String command;","lastModifiedDate":"2022-04-19"},{"lineNumber":15,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-04-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructor with command (mark/unmark) and index","lastModifiedDate":"2022-04-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-04-18"},{"lineNumber":19,"author":{"gitId":"benaiahr"},"content":"    public MarkCommand(String command, int index) {","lastModifiedDate":"2022-04-17"},{"lineNumber":20,"author":{"gitId":"benaiahr"},"content":"        this.command \u003d command;","lastModifiedDate":"2022-04-17"},{"lineNumber":21,"author":{"gitId":"benaiahr"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-04-17"},{"lineNumber":22,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-17"},{"lineNumber":23,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":24,"author":{"gitId":"benaiahr"},"content":"    @Override","lastModifiedDate":"2022-04-17"},{"lineNumber":25,"author":{"gitId":"benaiahr"},"content":"    public boolean execute() {","lastModifiedDate":"2022-04-17"},{"lineNumber":26,"author":{"gitId":"benaiahr"},"content":"        return TaskManager.getInstance().markTask(command, index);","lastModifiedDate":"2022-04-17"},{"lineNumber":27,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-17"},{"lineNumber":28,"author":{"gitId":"benaiahr"},"content":"    ","lastModifiedDate":"2022-04-17"},{"lineNumber":29,"author":{"gitId":"benaiahr"},"content":"}","lastModifiedDate":"2022-04-17"}],"authorContributionMap":{"benaiahr":22,"-":7}},{"path":"src/main/java/zhixuan/duke/commands/SnoozeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benaiahr"},"content":"package zhixuan.duke.commands;","lastModifiedDate":"2022-04-21"},{"lineNumber":2,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-21"},{"lineNumber":3,"author":{"gitId":"benaiahr"},"content":"import zhixuan.duke.common.EnumDateTime;","lastModifiedDate":"2022-04-21"},{"lineNumber":4,"author":{"gitId":"benaiahr"},"content":"import zhixuan.duke.data.exceptions.InvalidTaskException;","lastModifiedDate":"2022-04-21"},{"lineNumber":5,"author":{"gitId":"benaiahr"},"content":"import zhixuan.duke.data.task.TaskManager;","lastModifiedDate":"2022-04-21"},{"lineNumber":6,"author":{"gitId":"benaiahr"},"content":"import zhixuan.duke.ui.DukeUI;","lastModifiedDate":"2022-04-21"},{"lineNumber":7,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-21"},{"lineNumber":8,"author":{"gitId":"benaiahr"},"content":"/**","lastModifiedDate":"2022-04-21"},{"lineNumber":9,"author":{"gitId":"benaiahr"},"content":" * Snooze due date of task","lastModifiedDate":"2022-04-21"},{"lineNumber":10,"author":{"gitId":"benaiahr"},"content":" **/","lastModifiedDate":"2022-04-21"},{"lineNumber":11,"author":{"gitId":"benaiahr"},"content":"public class SnoozeCommand extends Command {","lastModifiedDate":"2022-04-21"},{"lineNumber":12,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-21"},{"lineNumber":13,"author":{"gitId":"benaiahr"},"content":"    public static final String SNOOZE_COMMAND \u003d \"snooze\";","lastModifiedDate":"2022-04-21"},{"lineNumber":14,"author":{"gitId":"benaiahr"},"content":"    private final int index;","lastModifiedDate":"2022-04-21"},{"lineNumber":15,"author":{"gitId":"benaiahr"},"content":"    private final String input;","lastModifiedDate":"2022-04-21"},{"lineNumber":16,"author":{"gitId":"benaiahr"},"content":"    private final int amount;","lastModifiedDate":"2022-04-21"},{"lineNumber":17,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-21"},{"lineNumber":18,"author":{"gitId":"benaiahr"},"content":"    /**","lastModifiedDate":"2022-04-21"},{"lineNumber":19,"author":{"gitId":"benaiahr"},"content":"     * Constructor for normal snooze task","lastModifiedDate":"2022-04-21"},{"lineNumber":20,"author":{"gitId":"benaiahr"},"content":"     */","lastModifiedDate":"2022-04-21"},{"lineNumber":21,"author":{"gitId":"benaiahr"},"content":"    public SnoozeCommand(int index, String input, int amount) {","lastModifiedDate":"2022-04-21"},{"lineNumber":22,"author":{"gitId":"benaiahr"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-04-21"},{"lineNumber":23,"author":{"gitId":"benaiahr"},"content":"        this.input \u003d input.toUpperCase();","lastModifiedDate":"2022-04-21"},{"lineNumber":24,"author":{"gitId":"benaiahr"},"content":"        this.amount \u003d amount;","lastModifiedDate":"2022-04-21"},{"lineNumber":25,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-21"},{"lineNumber":26,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-21"},{"lineNumber":27,"author":{"gitId":"benaiahr"},"content":"    /**","lastModifiedDate":"2022-04-21"},{"lineNumber":28,"author":{"gitId":"benaiahr"},"content":"     * Checks if input has correct type of date/time","lastModifiedDate":"2022-04-21"},{"lineNumber":29,"author":{"gitId":"benaiahr"},"content":"     */","lastModifiedDate":"2022-04-21"},{"lineNumber":30,"author":{"gitId":"benaiahr"},"content":"    public boolean containsEnum(String input) {","lastModifiedDate":"2022-04-21"},{"lineNumber":31,"author":{"gitId":"benaiahr"},"content":"        for (EnumDateTime option : EnumDateTime.values()) {","lastModifiedDate":"2022-04-21"},{"lineNumber":32,"author":{"gitId":"benaiahr"},"content":"            if (option.name().equals(input)) {","lastModifiedDate":"2022-04-21"},{"lineNumber":33,"author":{"gitId":"benaiahr"},"content":"                return true;","lastModifiedDate":"2022-04-21"},{"lineNumber":34,"author":{"gitId":"benaiahr"},"content":"            }","lastModifiedDate":"2022-04-21"},{"lineNumber":35,"author":{"gitId":"benaiahr"},"content":"        }","lastModifiedDate":"2022-04-21"},{"lineNumber":36,"author":{"gitId":"benaiahr"},"content":"        return false;","lastModifiedDate":"2022-04-21"},{"lineNumber":37,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-21"},{"lineNumber":38,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-21"},{"lineNumber":39,"author":{"gitId":"benaiahr"},"content":"    @Override","lastModifiedDate":"2022-04-21"},{"lineNumber":40,"author":{"gitId":"benaiahr"},"content":"    public boolean execute() {","lastModifiedDate":"2022-04-21"},{"lineNumber":41,"author":{"gitId":"benaiahr"},"content":"        if (containsEnum(input)) {","lastModifiedDate":"2022-04-21"},{"lineNumber":42,"author":{"gitId":"benaiahr"},"content":"            return TaskManager.getInstance().snoozeTask(index, EnumDateTime.valueOf(input), amount);","lastModifiedDate":"2022-04-21"},{"lineNumber":43,"author":{"gitId":"benaiahr"},"content":"        }","lastModifiedDate":"2022-04-21"},{"lineNumber":44,"author":{"gitId":"benaiahr"},"content":"        new DukeUI().showToUser(InvalidTaskException.REPLY_INVALID_DATETIME_ENUM);","lastModifiedDate":"2022-04-21"},{"lineNumber":45,"author":{"gitId":"benaiahr"},"content":"        return false;","lastModifiedDate":"2022-04-21"},{"lineNumber":46,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-21"},{"lineNumber":47,"author":{"gitId":"benaiahr"},"content":"}","lastModifiedDate":"2022-04-21"}],"authorContributionMap":{"benaiahr":47}},{"path":"src/main/java/zhixuan/duke/common/EnumDateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benaiahr"},"content":"package zhixuan.duke.common;","lastModifiedDate":"2022-04-21"},{"lineNumber":2,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-21"},{"lineNumber":3,"author":{"gitId":"benaiahr"},"content":"public enum EnumDateTime {","lastModifiedDate":"2022-04-21"},{"lineNumber":4,"author":{"gitId":"benaiahr"},"content":"    YEAR,","lastModifiedDate":"2022-04-21"},{"lineNumber":5,"author":{"gitId":"benaiahr"},"content":"    MONTH,","lastModifiedDate":"2022-04-21"},{"lineNumber":6,"author":{"gitId":"benaiahr"},"content":"    DAY,","lastModifiedDate":"2022-04-21"},{"lineNumber":7,"author":{"gitId":"benaiahr"},"content":"    HOUR,","lastModifiedDate":"2022-04-21"},{"lineNumber":8,"author":{"gitId":"benaiahr"},"content":"    MINUTE","lastModifiedDate":"2022-04-21"},{"lineNumber":9,"author":{"gitId":"benaiahr"},"content":"}","lastModifiedDate":"2022-04-21"},{"lineNumber":10,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-21"}],"authorContributionMap":{"benaiahr":10}},{"path":"src/main/java/zhixuan/duke/common/EnumTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benaiahr"},"content":"package zhixuan.duke.common;","lastModifiedDate":"2022-04-17"},{"lineNumber":2,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":3,"author":{"gitId":"benaiahr"},"content":"public enum EnumTask {","lastModifiedDate":"2022-04-17"},{"lineNumber":4,"author":{"gitId":"benaiahr"},"content":"    TODO,","lastModifiedDate":"2022-04-17"},{"lineNumber":5,"author":{"gitId":"benaiahr"},"content":"    EVENT,","lastModifiedDate":"2022-04-17"},{"lineNumber":6,"author":{"gitId":"benaiahr"},"content":"    DEADLINE","lastModifiedDate":"2022-04-17"},{"lineNumber":7,"author":{"gitId":"benaiahr"},"content":"}","lastModifiedDate":"2022-04-17"},{"lineNumber":8,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"}],"authorContributionMap":{"benaiahr":8}},{"path":"src/main/java/zhixuan/duke/common/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package zhixuan.duke.common;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-04-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2022-04-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-04-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_GOODBYE \u003d \"Bye bye!\";","lastModifiedDate":"2022-03-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_WELCOME \u003d \"I\u0027m Duke\\n\" + \"What can I do for you?\";","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_WELCOME_LOADED \u003d \"I\u0027m Duke\\n \" + \"I have loaded your saved tasks.\\n \"","lastModifiedDate":"2022-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        + \"If you wish to load another file, please use the \u0027load\u0027 command!\\n\" + \"What can I do for you today?\";","lastModifiedDate":"2022-04-19"},{"lineNumber":17,"author":{"gitId":"benaiahr"},"content":"    public static final String REPLY_LIST \u003d \"Here are the tasks in your list: \\n\";","lastModifiedDate":"2022-04-17"},{"lineNumber":18,"author":{"gitId":"benaiahr"},"content":"    public static final String REPLY_ADD_TASK \u003d \"Roger. I will add this to your list: \\n\";","lastModifiedDate":"2022-04-17"},{"lineNumber":19,"author":{"gitId":"benaiahr"},"content":"    public static final String REPLY_MARK_TASK \u003d \"Nice! I\u0027ve marked this task as done: \";","lastModifiedDate":"2022-04-17"},{"lineNumber":20,"author":{"gitId":"benaiahr"},"content":"    public static final String REPLY_UNMARK_TASK \u003d \"OK, I\u0027ve marked this task as not done yet: \";","lastModifiedDate":"2022-04-17"},{"lineNumber":21,"author":{"gitId":"benaiahr"},"content":"    public static final String REPLY_ALR_MARK_TASK \u003d \"Task is already marked as done: \";","lastModifiedDate":"2022-04-17"},{"lineNumber":22,"author":{"gitId":"benaiahr"},"content":"    public static final String REPLY_ALR_UNMARK_TASK \u003d \"Task is already marked as not done: \";","lastModifiedDate":"2022-04-17"},{"lineNumber":23,"author":{"gitId":"benaiahr"},"content":"    public static final String REPLY_DELETE_TASK \u003d \"Deleted this task: \\n\";","lastModifiedDate":"2022-04-17"},{"lineNumber":24,"author":{"gitId":"benaiahr"},"content":"    public static final String REPLY_NO_TASK_FOUND \u003d \"No matching tasks found.\";","lastModifiedDate":"2022-04-21"},{"lineNumber":25,"author":{"gitId":"benaiahr"},"content":"    public static final String REPLY_TASK_FOUND \u003d \"Here are the matching tasks in your list: \\n\";","lastModifiedDate":"2022-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String REPLY_FILE_LOADED \u003d \"File is successfully loaded.\";","lastModifiedDate":"2022-04-19"},{"lineNumber":27,"author":{"gitId":"benaiahr"},"content":"    public static final String REPLY_DUEDATETIME_ADDED \u003d \"Added \";","lastModifiedDate":"2022-04-21"},{"lineNumber":28,"author":{"gitId":"benaiahr"},"content":"    public static final String REPLY_DUEDATETIME_TO \u003d \" to the date.\\n\" + \"The new date is: \";","lastModifiedDate":"2022-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-04-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Getter for welcome message upon start of application","lastModifiedDate":"2022-04-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param successMessage boolean to display success message after loading saved file","lastModifiedDate":"2022-04-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @return welcome message string","lastModifiedDate":"2022-04-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     **/","lastModifiedDate":"2022-04-18"},{"lineNumber":36,"author":{"gitId":"benaiahr"},"content":"    public static String getWelcomeMessage(boolean successMessage) {","lastModifiedDate":"2022-04-17"},{"lineNumber":37,"author":{"gitId":"benaiahr"},"content":"        if (successMessage) {","lastModifiedDate":"2022-04-17"},{"lineNumber":38,"author":{"gitId":"benaiahr"},"content":"            return MESSAGE_WELCOME_LOADED;","lastModifiedDate":"2022-04-17"},{"lineNumber":39,"author":{"gitId":"benaiahr"},"content":"        } else {","lastModifiedDate":"2022-04-17"},{"lineNumber":40,"author":{"gitId":"benaiahr"},"content":"            return MESSAGE_WELCOME;","lastModifiedDate":"2022-04-17"},{"lineNumber":41,"author":{"gitId":"benaiahr"},"content":"        }","lastModifiedDate":"2022-04-17"},{"lineNumber":42,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"-":25,"benaiahr":18}},{"path":"src/main/java/zhixuan/duke/data/exceptions/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package zhixuan.duke.data.exceptions;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"benaiahr"},"content":"public class InvalidTaskException extends Exception {","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"benaiahr"},"content":"    public static final String REPLY_TODO_EMPTY \u003d \"Todo cannot be empty.\";","lastModifiedDate":"2022-04-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    public static final String REPLY_EVENT_INVALID_DATE \u003d \"Use the correct command (event DESCRIPTION /at EVENT_DATE [yyyy-MM-dd hh:mm] - time optional).\";","lastModifiedDate":"2022-04-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public static final String REPLY_EVENT_INVALID_DESC \u003d \"Include description (event DESCRIPTION /at EVENT_DATE [yyyy-MM-dd hh:mm] - time optional).\";","lastModifiedDate":"2022-04-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String REPLY_EVENT_INVALID_LENGTH \u003d \"Include description and event date (event DESCRIPTION /at EVENT_DATE [yyyy-MM-dd hh:mm] - time optional).\";","lastModifiedDate":"2022-04-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String REPLY_DEADLINE_INVALID_DATE \u003d \"Use the correct command (deadline DESCRIPTION /by DEADLINE [yyyy-MM-dd hh:mm] - time optional).\";","lastModifiedDate":"2022-04-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String REPLY_DEADLINE_INVALID_DESC \u003d \"Include description (deadline DESCRIPTION /by DEADLINE [yyyy-MM-dd hh:mm] - time optional).\";","lastModifiedDate":"2022-04-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String REPLY_DEADLINE_INVALID_LENGTH \u003d \"Include deadline (deadline DESCRIPTION /by DEADLINE [yyyy-MM-dd hh:mm] - time optional).\";","lastModifiedDate":"2022-04-18"},{"lineNumber":12,"author":{"gitId":"benaiahr"},"content":"    public static final String REPLY_INVALID_DATE_FORMAT \u003d \"Please use yyyy-MM-dd hh:mm - time optional.\";","lastModifiedDate":"2022-04-21"},{"lineNumber":13,"author":{"gitId":"benaiahr"},"content":"    public static final String REPLY_INVALID_TASK \u003d \"Please choose a task with a due date (Event or Deadline tasks).\";","lastModifiedDate":"2022-04-21"},{"lineNumber":14,"author":{"gitId":"benaiahr"},"content":"    public static final String REPLY_INVALID_DATETIME_ENUM \u003d \"Please choose a valid date or time (year, month, day, hour or minute).\";","lastModifiedDate":"2022-04-21"},{"lineNumber":15,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":16,"author":{"gitId":"benaiahr"},"content":"    String error;","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"benaiahr"},"content":"    public InvalidTaskException(String errorMessage) {","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"benaiahr"},"content":"        super(errorMessage);","lastModifiedDate":"2022-03-21"},{"lineNumber":20,"author":{"gitId":"benaiahr"},"content":"        error \u003d errorMessage;","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":23,"author":{"gitId":"benaiahr"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":24,"author":{"gitId":"benaiahr"},"content":"    public String getMessage () {","lastModifiedDate":"2022-03-21"},{"lineNumber":25,"author":{"gitId":"benaiahr"},"content":"        return error;","lastModifiedDate":"2022-03-21"},{"lineNumber":26,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":27,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":28,"author":{"gitId":"benaiahr"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"-":7,"benaiahr":21}},{"path":"src/main/java/zhixuan/duke/data/exceptions/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package zhixuan.duke.data.exceptions;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":3,"author":{"gitId":"benaiahr"},"content":"public class UnknownCommandException extends Exception {","lastModifiedDate":"2022-03-21"},{"lineNumber":4,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":5,"author":{"gitId":"benaiahr"},"content":"    public static String ERROR \u003d \"You have entered an invalid command.\";","lastModifiedDate":"2022-04-17"},{"lineNumber":6,"author":{"gitId":"benaiahr"},"content":"    public static final String EMPTY \u003d \"Task list is empty.\";","lastModifiedDate":"2022-04-17"},{"lineNumber":7,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":8,"author":{"gitId":"benaiahr"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2022-03-21"},{"lineNumber":9,"author":{"gitId":"benaiahr"},"content":"        super();","lastModifiedDate":"2022-03-21"},{"lineNumber":10,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":11,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":12,"author":{"gitId":"benaiahr"},"content":"    public UnknownCommandException(String errorMessage) {","lastModifiedDate":"2022-03-21"},{"lineNumber":13,"author":{"gitId":"benaiahr"},"content":"        super(errorMessage);","lastModifiedDate":"2022-03-21"},{"lineNumber":14,"author":{"gitId":"benaiahr"},"content":"        ERROR \u003d errorMessage;","lastModifiedDate":"2022-04-17"},{"lineNumber":15,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":16,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":17,"author":{"gitId":"benaiahr"},"content":"    @Override","lastModifiedDate":"2022-03-21"},{"lineNumber":18,"author":{"gitId":"benaiahr"},"content":"    public String getMessage () {","lastModifiedDate":"2022-03-21"},{"lineNumber":19,"author":{"gitId":"benaiahr"},"content":"        return ERROR;","lastModifiedDate":"2022-04-17"},{"lineNumber":20,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":21,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":22,"author":{"gitId":"benaiahr"},"content":"}","lastModifiedDate":"2022-03-21"}],"authorContributionMap":{"-":1,"benaiahr":21}},{"path":"src/main/java/zhixuan/duke/data/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package zhixuan.duke.data.task;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"benaiahr"},"content":"import zhixuan.duke.common.EnumTask;","lastModifiedDate":"2022-04-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import zhixuan.duke.parser.DateParser;","lastModifiedDate":"2022-04-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-04-18"},{"lineNumber":6,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-04-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Deadline task","lastModifiedDate":"2022-04-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" **/","lastModifiedDate":"2022-04-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-04-18"},{"lineNumber":11,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    protected LocalDateTime dueDate;","lastModifiedDate":"2022-04-18"},{"lineNumber":13,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-04-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Deadline constructor","lastModifiedDate":"2022-04-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @param description Description of task","lastModifiedDate":"2022-04-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @param isDone Whether the task is done","lastModifiedDate":"2022-04-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param dueDate Due date of deadline","lastModifiedDate":"2022-04-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     **/","lastModifiedDate":"2022-04-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Deadline(String description, boolean isDone, String dueDate) {","lastModifiedDate":"2022-04-18"},{"lineNumber":22,"author":{"gitId":"benaiahr"},"content":"        super(description, isDone);","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"benaiahr"},"content":"        this.dueDate \u003d DateParser.parseStringToDateTime(dueDate);","lastModifiedDate":"2022-04-19"},{"lineNumber":24,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-04-18"},{"lineNumber":27,"author":{"gitId":"benaiahr"},"content":"     * Getter for due date","lastModifiedDate":"2022-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-18"},{"lineNumber":29,"author":{"gitId":"benaiahr"},"content":"     * @return due date in LocalDateTime","lastModifiedDate":"2022-04-19"},{"lineNumber":30,"author":{"gitId":"benaiahr"},"content":"     **/","lastModifiedDate":"2022-04-19"},{"lineNumber":31,"author":{"gitId":"benaiahr"},"content":"    public LocalDateTime getDueDate() {","lastModifiedDate":"2022-04-19"},{"lineNumber":32,"author":{"gitId":"benaiahr"},"content":"        return dueDate;","lastModifiedDate":"2022-04-21"},{"lineNumber":33,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-21"},{"lineNumber":34,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-21"},{"lineNumber":35,"author":{"gitId":"benaiahr"},"content":"    public void setDueDate(LocalDateTime newDueDate) {","lastModifiedDate":"2022-04-21"},{"lineNumber":36,"author":{"gitId":"benaiahr"},"content":"        dueDate \u003d newDueDate;","lastModifiedDate":"2022-04-21"},{"lineNumber":37,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-19"},{"lineNumber":38,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-19"},{"lineNumber":39,"author":{"gitId":"benaiahr"},"content":"    /**","lastModifiedDate":"2022-04-19"},{"lineNumber":40,"author":{"gitId":"benaiahr"},"content":"     * Override setter for toString method","lastModifiedDate":"2022-04-19"},{"lineNumber":41,"author":{"gitId":"benaiahr"},"content":"     * Calls parseDateToDisplayString to parse dueDate into a different format","lastModifiedDate":"2022-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-18"},{"lineNumber":43,"author":{"gitId":"benaiahr"},"content":"     * @return display format for Event","lastModifiedDate":"2022-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     **/","lastModifiedDate":"2022-04-18"},{"lineNumber":45,"author":{"gitId":"benaiahr"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":46,"author":{"gitId":"benaiahr"},"content":"    public String toString() {","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"benaiahr"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + DateParser.parseDateToDisplayString(dueDate) + \")\";","lastModifiedDate":"2022-04-19"},{"lineNumber":48,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":49,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-04-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Format for Deadline when saving to file","lastModifiedDate":"2022-04-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-18"},{"lineNumber":53,"author":{"gitId":"benaiahr"},"content":"     * Calls parseDateToString to parse dueDate into a different format","lastModifiedDate":"2022-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @return saved task format for Deadline","lastModifiedDate":"2022-04-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     **/","lastModifiedDate":"2022-04-18"},{"lineNumber":57,"author":{"gitId":"benaiahr"},"content":"    public String toFile() {","lastModifiedDate":"2022-03-27"},{"lineNumber":58,"author":{"gitId":"benaiahr"},"content":"        return EnumTask.DEADLINE + \" | \" + super.toFile() + \" | \" + DateParser.parseDateToSaveString(dueDate);","lastModifiedDate":"2022-04-19"},{"lineNumber":59,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":60,"author":{"gitId":"benaiahr"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"-":27,"benaiahr":33}},{"path":"src/main/java/zhixuan/duke/data/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package zhixuan.duke.data.task;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"benaiahr"},"content":"import zhixuan.duke.common.EnumTask;","lastModifiedDate":"2022-04-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import zhixuan.duke.parser.DateParser;","lastModifiedDate":"2022-04-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-04-18"},{"lineNumber":6,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-04-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Event task","lastModifiedDate":"2022-04-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" **/","lastModifiedDate":"2022-04-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Event extends Task {","lastModifiedDate":"2022-04-18"},{"lineNumber":11,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    protected LocalDateTime dueDate;","lastModifiedDate":"2022-04-18"},{"lineNumber":13,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-04-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Event constructor","lastModifiedDate":"2022-04-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @param description Description of task","lastModifiedDate":"2022-04-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @param isDone Whether the task is done","lastModifiedDate":"2022-04-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param dueDate Due date of event","lastModifiedDate":"2022-04-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     **/","lastModifiedDate":"2022-04-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Event(String description, boolean isDone, String dueDate) {","lastModifiedDate":"2022-04-18"},{"lineNumber":22,"author":{"gitId":"benaiahr"},"content":"        super(description, isDone);","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"benaiahr"},"content":"        this.dueDate \u003d DateParser.parseStringToDateTime(dueDate);","lastModifiedDate":"2022-04-19"},{"lineNumber":24,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-04-18"},{"lineNumber":27,"author":{"gitId":"benaiahr"},"content":"     * Getter for due date","lastModifiedDate":"2022-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-18"},{"lineNumber":29,"author":{"gitId":"benaiahr"},"content":"     * @return due date in LocalDateTime","lastModifiedDate":"2022-04-19"},{"lineNumber":30,"author":{"gitId":"benaiahr"},"content":"     **/","lastModifiedDate":"2022-04-19"},{"lineNumber":31,"author":{"gitId":"benaiahr"},"content":"    @Override","lastModifiedDate":"2022-04-19"},{"lineNumber":32,"author":{"gitId":"benaiahr"},"content":"    public LocalDateTime getDueDate() {","lastModifiedDate":"2022-04-19"},{"lineNumber":33,"author":{"gitId":"benaiahr"},"content":"        return dueDate;","lastModifiedDate":"2022-04-21"},{"lineNumber":34,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-21"},{"lineNumber":35,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-21"},{"lineNumber":36,"author":{"gitId":"benaiahr"},"content":"    public void setDueDate(LocalDateTime newDueDate) {","lastModifiedDate":"2022-04-21"},{"lineNumber":37,"author":{"gitId":"benaiahr"},"content":"        dueDate \u003d newDueDate;","lastModifiedDate":"2022-04-21"},{"lineNumber":38,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-19"},{"lineNumber":39,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-19"},{"lineNumber":40,"author":{"gitId":"benaiahr"},"content":"    /**","lastModifiedDate":"2022-04-19"},{"lineNumber":41,"author":{"gitId":"benaiahr"},"content":"     * Override setter for toString method","lastModifiedDate":"2022-04-19"},{"lineNumber":42,"author":{"gitId":"benaiahr"},"content":"     * Calls parseDateToDisplayString to parse dueDate into a different format","lastModifiedDate":"2022-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @return display format for Event","lastModifiedDate":"2022-04-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     **/","lastModifiedDate":"2022-04-18"},{"lineNumber":46,"author":{"gitId":"benaiahr"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":47,"author":{"gitId":"benaiahr"},"content":"    public String toString() {","lastModifiedDate":"2022-03-19"},{"lineNumber":48,"author":{"gitId":"benaiahr"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + DateParser.parseDateToDisplayString(dueDate) + \")\";","lastModifiedDate":"2022-04-19"},{"lineNumber":49,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":50,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-04-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Format for Event when saving to file","lastModifiedDate":"2022-04-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-18"},{"lineNumber":54,"author":{"gitId":"benaiahr"},"content":"     * Calls parseDateToString to parse dueDate into a different format","lastModifiedDate":"2022-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @return saved task format for Event","lastModifiedDate":"2022-04-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     **/","lastModifiedDate":"2022-04-18"},{"lineNumber":58,"author":{"gitId":"benaiahr"},"content":"    public String toFile() {","lastModifiedDate":"2022-03-27"},{"lineNumber":59,"author":{"gitId":"benaiahr"},"content":"        return EnumTask.EVENT + \" | \" + super.toFile() + \" | \" + DateParser.parseDateToSaveString(dueDate);","lastModifiedDate":"2022-04-19"},{"lineNumber":60,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":61,"author":{"gitId":"benaiahr"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"-":28,"benaiahr":33}},{"path":"src/main/java/zhixuan/duke/data/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package zhixuan.duke.data.task;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"benaiahr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-04-19"},{"lineNumber":4,"author":{"gitId":"benaiahr"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-04-21"},{"lineNumber":5,"author":{"gitId":"benaiahr"},"content":"import java.util.List;","lastModifiedDate":"2022-04-21"},{"lineNumber":6,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-04-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Generic Task class","lastModifiedDate":"2022-04-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" **/","lastModifiedDate":"2022-04-18"},{"lineNumber":10,"author":{"gitId":"benaiahr"},"content":"public class Task {","lastModifiedDate":"2022-02-15"},{"lineNumber":11,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":12,"author":{"gitId":"benaiahr"},"content":"    protected String description;","lastModifiedDate":"2022-02-15"},{"lineNumber":13,"author":{"gitId":"benaiahr"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-02-15"},{"lineNumber":14,"author":{"gitId":"benaiahr"},"content":"    protected LocalDateTime dueDate;","lastModifiedDate":"2022-04-19"},{"lineNumber":15,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-04-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Task constructor","lastModifiedDate":"2022-04-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param description Description of task","lastModifiedDate":"2022-04-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param isDone Whether the task is done","lastModifiedDate":"2022-04-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     **/","lastModifiedDate":"2022-04-18"},{"lineNumber":22,"author":{"gitId":"benaiahr"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2022-03-27"},{"lineNumber":23,"author":{"gitId":"benaiahr"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-03-27"},{"lineNumber":24,"author":{"gitId":"benaiahr"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-03-27"},{"lineNumber":25,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-04-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Task constructor","lastModifiedDate":"2022-04-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @return format string for done status","lastModifiedDate":"2022-04-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     **/","lastModifiedDate":"2022-04-18"},{"lineNumber":32,"author":{"gitId":"benaiahr"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-02-15"},{"lineNumber":33,"author":{"gitId":"benaiahr"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-02-15"},{"lineNumber":34,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":35,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":36,"author":{"gitId":"benaiahr"},"content":"    /**","lastModifiedDate":"2022-04-19"},{"lineNumber":37,"author":{"gitId":"benaiahr"},"content":"     * Getter for due date","lastModifiedDate":"2022-04-19"},{"lineNumber":38,"author":{"gitId":"benaiahr"},"content":"     *","lastModifiedDate":"2022-04-19"},{"lineNumber":39,"author":{"gitId":"benaiahr"},"content":"     * @return due date in LocalDateTime","lastModifiedDate":"2022-04-19"},{"lineNumber":40,"author":{"gitId":"benaiahr"},"content":"     **/","lastModifiedDate":"2022-04-19"},{"lineNumber":41,"author":{"gitId":"benaiahr"},"content":"    public LocalDateTime getDueDate() {","lastModifiedDate":"2022-04-19"},{"lineNumber":42,"author":{"gitId":"benaiahr"},"content":"        return dueDate;","lastModifiedDate":"2022-04-19"},{"lineNumber":43,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-19"},{"lineNumber":44,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-19"},{"lineNumber":45,"author":{"gitId":"benaiahr"},"content":"    /**","lastModifiedDate":"2022-04-21"},{"lineNumber":46,"author":{"gitId":"benaiahr"},"content":"     * Getter for description","lastModifiedDate":"2022-04-21"},{"lineNumber":47,"author":{"gitId":"benaiahr"},"content":"     *","lastModifiedDate":"2022-04-21"},{"lineNumber":48,"author":{"gitId":"benaiahr"},"content":"     * @return String description","lastModifiedDate":"2022-04-21"},{"lineNumber":49,"author":{"gitId":"benaiahr"},"content":"     **/","lastModifiedDate":"2022-04-21"},{"lineNumber":50,"author":{"gitId":"benaiahr"},"content":"    public String getDescription() {","lastModifiedDate":"2022-04-21"},{"lineNumber":51,"author":{"gitId":"benaiahr"},"content":"        return description;","lastModifiedDate":"2022-04-21"},{"lineNumber":52,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-21"},{"lineNumber":53,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-21"},{"lineNumber":54,"author":{"gitId":"benaiahr"},"content":"    public void setDueDate(LocalDateTime newDueDate) {","lastModifiedDate":"2022-04-21"},{"lineNumber":55,"author":{"gitId":"benaiahr"},"content":"        dueDate \u003d newDueDate;","lastModifiedDate":"2022-04-21"},{"lineNumber":56,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-21"},{"lineNumber":57,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-21"},{"lineNumber":58,"author":{"gitId":"benaiahr"},"content":"    /**","lastModifiedDate":"2022-04-21"},{"lineNumber":59,"author":{"gitId":"benaiahr"},"content":"     * Checker for keyword in description","lastModifiedDate":"2022-04-21"},{"lineNumber":60,"author":{"gitId":"benaiahr"},"content":"     *","lastModifiedDate":"2022-04-21"},{"lineNumber":61,"author":{"gitId":"benaiahr"},"content":"     * @return boolean true if keyword is in description, else false","lastModifiedDate":"2022-04-21"},{"lineNumber":62,"author":{"gitId":"benaiahr"},"content":"     **/","lastModifiedDate":"2022-04-21"},{"lineNumber":63,"author":{"gitId":"benaiahr"},"content":"    public boolean containsKeyword(String input) {","lastModifiedDate":"2022-04-21"},{"lineNumber":64,"author":{"gitId":"benaiahr"},"content":"        List\u003cString\u003e descriptionList \u003d Arrays.asList(getDescription().toLowerCase().split(\" \"));","lastModifiedDate":"2022-04-21"},{"lineNumber":65,"author":{"gitId":"benaiahr"},"content":"        return descriptionList.contains(input.toLowerCase());","lastModifiedDate":"2022-04-21"},{"lineNumber":66,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-21"},{"lineNumber":67,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-04-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Setter for isDone \u003d true","lastModifiedDate":"2022-04-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @return true if isDone is set to true, false if isDone is already true","lastModifiedDate":"2022-04-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     **/","lastModifiedDate":"2022-04-18"},{"lineNumber":73,"author":{"gitId":"benaiahr"},"content":"    public boolean markAsDone() {","lastModifiedDate":"2022-03-21"},{"lineNumber":74,"author":{"gitId":"benaiahr"},"content":"        if (!isDone) {","lastModifiedDate":"2022-03-27"},{"lineNumber":75,"author":{"gitId":"benaiahr"},"content":"            isDone \u003d true;","lastModifiedDate":"2022-03-21"},{"lineNumber":76,"author":{"gitId":"benaiahr"},"content":"            return true;","lastModifiedDate":"2022-03-21"},{"lineNumber":77,"author":{"gitId":"benaiahr"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":78,"author":{"gitId":"benaiahr"},"content":"        return false;","lastModifiedDate":"2022-03-21"},{"lineNumber":79,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":80,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-04-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Setter for isDone \u003d false","lastModifiedDate":"2022-04-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @return true if isDone is set to false, false if isDone is already false","lastModifiedDate":"2022-04-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     **/","lastModifiedDate":"2022-04-18"},{"lineNumber":86,"author":{"gitId":"benaiahr"},"content":"    public boolean markAsUndone() {","lastModifiedDate":"2022-03-21"},{"lineNumber":87,"author":{"gitId":"benaiahr"},"content":"        if (isDone) {","lastModifiedDate":"2022-03-27"},{"lineNumber":88,"author":{"gitId":"benaiahr"},"content":"            isDone \u003d false;","lastModifiedDate":"2022-03-21"},{"lineNumber":89,"author":{"gitId":"benaiahr"},"content":"            return true;","lastModifiedDate":"2022-03-21"},{"lineNumber":90,"author":{"gitId":"benaiahr"},"content":"        }","lastModifiedDate":"2022-03-21"},{"lineNumber":91,"author":{"gitId":"benaiahr"},"content":"        return false;","lastModifiedDate":"2022-03-21"},{"lineNumber":92,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-03-21"},{"lineNumber":93,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-03-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-04-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Override setter for toString method","lastModifiedDate":"2022-04-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Calls getStatusIcon to display isDone status as a \u0027X\u0027 icon","lastModifiedDate":"2022-04-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @return display format for Task","lastModifiedDate":"2022-04-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     **/","lastModifiedDate":"2022-04-18"},{"lineNumber":101,"author":{"gitId":"benaiahr"},"content":"    @Override","lastModifiedDate":"2022-02-15"},{"lineNumber":102,"author":{"gitId":"benaiahr"},"content":"    public String toString() {","lastModifiedDate":"2022-02-15"},{"lineNumber":103,"author":{"gitId":"benaiahr"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2022-02-15"},{"lineNumber":104,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":105,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-04-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Format for task when saving to file","lastModifiedDate":"2022-04-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @return saved task format for Task","lastModifiedDate":"2022-04-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     **/","lastModifiedDate":"2022-04-18"},{"lineNumber":111,"author":{"gitId":"benaiahr"},"content":"    public String toFile() {","lastModifiedDate":"2022-03-27"},{"lineNumber":112,"author":{"gitId":"benaiahr"},"content":"        return isDone + \" | \" + description;","lastModifiedDate":"2022-03-27"},{"lineNumber":113,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":114,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":115,"author":{"gitId":"benaiahr"},"content":"}","lastModifiedDate":"2022-02-15"}],"authorContributionMap":{"-":38,"benaiahr":77}},{"path":"src/main/java/zhixuan/duke/data/task/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benaiahr"},"content":"package zhixuan.duke.data.task;","lastModifiedDate":"2022-04-17"},{"lineNumber":2,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":3,"author":{"gitId":"benaiahr"},"content":"import zhixuan.duke.common.EnumDateTime;","lastModifiedDate":"2022-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import zhixuan.duke.data.exceptions.InvalidFileException;","lastModifiedDate":"2022-04-19"},{"lineNumber":5,"author":{"gitId":"benaiahr"},"content":"import zhixuan.duke.parser.DateParser;","lastModifiedDate":"2022-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import zhixuan.duke.storage.StorageFile;","lastModifiedDate":"2022-04-19"},{"lineNumber":7,"author":{"gitId":"benaiahr"},"content":"import zhixuan.duke.storage.TaskEncoder;","lastModifiedDate":"2022-04-17"},{"lineNumber":8,"author":{"gitId":"benaiahr"},"content":"import zhixuan.duke.ui.DukeUI;","lastModifiedDate":"2022-04-17"},{"lineNumber":9,"author":{"gitId":"benaiahr"},"content":"import zhixuan.duke.common.EnumTask;","lastModifiedDate":"2022-04-17"},{"lineNumber":10,"author":{"gitId":"benaiahr"},"content":"import zhixuan.duke.data.exceptions.InvalidTaskException;","lastModifiedDate":"2022-04-17"},{"lineNumber":11,"author":{"gitId":"benaiahr"},"content":"import zhixuan.duke.data.exceptions.UnknownCommandException;","lastModifiedDate":"2022-04-17"},{"lineNumber":12,"author":{"gitId":"benaiahr"},"content":"import zhixuan.duke.common.Messages;","lastModifiedDate":"2022-04-17"},{"lineNumber":13,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":14,"author":{"gitId":"benaiahr"},"content":"import java.text.ParseException;","lastModifiedDate":"2022-04-21"},{"lineNumber":15,"author":{"gitId":"benaiahr"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2022-04-21"},{"lineNumber":16,"author":{"gitId":"benaiahr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-04-18"},{"lineNumber":18,"author":{"gitId":"benaiahr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-04-17"},{"lineNumber":19,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-04-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Task manager to make changes to taskList","lastModifiedDate":"2022-04-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2022-04-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" **/","lastModifiedDate":"2022-04-18"},{"lineNumber":24,"author":{"gitId":"benaiahr"},"content":"public class TaskManager {","lastModifiedDate":"2022-04-17"},{"lineNumber":25,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":26,"author":{"gitId":"benaiahr"},"content":"    private static TaskManager taskManager;","lastModifiedDate":"2022-04-17"},{"lineNumber":27,"author":{"gitId":"benaiahr"},"content":"    private final DukeUI ui;","lastModifiedDate":"2022-04-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-04-19"},{"lineNumber":29,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-04-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * TaskManager constructor","lastModifiedDate":"2022-04-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructor to hold singleton design.","lastModifiedDate":"2022-04-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Create new DukeUI and ArrayList instance","lastModifiedDate":"2022-04-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-04-18"},{"lineNumber":36,"author":{"gitId":"benaiahr"},"content":"    private TaskManager () {","lastModifiedDate":"2022-04-17"},{"lineNumber":37,"author":{"gitId":"benaiahr"},"content":"        ui \u003d new DukeUI();","lastModifiedDate":"2022-04-17"},{"lineNumber":38,"author":{"gitId":"benaiahr"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-04-17"},{"lineNumber":39,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-17"},{"lineNumber":40,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-04-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Getter for current instance","lastModifiedDate":"2022-04-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Else, instantiate new instance","lastModifiedDate":"2022-04-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     **/","lastModifiedDate":"2022-04-18"},{"lineNumber":45,"author":{"gitId":"benaiahr"},"content":"    public static synchronized TaskManager getInstance( ) {","lastModifiedDate":"2022-04-17"},{"lineNumber":46,"author":{"gitId":"benaiahr"},"content":"        if (taskManager \u003d\u003d null)","lastModifiedDate":"2022-04-17"},{"lineNumber":47,"author":{"gitId":"benaiahr"},"content":"            taskManager \u003d new TaskManager();","lastModifiedDate":"2022-04-17"},{"lineNumber":48,"author":{"gitId":"benaiahr"},"content":"        return taskManager;","lastModifiedDate":"2022-04-17"},{"lineNumber":49,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-17"},{"lineNumber":50,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-04-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * List all tasks in taskList","lastModifiedDate":"2022-04-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @throws UnknownCommandException if taskList is empty","lastModifiedDate":"2022-04-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     **/","lastModifiedDate":"2022-04-18"},{"lineNumber":56,"author":{"gitId":"benaiahr"},"content":"    public void listTask() {","lastModifiedDate":"2022-04-17"},{"lineNumber":57,"author":{"gitId":"benaiahr"},"content":"        try {","lastModifiedDate":"2022-04-17"},{"lineNumber":58,"author":{"gitId":"benaiahr"},"content":"            String list;","lastModifiedDate":"2022-04-17"},{"lineNumber":59,"author":{"gitId":"benaiahr"},"content":"            if (taskList.isEmpty()) {","lastModifiedDate":"2022-04-19"},{"lineNumber":60,"author":{"gitId":"benaiahr"},"content":"                throw new UnknownCommandException(UnknownCommandException.EMPTY);","lastModifiedDate":"2022-04-19"},{"lineNumber":61,"author":{"gitId":"benaiahr"},"content":"            }","lastModifiedDate":"2022-04-19"},{"lineNumber":62,"author":{"gitId":"benaiahr"},"content":"            list \u003d Messages.REPLY_LIST;","lastModifiedDate":"2022-04-17"},{"lineNumber":63,"author":{"gitId":"benaiahr"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2022-04-17"},{"lineNumber":64,"author":{"gitId":"benaiahr"},"content":"                if (i !\u003d 0) {","lastModifiedDate":"2022-04-17"},{"lineNumber":65,"author":{"gitId":"benaiahr"},"content":"                    list \u003d list.concat(\"\\n\");","lastModifiedDate":"2022-04-17"},{"lineNumber":66,"author":{"gitId":"benaiahr"},"content":"                }","lastModifiedDate":"2022-04-17"},{"lineNumber":67,"author":{"gitId":"benaiahr"},"content":"                list \u003d list.concat(String.valueOf(i + 1)).concat(\".\");","lastModifiedDate":"2022-04-17"},{"lineNumber":68,"author":{"gitId":"benaiahr"},"content":"                list \u003d list.concat(String.valueOf(taskList.get(i)));","lastModifiedDate":"2022-04-17"},{"lineNumber":69,"author":{"gitId":"benaiahr"},"content":"            }","lastModifiedDate":"2022-04-17"},{"lineNumber":70,"author":{"gitId":"benaiahr"},"content":"            ui.showToUser(list);","lastModifiedDate":"2022-04-17"},{"lineNumber":71,"author":{"gitId":"benaiahr"},"content":"        } catch (UnknownCommandException e) {","lastModifiedDate":"2022-04-17"},{"lineNumber":72,"author":{"gitId":"benaiahr"},"content":"            ui.showToUser(e.getMessage());","lastModifiedDate":"2022-04-17"},{"lineNumber":73,"author":{"gitId":"benaiahr"},"content":"        }","lastModifiedDate":"2022-04-17"},{"lineNumber":74,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-17"},{"lineNumber":75,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-04-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Getter for amount of tasks in taskList","lastModifiedDate":"2022-04-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @return task amount in string","lastModifiedDate":"2022-04-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     **/","lastModifiedDate":"2022-04-18"},{"lineNumber":81,"author":{"gitId":"benaiahr"},"content":"    public String getTaskAmount() {","lastModifiedDate":"2022-04-17"},{"lineNumber":82,"author":{"gitId":"benaiahr"},"content":"        return \"You have \" + taskList.size() + \" tasks in your list.\";","lastModifiedDate":"2022-04-17"},{"lineNumber":83,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-17"},{"lineNumber":84,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-04-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Add task to taskList","lastModifiedDate":"2022-04-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Categorize based on input","lastModifiedDate":"2022-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @param isSilent used during loading of file, true if adding of task is to be silent (no success message)","lastModifiedDate":"2022-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @param type type of task (todo, event, deadline)","lastModifiedDate":"2022-04-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @param isDone whether task is done","lastModifiedDate":"2022-04-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * @param input user input","lastModifiedDate":"2022-04-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @return true if task is added, else false","lastModifiedDate":"2022-04-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @throws InvalidTaskException if input is empty, contains invalid data or in invalid format","lastModifiedDate":"2022-04-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if input not on command list","lastModifiedDate":"2022-04-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws DateTimeParseException if input of event/deadline not in valid datetime form","lastModifiedDate":"2022-04-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @throws ArrayIndexOutOfBoundsException if loaded file has invalid data","lastModifiedDate":"2022-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     **/","lastModifiedDate":"2022-04-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public boolean addToTaskList(boolean isSilent, EnumTask type, boolean isDone, String input) {","lastModifiedDate":"2022-04-18"},{"lineNumber":102,"author":{"gitId":"benaiahr"},"content":"        try {","lastModifiedDate":"2022-04-17"},{"lineNumber":103,"author":{"gitId":"benaiahr"},"content":"            String[] commandList;","lastModifiedDate":"2022-04-17"},{"lineNumber":104,"author":{"gitId":"benaiahr"},"content":"            switch (type) {","lastModifiedDate":"2022-04-17"},{"lineNumber":105,"author":{"gitId":"benaiahr"},"content":"                case TODO:","lastModifiedDate":"2022-04-17"},{"lineNumber":106,"author":{"gitId":"benaiahr"},"content":"                    if (input.isEmpty()) throw new InvalidTaskException(InvalidTaskException.REPLY_TODO_EMPTY);","lastModifiedDate":"2022-04-17"},{"lineNumber":107,"author":{"gitId":"benaiahr"},"content":"                    taskList.add(new Todo(input, isDone));","lastModifiedDate":"2022-04-17"},{"lineNumber":108,"author":{"gitId":"benaiahr"},"content":"                    break;","lastModifiedDate":"2022-04-17"},{"lineNumber":109,"author":{"gitId":"benaiahr"},"content":"                case DEADLINE:","lastModifiedDate":"2022-04-17"},{"lineNumber":110,"author":{"gitId":"benaiahr"},"content":"                    if (!input.contains(\" /by \")) throw new InvalidTaskException(InvalidTaskException.REPLY_DEADLINE_INVALID_DATE);","lastModifiedDate":"2022-04-17"},{"lineNumber":111,"author":{"gitId":"benaiahr"},"content":"                    commandList \u003d input.split(\" /by \");","lastModifiedDate":"2022-04-17"},{"lineNumber":112,"author":{"gitId":"benaiahr"},"content":"                    if (commandList[0].isEmpty()) throw new InvalidTaskException(InvalidTaskException.REPLY_DEADLINE_INVALID_DESC);","lastModifiedDate":"2022-04-17"},{"lineNumber":113,"author":{"gitId":"benaiahr"},"content":"                    if (commandList.length !\u003d 2) throw new InvalidTaskException(InvalidTaskException.REPLY_DEADLINE_INVALID_LENGTH);","lastModifiedDate":"2022-04-17"},{"lineNumber":114,"author":{"gitId":"benaiahr"},"content":"                    taskList.add(new Deadline(commandList[0].trim(), isDone, commandList[1].trim()));","lastModifiedDate":"2022-04-17"},{"lineNumber":115,"author":{"gitId":"benaiahr"},"content":"                    break;","lastModifiedDate":"2022-04-17"},{"lineNumber":116,"author":{"gitId":"benaiahr"},"content":"                case EVENT:","lastModifiedDate":"2022-04-17"},{"lineNumber":117,"author":{"gitId":"benaiahr"},"content":"                    if (!input.contains(\" /at \")) throw new InvalidTaskException(InvalidTaskException.REPLY_EVENT_INVALID_DATE);","lastModifiedDate":"2022-04-17"},{"lineNumber":118,"author":{"gitId":"benaiahr"},"content":"                    commandList \u003d input.split(\" /at \");","lastModifiedDate":"2022-04-17"},{"lineNumber":119,"author":{"gitId":"benaiahr"},"content":"                    if (commandList[0].isEmpty()) throw new InvalidTaskException(InvalidTaskException.REPLY_EVENT_INVALID_DESC);","lastModifiedDate":"2022-04-17"},{"lineNumber":120,"author":{"gitId":"benaiahr"},"content":"                    if (commandList.length !\u003d 2) throw new InvalidTaskException(InvalidTaskException.REPLY_EVENT_INVALID_LENGTH);","lastModifiedDate":"2022-04-17"},{"lineNumber":121,"author":{"gitId":"benaiahr"},"content":"                    taskList.add(new Event(commandList[0].trim(), isDone, commandList[1].trim()));","lastModifiedDate":"2022-04-17"},{"lineNumber":122,"author":{"gitId":"benaiahr"},"content":"                    break;","lastModifiedDate":"2022-04-17"},{"lineNumber":123,"author":{"gitId":"benaiahr"},"content":"                default:","lastModifiedDate":"2022-04-17"},{"lineNumber":124,"author":{"gitId":"benaiahr"},"content":"                    String errorMessage \u003d \"Invalid task type.\";","lastModifiedDate":"2022-04-21"},{"lineNumber":125,"author":{"gitId":"benaiahr"},"content":"                    assert false : errorMessage;","lastModifiedDate":"2022-04-21"},{"lineNumber":126,"author":{"gitId":"benaiahr"},"content":"                    throw new AssertionError(errorMessage);","lastModifiedDate":"2022-04-21"},{"lineNumber":127,"author":{"gitId":"benaiahr"},"content":"            }","lastModifiedDate":"2022-04-17"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            if (!isSilent) {","lastModifiedDate":"2022-04-18"},{"lineNumber":129,"author":{"gitId":"benaiahr"},"content":"                ui.showToUser(Messages.REPLY_ADD_TASK + taskList.get(taskList.size()-1) + \"\\n\" + getTaskAmount());","lastModifiedDate":"2022-04-17"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-04-18"},{"lineNumber":131,"author":{"gitId":"benaiahr"},"content":"            return true;","lastModifiedDate":"2022-04-17"},{"lineNumber":132,"author":{"gitId":"benaiahr"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2022-04-17"},{"lineNumber":133,"author":{"gitId":"benaiahr"},"content":"            ui.showToUser(e.getMessage());","lastModifiedDate":"2022-04-17"},{"lineNumber":134,"author":{"gitId":"benaiahr"},"content":"            return false;","lastModifiedDate":"2022-04-17"},{"lineNumber":135,"author":{"gitId":"benaiahr"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2022-04-17"},{"lineNumber":136,"author":{"gitId":"benaiahr"},"content":"            ui.showToUser(UnknownCommandException.ERROR);","lastModifiedDate":"2022-04-17"},{"lineNumber":137,"author":{"gitId":"benaiahr"},"content":"            return false;","lastModifiedDate":"2022-04-17"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-04-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            ui.showToUser(InvalidTaskException.REPLY_INVALID_DATE_FORMAT);","lastModifiedDate":"2022-04-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2022-04-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2022-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            ui.showToUser(InvalidFileException.FILE_ERROR);","lastModifiedDate":"2022-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2022-04-19"},{"lineNumber":144,"author":{"gitId":"benaiahr"},"content":"        }","lastModifiedDate":"2022-04-17"},{"lineNumber":145,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-17"},{"lineNumber":146,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-04-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Mark task of specified index","lastModifiedDate":"2022-04-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * @param command whether \u0027mark\u0027 or \u0027unmark\u0027","lastModifiedDate":"2022-04-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * @param taskIndex index of task in taskList","lastModifiedDate":"2022-04-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * @return boolean true if task is marked/unmarked, else false","lastModifiedDate":"2022-04-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * @throws UnknownCommandException if task index is invalid or in invalid form","lastModifiedDate":"2022-04-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     **/","lastModifiedDate":"2022-04-18"},{"lineNumber":157,"author":{"gitId":"benaiahr"},"content":"    public boolean markTask(String command, int taskIndex) {","lastModifiedDate":"2022-04-17"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        boolean isSuccessful \u003d false;","lastModifiedDate":"2022-04-19"},{"lineNumber":159,"author":{"gitId":"benaiahr"},"content":"        try {","lastModifiedDate":"2022-04-17"},{"lineNumber":160,"author":{"gitId":"benaiahr"},"content":"            if (taskList.isEmpty()) {","lastModifiedDate":"2022-04-17"},{"lineNumber":161,"author":{"gitId":"benaiahr"},"content":"                throw new UnknownCommandException(UnknownCommandException.EMPTY);","lastModifiedDate":"2022-04-17"},{"lineNumber":162,"author":{"gitId":"benaiahr"},"content":"            }","lastModifiedDate":"2022-04-17"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            if (taskIndex \u003d\u003d 0 || taskIndex\u003c0 || taskList.size()\u003ctaskIndex) {","lastModifiedDate":"2022-04-18"},{"lineNumber":164,"author":{"gitId":"benaiahr"},"content":"                throw new UnknownCommandException();","lastModifiedDate":"2022-04-17"},{"lineNumber":165,"author":{"gitId":"benaiahr"},"content":"            }","lastModifiedDate":"2022-04-17"},{"lineNumber":166,"author":{"gitId":"benaiahr"},"content":"            taskIndex--;","lastModifiedDate":"2022-04-17"},{"lineNumber":167,"author":{"gitId":"benaiahr"},"content":"            String reply \u003d \"\";","lastModifiedDate":"2022-04-17"},{"lineNumber":168,"author":{"gitId":"benaiahr"},"content":"            if (command.equals(\"mark\")) {","lastModifiedDate":"2022-04-17"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                isSuccessful \u003d taskList.get(taskIndex).markAsDone();","lastModifiedDate":"2022-04-19"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                if (isSuccessful) {","lastModifiedDate":"2022-04-19"},{"lineNumber":171,"author":{"gitId":"benaiahr"},"content":"                    reply \u003d Messages.REPLY_MARK_TASK;","lastModifiedDate":"2022-04-17"},{"lineNumber":172,"author":{"gitId":"benaiahr"},"content":"                } else {","lastModifiedDate":"2022-04-17"},{"lineNumber":173,"author":{"gitId":"benaiahr"},"content":"                    reply \u003d Messages.REPLY_ALR_MARK_TASK;","lastModifiedDate":"2022-04-17"},{"lineNumber":174,"author":{"gitId":"benaiahr"},"content":"                }","lastModifiedDate":"2022-04-17"},{"lineNumber":175,"author":{"gitId":"benaiahr"},"content":"            }","lastModifiedDate":"2022-04-17"},{"lineNumber":176,"author":{"gitId":"benaiahr"},"content":"            else if (command.equals(\"unmark\")) {","lastModifiedDate":"2022-04-17"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                isSuccessful \u003d taskList.get(taskIndex).markAsUndone();","lastModifiedDate":"2022-04-19"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                if (isSuccessful) {","lastModifiedDate":"2022-04-19"},{"lineNumber":179,"author":{"gitId":"benaiahr"},"content":"                    reply \u003d Messages.REPLY_UNMARK_TASK;","lastModifiedDate":"2022-04-17"},{"lineNumber":180,"author":{"gitId":"benaiahr"},"content":"                } else {","lastModifiedDate":"2022-04-17"},{"lineNumber":181,"author":{"gitId":"benaiahr"},"content":"                    reply \u003d Messages.REPLY_ALR_UNMARK_TASK;","lastModifiedDate":"2022-04-17"},{"lineNumber":182,"author":{"gitId":"benaiahr"},"content":"                }","lastModifiedDate":"2022-04-17"},{"lineNumber":183,"author":{"gitId":"benaiahr"},"content":"            }","lastModifiedDate":"2022-04-17"},{"lineNumber":184,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":185,"author":{"gitId":"benaiahr"},"content":"            reply \u003d reply.concat(\"\\n\").concat(taskList.get(taskIndex).toString());","lastModifiedDate":"2022-04-19"},{"lineNumber":186,"author":{"gitId":"benaiahr"},"content":"            ui.showToUser(reply);","lastModifiedDate":"2022-04-17"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            return isSuccessful;","lastModifiedDate":"2022-04-19"},{"lineNumber":188,"author":{"gitId":"benaiahr"},"content":"        } catch (UnknownCommandException e) {","lastModifiedDate":"2022-04-17"},{"lineNumber":189,"author":{"gitId":"benaiahr"},"content":"            ui.showToUser(e.getMessage());","lastModifiedDate":"2022-04-17"},{"lineNumber":190,"author":{"gitId":"benaiahr"},"content":"            return false;","lastModifiedDate":"2022-04-17"},{"lineNumber":191,"author":{"gitId":"benaiahr"},"content":"        }","lastModifiedDate":"2022-04-17"},{"lineNumber":192,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-17"},{"lineNumber":193,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-04-18"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * Delete task of specified task index","lastModifiedDate":"2022-04-18"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-18"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     * @param taskIndex index of task to be deleted","lastModifiedDate":"2022-04-18"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-18"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * @return boolean true if task is deleted, else false","lastModifiedDate":"2022-04-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-18"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     * @throws UnknownCommandException if task index is invalid or in invalid form","lastModifiedDate":"2022-04-18"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     **/","lastModifiedDate":"2022-04-18"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public boolean deleteTask(int taskIndex) {","lastModifiedDate":"2022-04-18"},{"lineNumber":204,"author":{"gitId":"benaiahr"},"content":"        try {","lastModifiedDate":"2022-04-17"},{"lineNumber":205,"author":{"gitId":"benaiahr"},"content":"            if (taskList.isEmpty()) {","lastModifiedDate":"2022-04-17"},{"lineNumber":206,"author":{"gitId":"benaiahr"},"content":"                throw new UnknownCommandException(UnknownCommandException.EMPTY);","lastModifiedDate":"2022-04-17"},{"lineNumber":207,"author":{"gitId":"benaiahr"},"content":"            }","lastModifiedDate":"2022-04-17"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            if (taskIndex \u003d\u003d 0 || taskIndex \u003c 0 || taskList.size()\u003ctaskIndex) {","lastModifiedDate":"2022-04-18"},{"lineNumber":209,"author":{"gitId":"benaiahr"},"content":"                throw new UnknownCommandException();","lastModifiedDate":"2022-04-17"},{"lineNumber":210,"author":{"gitId":"benaiahr"},"content":"            }","lastModifiedDate":"2022-04-17"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            taskIndex--;","lastModifiedDate":"2022-04-18"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            String reply \u003d Messages.REPLY_DELETE_TASK + taskList.get(taskIndex).toString() + \"\\n\";","lastModifiedDate":"2022-04-19"},{"lineNumber":213,"author":{"gitId":"benaiahr"},"content":"            taskList.remove(taskIndex);","lastModifiedDate":"2022-04-17"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            reply +\u003d getTaskAmount();","lastModifiedDate":"2022-04-19"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            ui.showToUser(reply);","lastModifiedDate":"2022-04-19"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2022-04-18"},{"lineNumber":217,"author":{"gitId":"benaiahr"},"content":"        } catch (UnknownCommandException e) {","lastModifiedDate":"2022-04-17"},{"lineNumber":218,"author":{"gitId":"benaiahr"},"content":"            ui.showToUser(e.getMessage());","lastModifiedDate":"2022-04-17"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2022-04-18"},{"lineNumber":220,"author":{"gitId":"benaiahr"},"content":"        }","lastModifiedDate":"2022-04-17"},{"lineNumber":221,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-17"},{"lineNumber":222,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":223,"author":{"gitId":"benaiahr"},"content":"    /**","lastModifiedDate":"2022-04-21"},{"lineNumber":224,"author":{"gitId":"benaiahr"},"content":"     * Checks if input is in valid date format (yyyy-MM-dd)","lastModifiedDate":"2022-04-21"},{"lineNumber":225,"author":{"gitId":"benaiahr"},"content":"     *","lastModifiedDate":"2022-04-21"},{"lineNumber":226,"author":{"gitId":"benaiahr"},"content":"     * @param input String to be checked","lastModifiedDate":"2022-04-21"},{"lineNumber":227,"author":{"gitId":"benaiahr"},"content":"     *","lastModifiedDate":"2022-04-21"},{"lineNumber":228,"author":{"gitId":"benaiahr"},"content":"     * @throws ParseException if input is not in date format","lastModifiedDate":"2022-04-21"},{"lineNumber":229,"author":{"gitId":"benaiahr"},"content":"     **/","lastModifiedDate":"2022-04-21"},{"lineNumber":230,"author":{"gitId":"benaiahr"},"content":"    public boolean isDateFormat(String input) {","lastModifiedDate":"2022-04-21"},{"lineNumber":231,"author":{"gitId":"benaiahr"},"content":"        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"yyyy-MM-dd\");","lastModifiedDate":"2022-04-21"},{"lineNumber":232,"author":{"gitId":"benaiahr"},"content":"        dateFormat.setLenient(false);","lastModifiedDate":"2022-04-21"},{"lineNumber":233,"author":{"gitId":"benaiahr"},"content":"        try {","lastModifiedDate":"2022-04-21"},{"lineNumber":234,"author":{"gitId":"benaiahr"},"content":"            dateFormat.parse(input.trim());","lastModifiedDate":"2022-04-21"},{"lineNumber":235,"author":{"gitId":"benaiahr"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-04-21"},{"lineNumber":236,"author":{"gitId":"benaiahr"},"content":"            return false;","lastModifiedDate":"2022-04-21"},{"lineNumber":237,"author":{"gitId":"benaiahr"},"content":"        }","lastModifiedDate":"2022-04-21"},{"lineNumber":238,"author":{"gitId":"benaiahr"},"content":"        return true;","lastModifiedDate":"2022-04-21"},{"lineNumber":239,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-21"},{"lineNumber":240,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-21"},{"lineNumber":241,"author":{"gitId":"benaiahr"},"content":"    /**","lastModifiedDate":"2022-04-19"},{"lineNumber":242,"author":{"gitId":"benaiahr"},"content":"     * Find task of specified date","lastModifiedDate":"2022-04-19"},{"lineNumber":243,"author":{"gitId":"benaiahr"},"content":"     *","lastModifiedDate":"2022-04-19"},{"lineNumber":244,"author":{"gitId":"benaiahr"},"content":"     * @param dateTime date to be searched","lastModifiedDate":"2022-04-19"},{"lineNumber":245,"author":{"gitId":"benaiahr"},"content":"     *","lastModifiedDate":"2022-04-19"},{"lineNumber":246,"author":{"gitId":"benaiahr"},"content":"     * @throws UnknownCommandException if list is empty or has invalid characters","lastModifiedDate":"2022-04-19"},{"lineNumber":247,"author":{"gitId":"benaiahr"},"content":"     * @throws DateTimeParseException if date is not in correct format","lastModifiedDate":"2022-04-19"},{"lineNumber":248,"author":{"gitId":"benaiahr"},"content":"     **/","lastModifiedDate":"2022-04-19"},{"lineNumber":249,"author":{"gitId":"benaiahr"},"content":"    public void findTaskWithDate(String dateTime) {","lastModifiedDate":"2022-04-21"},{"lineNumber":250,"author":{"gitId":"benaiahr"},"content":"        try {","lastModifiedDate":"2022-04-19"},{"lineNumber":251,"author":{"gitId":"benaiahr"},"content":"            String list \u003d \"\";","lastModifiedDate":"2022-04-19"},{"lineNumber":252,"author":{"gitId":"benaiahr"},"content":"            LocalDateTime parsedDateTime \u003d DateParser.parseStringToDateTime(dateTime);","lastModifiedDate":"2022-04-19"},{"lineNumber":253,"author":{"gitId":"benaiahr"},"content":"            if (taskList.isEmpty()) {","lastModifiedDate":"2022-04-19"},{"lineNumber":254,"author":{"gitId":"benaiahr"},"content":"                throw new UnknownCommandException(UnknownCommandException.EMPTY);","lastModifiedDate":"2022-04-19"},{"lineNumber":255,"author":{"gitId":"benaiahr"},"content":"            }","lastModifiedDate":"2022-04-19"},{"lineNumber":256,"author":{"gitId":"benaiahr"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2022-04-19"},{"lineNumber":257,"author":{"gitId":"benaiahr"},"content":"                if (!(task instanceof Todo) \u0026\u0026 DateParser.compareDateTime(parsedDateTime, task.getDueDate())) {","lastModifiedDate":"2022-04-19"},{"lineNumber":258,"author":{"gitId":"benaiahr"},"content":"                    list \u003d list.concat(task.toString());","lastModifiedDate":"2022-04-19"},{"lineNumber":259,"author":{"gitId":"benaiahr"},"content":"                }","lastModifiedDate":"2022-04-19"},{"lineNumber":260,"author":{"gitId":"benaiahr"},"content":"            }","lastModifiedDate":"2022-04-19"},{"lineNumber":261,"author":{"gitId":"benaiahr"},"content":"            if (list.isEmpty()) {","lastModifiedDate":"2022-04-19"},{"lineNumber":262,"author":{"gitId":"benaiahr"},"content":"                ui.showToUser(Messages.REPLY_NO_TASK_FOUND);","lastModifiedDate":"2022-04-19"},{"lineNumber":263,"author":{"gitId":"benaiahr"},"content":"            } else {","lastModifiedDate":"2022-04-19"},{"lineNumber":264,"author":{"gitId":"benaiahr"},"content":"                ui.showToUser(Messages.REPLY_TASK_FOUND + list);","lastModifiedDate":"2022-04-19"},{"lineNumber":265,"author":{"gitId":"benaiahr"},"content":"            }","lastModifiedDate":"2022-04-19"},{"lineNumber":266,"author":{"gitId":"benaiahr"},"content":"        } catch (UnknownCommandException e) {","lastModifiedDate":"2022-04-19"},{"lineNumber":267,"author":{"gitId":"benaiahr"},"content":"            ui.showToUser(e.getMessage());","lastModifiedDate":"2022-04-19"},{"lineNumber":268,"author":{"gitId":"benaiahr"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-04-19"},{"lineNumber":269,"author":{"gitId":"benaiahr"},"content":"            ui.showToUser(InvalidTaskException.REPLY_INVALID_DATE_FORMAT);","lastModifiedDate":"2022-04-19"},{"lineNumber":270,"author":{"gitId":"benaiahr"},"content":"        }","lastModifiedDate":"2022-04-19"},{"lineNumber":271,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-19"},{"lineNumber":272,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-19"},{"lineNumber":273,"author":{"gitId":"benaiahr"},"content":"    /**","lastModifiedDate":"2022-04-21"},{"lineNumber":274,"author":{"gitId":"benaiahr"},"content":"     * Find task with specified keyword","lastModifiedDate":"2022-04-21"},{"lineNumber":275,"author":{"gitId":"benaiahr"},"content":"     * Calls isDateFormat and findTaskWithDate if input is date","lastModifiedDate":"2022-04-21"},{"lineNumber":276,"author":{"gitId":"benaiahr"},"content":"     *","lastModifiedDate":"2022-04-21"},{"lineNumber":277,"author":{"gitId":"benaiahr"},"content":"     * @param input String to be checked","lastModifiedDate":"2022-04-21"},{"lineNumber":278,"author":{"gitId":"benaiahr"},"content":"     **/","lastModifiedDate":"2022-04-21"},{"lineNumber":279,"author":{"gitId":"benaiahr"},"content":"    public void findTask (String input) {","lastModifiedDate":"2022-04-21"},{"lineNumber":280,"author":{"gitId":"benaiahr"},"content":"        if (isDateFormat(input)) {","lastModifiedDate":"2022-04-21"},{"lineNumber":281,"author":{"gitId":"benaiahr"},"content":"            findTaskWithDate(input);","lastModifiedDate":"2022-04-21"},{"lineNumber":282,"author":{"gitId":"benaiahr"},"content":"        } else {","lastModifiedDate":"2022-04-21"},{"lineNumber":283,"author":{"gitId":"benaiahr"},"content":"            try {","lastModifiedDate":"2022-04-21"},{"lineNumber":284,"author":{"gitId":"benaiahr"},"content":"                String list \u003d \"\";","lastModifiedDate":"2022-04-21"},{"lineNumber":285,"author":{"gitId":"benaiahr"},"content":"                if (taskList.isEmpty()) {","lastModifiedDate":"2022-04-21"},{"lineNumber":286,"author":{"gitId":"benaiahr"},"content":"                    throw new UnknownCommandException(UnknownCommandException.EMPTY);","lastModifiedDate":"2022-04-21"},{"lineNumber":287,"author":{"gitId":"benaiahr"},"content":"                }","lastModifiedDate":"2022-04-21"},{"lineNumber":288,"author":{"gitId":"benaiahr"},"content":"                for (Task task : taskList) {","lastModifiedDate":"2022-04-21"},{"lineNumber":289,"author":{"gitId":"benaiahr"},"content":"                    if (task.containsKeyword(input)) {","lastModifiedDate":"2022-04-21"},{"lineNumber":290,"author":{"gitId":"benaiahr"},"content":"                        list \u003d list.concat(task.toString());","lastModifiedDate":"2022-04-21"},{"lineNumber":291,"author":{"gitId":"benaiahr"},"content":"                    }","lastModifiedDate":"2022-04-21"},{"lineNumber":292,"author":{"gitId":"benaiahr"},"content":"                }","lastModifiedDate":"2022-04-21"},{"lineNumber":293,"author":{"gitId":"benaiahr"},"content":"                if (list.isEmpty()) {","lastModifiedDate":"2022-04-21"},{"lineNumber":294,"author":{"gitId":"benaiahr"},"content":"                    ui.showToUser(Messages.REPLY_NO_TASK_FOUND);","lastModifiedDate":"2022-04-21"},{"lineNumber":295,"author":{"gitId":"benaiahr"},"content":"                } else {","lastModifiedDate":"2022-04-21"},{"lineNumber":296,"author":{"gitId":"benaiahr"},"content":"                    ui.showToUser(Messages.REPLY_TASK_FOUND + list);","lastModifiedDate":"2022-04-21"},{"lineNumber":297,"author":{"gitId":"benaiahr"},"content":"                }","lastModifiedDate":"2022-04-21"},{"lineNumber":298,"author":{"gitId":"benaiahr"},"content":"            } catch (UnknownCommandException e) {","lastModifiedDate":"2022-04-21"},{"lineNumber":299,"author":{"gitId":"benaiahr"},"content":"                ui.showToUser(e.getMessage());","lastModifiedDate":"2022-04-21"},{"lineNumber":300,"author":{"gitId":"benaiahr"},"content":"            }","lastModifiedDate":"2022-04-21"},{"lineNumber":301,"author":{"gitId":"benaiahr"},"content":"        }","lastModifiedDate":"2022-04-21"},{"lineNumber":302,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-21"},{"lineNumber":303,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-21"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-04-19"},{"lineNumber":305,"author":{"gitId":"-"},"content":"     * Load new file chosen by user","lastModifiedDate":"2022-04-19"},{"lineNumber":306,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-19"},{"lineNumber":307,"author":{"gitId":"-"},"content":"     * Clears taskList first","lastModifiedDate":"2022-04-19"},{"lineNumber":308,"author":{"gitId":"-"},"content":"     * Calls StorageFile commands","lastModifiedDate":"2022-04-19"},{"lineNumber":309,"author":{"gitId":"-"},"content":"     **/","lastModifiedDate":"2022-04-19"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    public void loadNewFile() {","lastModifiedDate":"2022-04-19"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        taskList.clear();","lastModifiedDate":"2022-04-19"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        if (!StorageFile.loadUserFile()) {","lastModifiedDate":"2022-04-19"},{"lineNumber":313,"author":{"gitId":"-"},"content":"            ui.showToUser(InvalidFileException.FILE_ERROR);","lastModifiedDate":"2022-04-19"},{"lineNumber":314,"author":{"gitId":"-"},"content":"            StorageFile.loadFile(StorageFile.getDefaultLocation());","lastModifiedDate":"2022-04-19"},{"lineNumber":315,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2022-04-19"},{"lineNumber":316,"author":{"gitId":"-"},"content":"            ui.showToUser(Messages.REPLY_FILE_LOADED);","lastModifiedDate":"2022-04-19"},{"lineNumber":317,"author":{"gitId":"-"},"content":"            listTask();","lastModifiedDate":"2022-04-19"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-04-19"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-04-19"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-19"},{"lineNumber":321,"author":{"gitId":"benaiahr"},"content":"    /**","lastModifiedDate":"2022-04-21"},{"lineNumber":322,"author":{"gitId":"benaiahr"},"content":"     * Snooze (add) due date of given task","lastModifiedDate":"2022-04-21"},{"lineNumber":323,"author":{"gitId":"benaiahr"},"content":"     *","lastModifiedDate":"2022-04-21"},{"lineNumber":324,"author":{"gitId":"benaiahr"},"content":"     * @param taskIndex index of task to be snoozed","lastModifiedDate":"2022-04-21"},{"lineNumber":325,"author":{"gitId":"benaiahr"},"content":"     * @param DateTime type of date/time","lastModifiedDate":"2022-04-21"},{"lineNumber":326,"author":{"gitId":"benaiahr"},"content":"     * @param amount amount of time to be added","lastModifiedDate":"2022-04-21"},{"lineNumber":327,"author":{"gitId":"benaiahr"},"content":"     *","lastModifiedDate":"2022-04-21"},{"lineNumber":328,"author":{"gitId":"benaiahr"},"content":"     * @throws UnknownCommandException if empty or has invalid index","lastModifiedDate":"2022-04-21"},{"lineNumber":329,"author":{"gitId":"benaiahr"},"content":"     * @throws InvalidTaskException if given task is a Todo task","lastModifiedDate":"2022-04-21"},{"lineNumber":330,"author":{"gitId":"benaiahr"},"content":"     **/","lastModifiedDate":"2022-04-21"},{"lineNumber":331,"author":{"gitId":"benaiahr"},"content":"    public boolean snoozeTask(int taskIndex, EnumDateTime DateTime, int amount) {","lastModifiedDate":"2022-04-21"},{"lineNumber":332,"author":{"gitId":"benaiahr"},"content":"        try {","lastModifiedDate":"2022-04-21"},{"lineNumber":333,"author":{"gitId":"benaiahr"},"content":"            String reply \u003d \"\";","lastModifiedDate":"2022-04-21"},{"lineNumber":334,"author":{"gitId":"benaiahr"},"content":"            LocalDateTime dueDate;","lastModifiedDate":"2022-04-21"},{"lineNumber":335,"author":{"gitId":"benaiahr"},"content":"            if (taskList.isEmpty()) {","lastModifiedDate":"2022-04-21"},{"lineNumber":336,"author":{"gitId":"benaiahr"},"content":"                throw new UnknownCommandException(UnknownCommandException.EMPTY);","lastModifiedDate":"2022-04-21"},{"lineNumber":337,"author":{"gitId":"benaiahr"},"content":"            }","lastModifiedDate":"2022-04-21"},{"lineNumber":338,"author":{"gitId":"benaiahr"},"content":"            if (taskIndex \u003d\u003d 0 || taskIndex \u003c 0 || taskList.size()\u003ctaskIndex) {","lastModifiedDate":"2022-04-21"},{"lineNumber":339,"author":{"gitId":"benaiahr"},"content":"                throw new UnknownCommandException();","lastModifiedDate":"2022-04-21"},{"lineNumber":340,"author":{"gitId":"benaiahr"},"content":"            }","lastModifiedDate":"2022-04-21"},{"lineNumber":341,"author":{"gitId":"benaiahr"},"content":"            taskIndex--;","lastModifiedDate":"2022-04-21"},{"lineNumber":342,"author":{"gitId":"benaiahr"},"content":"            if ((taskList.get(taskIndex) instanceof Todo)) {","lastModifiedDate":"2022-04-21"},{"lineNumber":343,"author":{"gitId":"benaiahr"},"content":"                throw new InvalidTaskException(InvalidTaskException.REPLY_INVALID_TASK);","lastModifiedDate":"2022-04-21"},{"lineNumber":344,"author":{"gitId":"benaiahr"},"content":"            }","lastModifiedDate":"2022-04-21"},{"lineNumber":345,"author":{"gitId":"benaiahr"},"content":"            Task selectedTask \u003d taskList.get(taskIndex);","lastModifiedDate":"2022-04-21"},{"lineNumber":346,"author":{"gitId":"benaiahr"},"content":"            dueDate \u003d selectedTask.getDueDate();","lastModifiedDate":"2022-04-21"},{"lineNumber":347,"author":{"gitId":"benaiahr"},"content":"            switch (DateTime) {","lastModifiedDate":"2022-04-21"},{"lineNumber":348,"author":{"gitId":"benaiahr"},"content":"                case YEAR:","lastModifiedDate":"2022-04-21"},{"lineNumber":349,"author":{"gitId":"benaiahr"},"content":"                    selectedTask.setDueDate(dueDate.plusYears(amount));","lastModifiedDate":"2022-04-21"},{"lineNumber":350,"author":{"gitId":"benaiahr"},"content":"                    break;","lastModifiedDate":"2022-04-21"},{"lineNumber":351,"author":{"gitId":"benaiahr"},"content":"                case MONTH:","lastModifiedDate":"2022-04-21"},{"lineNumber":352,"author":{"gitId":"benaiahr"},"content":"                    selectedTask.setDueDate(dueDate.plusMonths(amount));","lastModifiedDate":"2022-04-21"},{"lineNumber":353,"author":{"gitId":"benaiahr"},"content":"                    break;","lastModifiedDate":"2022-04-21"},{"lineNumber":354,"author":{"gitId":"benaiahr"},"content":"                case DAY:","lastModifiedDate":"2022-04-21"},{"lineNumber":355,"author":{"gitId":"benaiahr"},"content":"                    selectedTask.setDueDate(dueDate.plusDays(amount));","lastModifiedDate":"2022-04-21"},{"lineNumber":356,"author":{"gitId":"benaiahr"},"content":"                    break;","lastModifiedDate":"2022-04-21"},{"lineNumber":357,"author":{"gitId":"benaiahr"},"content":"                case HOUR:","lastModifiedDate":"2022-04-21"},{"lineNumber":358,"author":{"gitId":"benaiahr"},"content":"                    selectedTask.setDueDate(dueDate.plusHours(amount));","lastModifiedDate":"2022-04-21"},{"lineNumber":359,"author":{"gitId":"benaiahr"},"content":"                    break;","lastModifiedDate":"2022-04-21"},{"lineNumber":360,"author":{"gitId":"benaiahr"},"content":"                case MINUTE:","lastModifiedDate":"2022-04-21"},{"lineNumber":361,"author":{"gitId":"benaiahr"},"content":"                    selectedTask.setDueDate(dueDate.plusMinutes(amount));","lastModifiedDate":"2022-04-21"},{"lineNumber":362,"author":{"gitId":"benaiahr"},"content":"                    break;","lastModifiedDate":"2022-04-21"},{"lineNumber":363,"author":{"gitId":"benaiahr"},"content":"            }","lastModifiedDate":"2022-04-21"},{"lineNumber":364,"author":{"gitId":"benaiahr"},"content":"            reply \u003d reply.concat(Messages.REPLY_DUEDATETIME_ADDED + amount + \" \" + DateTime + Messages.REPLY_DUEDATETIME_TO);","lastModifiedDate":"2022-04-21"},{"lineNumber":365,"author":{"gitId":"benaiahr"},"content":"            ui.showToUser(reply + selectedTask);","lastModifiedDate":"2022-04-21"},{"lineNumber":366,"author":{"gitId":"benaiahr"},"content":"            return true;","lastModifiedDate":"2022-04-21"},{"lineNumber":367,"author":{"gitId":"benaiahr"},"content":"        } catch (UnknownCommandException e) {","lastModifiedDate":"2022-04-21"},{"lineNumber":368,"author":{"gitId":"benaiahr"},"content":"            ui.showToUser(e.getMessage());","lastModifiedDate":"2022-04-21"},{"lineNumber":369,"author":{"gitId":"benaiahr"},"content":"            return false;","lastModifiedDate":"2022-04-21"},{"lineNumber":370,"author":{"gitId":"benaiahr"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2022-04-21"},{"lineNumber":371,"author":{"gitId":"benaiahr"},"content":"            ui.showToUser(e.getMessage());","lastModifiedDate":"2022-04-21"},{"lineNumber":372,"author":{"gitId":"benaiahr"},"content":"            return false;","lastModifiedDate":"2022-04-21"},{"lineNumber":373,"author":{"gitId":"benaiahr"},"content":"        }","lastModifiedDate":"2022-04-21"},{"lineNumber":374,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-21"},{"lineNumber":375,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-21"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-04-18"},{"lineNumber":377,"author":{"gitId":"-"},"content":"     * Calls TaskEncoder.encodeTaskList to encode tasks","lastModifiedDate":"2022-04-18"},{"lineNumber":378,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-18"},{"lineNumber":379,"author":{"gitId":"-"},"content":"     * @return string ArrayList with encoded tasks","lastModifiedDate":"2022-04-18"},{"lineNumber":380,"author":{"gitId":"-"},"content":"     **/","lastModifiedDate":"2022-04-18"},{"lineNumber":381,"author":{"gitId":"benaiahr"},"content":"    public ArrayList\u003cString\u003e getAllTask() {","lastModifiedDate":"2022-04-17"},{"lineNumber":382,"author":{"gitId":"benaiahr"},"content":"        return TaskEncoder.encodeTaskList(taskList);","lastModifiedDate":"2022-04-17"},{"lineNumber":383,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-17"},{"lineNumber":384,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":385,"author":{"gitId":"benaiahr"},"content":"}","lastModifiedDate":"2022-04-17"},{"lineNumber":386,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"}],"authorContributionMap":{"benaiahr":277,"-":109}},{"path":"src/main/java/zhixuan/duke/data/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package zhixuan.duke.data.task;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"benaiahr"},"content":"import zhixuan.duke.common.EnumTask;","lastModifiedDate":"2022-04-19"},{"lineNumber":4,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-04-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Todo task","lastModifiedDate":"2022-04-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":" **/","lastModifiedDate":"2022-04-18"},{"lineNumber":8,"author":{"gitId":"benaiahr"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-03-19"},{"lineNumber":9,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-04-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"     * Todo constructor","lastModifiedDate":"2022-04-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @param description Description of task","lastModifiedDate":"2022-04-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param isDone Whether the task is done","lastModifiedDate":"2022-04-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     **/","lastModifiedDate":"2022-04-18"},{"lineNumber":16,"author":{"gitId":"benaiahr"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2022-03-27"},{"lineNumber":17,"author":{"gitId":"benaiahr"},"content":"        super(description, isDone);","lastModifiedDate":"2022-03-27"},{"lineNumber":18,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":19,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-04-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Override setter for toString method","lastModifiedDate":"2022-04-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @return display format for Todo","lastModifiedDate":"2022-04-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     **/","lastModifiedDate":"2022-04-18"},{"lineNumber":25,"author":{"gitId":"benaiahr"},"content":"    @Override","lastModifiedDate":"2022-03-19"},{"lineNumber":26,"author":{"gitId":"benaiahr"},"content":"    public String toString() {","lastModifiedDate":"2022-03-19"},{"lineNumber":27,"author":{"gitId":"benaiahr"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-03-19"},{"lineNumber":28,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-03-19"},{"lineNumber":29,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-03-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-04-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Format for todo when saving to file","lastModifiedDate":"2022-04-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @return saved task format for Todo","lastModifiedDate":"2022-04-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     **/","lastModifiedDate":"2022-04-18"},{"lineNumber":35,"author":{"gitId":"benaiahr"},"content":"    public String toFile() {","lastModifiedDate":"2022-03-27"},{"lineNumber":36,"author":{"gitId":"benaiahr"},"content":"        return EnumTask.TODO + \" | \" + super.toFile();","lastModifiedDate":"2022-04-19"},{"lineNumber":37,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-03-27"},{"lineNumber":38,"author":{"gitId":"benaiahr"},"content":"}","lastModifiedDate":"2022-03-19"}],"authorContributionMap":{"-":21,"benaiahr":17}},{"path":"src/main/java/zhixuan/duke/parser/DateParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package zhixuan.duke.parser;","lastModifiedDate":"2022-04-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-04-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-04-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2022-04-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.temporal.ChronoField;","lastModifiedDate":"2022-04-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-04-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Parser for date format","lastModifiedDate":"2022-04-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2022-04-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":" **/","lastModifiedDate":"2022-04-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DateParser {","lastModifiedDate":"2022-04-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-04-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parse string to LocalDateTime","lastModifiedDate":"2022-04-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Parse date and/or time provided","lastModifiedDate":"2022-04-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @param date string date and/or time","lastModifiedDate":"2022-04-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return converted LocalDateTime in yyyy-MM-dd HH:mm","lastModifiedDate":"2022-04-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     **/","lastModifiedDate":"2022-04-18"},{"lineNumber":22,"author":{"gitId":"benaiahr"},"content":"    public static LocalDateTime parseStringToDateTime(String date) {","lastModifiedDate":"2022-04-19"},{"lineNumber":23,"author":{"gitId":"benaiahr"},"content":"        DateTimeFormatter dateFormat \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2022-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                .appendPattern(\"yyyy-MM-dd\")","lastModifiedDate":"2022-04-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                .optionalStart()","lastModifiedDate":"2022-04-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                .appendPattern(\" HH:mm\")","lastModifiedDate":"2022-04-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                .optionalEnd()","lastModifiedDate":"2022-04-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                .parseDefaulting(ChronoField.HOUR_OF_DAY, 0)","lastModifiedDate":"2022-04-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 0)","lastModifiedDate":"2022-04-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                .toFormatter();","lastModifiedDate":"2022-04-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-18"},{"lineNumber":32,"author":{"gitId":"benaiahr"},"content":"        return LocalDateTime.parse(date, dateFormat);","lastModifiedDate":"2022-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-04-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-18"},{"lineNumber":35,"author":{"gitId":"benaiahr"},"content":"    /**","lastModifiedDate":"2022-04-19"},{"lineNumber":36,"author":{"gitId":"benaiahr"},"content":"     * Compare LocalDateTime dates","lastModifiedDate":"2022-04-19"},{"lineNumber":37,"author":{"gitId":"benaiahr"},"content":"     * Reasoning: LocalDateTime does not have any date comparators","lastModifiedDate":"2022-04-19"},{"lineNumber":38,"author":{"gitId":"benaiahr"},"content":"     *","lastModifiedDate":"2022-04-19"},{"lineNumber":39,"author":{"gitId":"benaiahr"},"content":"     * @param firstDate first date to compare","lastModifiedDate":"2022-04-19"},{"lineNumber":40,"author":{"gitId":"benaiahr"},"content":"     * @param secondDate second date to compare","lastModifiedDate":"2022-04-19"},{"lineNumber":41,"author":{"gitId":"benaiahr"},"content":"     *","lastModifiedDate":"2022-04-19"},{"lineNumber":42,"author":{"gitId":"benaiahr"},"content":"     * @return true if same dates, else false","lastModifiedDate":"2022-04-19"},{"lineNumber":43,"author":{"gitId":"benaiahr"},"content":"     **/","lastModifiedDate":"2022-04-19"},{"lineNumber":44,"author":{"gitId":"benaiahr"},"content":"    public static boolean compareDateTime(LocalDateTime firstDate, LocalDateTime secondDate) {","lastModifiedDate":"2022-04-19"},{"lineNumber":45,"author":{"gitId":"benaiahr"},"content":"        if (firstDate.getYear() !\u003d secondDate.getYear()) {","lastModifiedDate":"2022-04-19"},{"lineNumber":46,"author":{"gitId":"benaiahr"},"content":"            return false;","lastModifiedDate":"2022-04-19"},{"lineNumber":47,"author":{"gitId":"benaiahr"},"content":"        }","lastModifiedDate":"2022-04-19"},{"lineNumber":48,"author":{"gitId":"benaiahr"},"content":"        return firstDate.getDayOfYear() \u003d\u003d secondDate.getDayOfYear();","lastModifiedDate":"2022-04-19"},{"lineNumber":49,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-19"},{"lineNumber":50,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-19"},{"lineNumber":51,"author":{"gitId":"benaiahr"},"content":"    /**","lastModifiedDate":"2022-04-19"},{"lineNumber":52,"author":{"gitId":"benaiahr"},"content":"     * Parse LocalDateTime to string to be displayed","lastModifiedDate":"2022-04-19"},{"lineNumber":53,"author":{"gitId":"benaiahr"},"content":"     *","lastModifiedDate":"2022-04-19"},{"lineNumber":54,"author":{"gitId":"benaiahr"},"content":"     * When saving LocalDateTime as toString, Java automatically adds character \u0027T\u0027","lastModifiedDate":"2022-04-19"},{"lineNumber":55,"author":{"gitId":"benaiahr"},"content":"     * between date and time. .replace to replace the \u0027T\u0027","lastModifiedDate":"2022-04-19"},{"lineNumber":56,"author":{"gitId":"benaiahr"},"content":"     *","lastModifiedDate":"2022-04-19"},{"lineNumber":57,"author":{"gitId":"benaiahr"},"content":"     * @param dateTime LocalDateTime to be parsed","lastModifiedDate":"2022-04-19"},{"lineNumber":58,"author":{"gitId":"benaiahr"},"content":"     *","lastModifiedDate":"2022-04-19"},{"lineNumber":59,"author":{"gitId":"benaiahr"},"content":"     * @return display format for Event","lastModifiedDate":"2022-04-19"},{"lineNumber":60,"author":{"gitId":"benaiahr"},"content":"     **/","lastModifiedDate":"2022-04-19"},{"lineNumber":61,"author":{"gitId":"benaiahr"},"content":"    public static String parseDateToDisplayString(LocalDateTime dateTime) {","lastModifiedDate":"2022-04-19"},{"lineNumber":62,"author":{"gitId":"benaiahr"},"content":"        DateTimeFormatter displayFormat \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\");","lastModifiedDate":"2022-04-19"},{"lineNumber":63,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-19"},{"lineNumber":64,"author":{"gitId":"benaiahr"},"content":"        return dateTime.format(displayFormat).replace(\"T\", \" \");","lastModifiedDate":"2022-04-19"},{"lineNumber":65,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-19"},{"lineNumber":66,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-19"},{"lineNumber":67,"author":{"gitId":"benaiahr"},"content":"    /**","lastModifiedDate":"2022-04-19"},{"lineNumber":68,"author":{"gitId":"benaiahr"},"content":"     * Parse LocalDateTime to string to be saved to file","lastModifiedDate":"2022-04-19"},{"lineNumber":69,"author":{"gitId":"benaiahr"},"content":"     *","lastModifiedDate":"2022-04-19"},{"lineNumber":70,"author":{"gitId":"benaiahr"},"content":"     * When saving LocalDateTime as toString, Java automatically adds character \u0027T\u0027","lastModifiedDate":"2022-04-19"},{"lineNumber":71,"author":{"gitId":"benaiahr"},"content":"     * between date and time. .replace to replace the \u0027T\u0027","lastModifiedDate":"2022-04-19"},{"lineNumber":72,"author":{"gitId":"benaiahr"},"content":"     *","lastModifiedDate":"2022-04-19"},{"lineNumber":73,"author":{"gitId":"benaiahr"},"content":"     * @param dateTime LocalDateTime to be parsed","lastModifiedDate":"2022-04-19"},{"lineNumber":74,"author":{"gitId":"benaiahr"},"content":"     *","lastModifiedDate":"2022-04-19"},{"lineNumber":75,"author":{"gitId":"benaiahr"},"content":"     * @return display format for Event","lastModifiedDate":"2022-04-19"},{"lineNumber":76,"author":{"gitId":"benaiahr"},"content":"     **/","lastModifiedDate":"2022-04-19"},{"lineNumber":77,"author":{"gitId":"benaiahr"},"content":"    public static String parseDateToSaveString(LocalDateTime dateTime) {","lastModifiedDate":"2022-04-19"},{"lineNumber":78,"author":{"gitId":"benaiahr"},"content":"        return dateTime.toString().replace(\"T\", \" \");","lastModifiedDate":"2022-04-19"},{"lineNumber":79,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-04-18"}],"authorContributionMap":{"-":33,"benaiahr":48}},{"path":"src/main/java/zhixuan/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benaiahr"},"content":"package zhixuan.duke.parser;","lastModifiedDate":"2022-04-11"},{"lineNumber":2,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":3,"author":{"gitId":"benaiahr"},"content":"import zhixuan.duke.commands.*;","lastModifiedDate":"2022-04-17"},{"lineNumber":4,"author":{"gitId":"benaiahr"},"content":"import zhixuan.duke.ui.DukeUI;","lastModifiedDate":"2022-04-11"},{"lineNumber":5,"author":{"gitId":"benaiahr"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-04-11"},{"lineNumber":6,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-04-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Parser for user input","lastModifiedDate":"2022-04-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2022-04-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" **/","lastModifiedDate":"2022-04-18"},{"lineNumber":11,"author":{"gitId":"benaiahr"},"content":"public class Parser {","lastModifiedDate":"2022-04-11"},{"lineNumber":12,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":13,"author":{"gitId":"benaiahr"},"content":"    private Scanner in ;","lastModifiedDate":"2022-04-17"},{"lineNumber":14,"author":{"gitId":"benaiahr"},"content":"    DukeUI ui;","lastModifiedDate":"2022-04-17"},{"lineNumber":15,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":16,"author":{"gitId":"benaiahr"},"content":"    private Parser () {","lastModifiedDate":"2022-04-17"},{"lineNumber":17,"author":{"gitId":"benaiahr"},"content":"        ui \u003d new DukeUI();","lastModifiedDate":"2022-04-17"},{"lineNumber":18,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-17"},{"lineNumber":19,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":20,"author":{"gitId":"benaiahr"},"content":"    public Parser(Scanner in) {","lastModifiedDate":"2022-04-17"},{"lineNumber":21,"author":{"gitId":"benaiahr"},"content":"        this();","lastModifiedDate":"2022-04-17"},{"lineNumber":22,"author":{"gitId":"benaiahr"},"content":"        this.in \u003d in;","lastModifiedDate":"2022-04-17"},{"lineNumber":23,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-17"},{"lineNumber":24,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-04-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Processes user input","lastModifiedDate":"2022-04-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Calls ExitCommand if \u0027bye\u0027 is in user input","lastModifiedDate":"2022-04-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Else, calls determineAction for input","lastModifiedDate":"2022-04-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @return Command class based on input, InvalidCommand if no matches","lastModifiedDate":"2022-04-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     **/","lastModifiedDate":"2022-04-18"},{"lineNumber":32,"author":{"gitId":"benaiahr"},"content":"    public Command processInput() {","lastModifiedDate":"2022-04-17"},{"lineNumber":33,"author":{"gitId":"benaiahr"},"content":"        String input \u003d in.nextLine();","lastModifiedDate":"2022-04-17"},{"lineNumber":34,"author":{"gitId":"benaiahr"},"content":"        if (ExitCommand.BYE_COMMAND.equals(input)) {","lastModifiedDate":"2022-04-17"},{"lineNumber":35,"author":{"gitId":"benaiahr"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-04-17"},{"lineNumber":36,"author":{"gitId":"benaiahr"},"content":"        } else {","lastModifiedDate":"2022-04-17"},{"lineNumber":37,"author":{"gitId":"benaiahr"},"content":"            try {","lastModifiedDate":"2022-04-17"},{"lineNumber":38,"author":{"gitId":"benaiahr"},"content":"                return determineAction(input);","lastModifiedDate":"2022-04-17"},{"lineNumber":39,"author":{"gitId":"benaiahr"},"content":"            } catch (UnsupportedOperationException e) {","lastModifiedDate":"2022-04-17"},{"lineNumber":40,"author":{"gitId":"benaiahr"},"content":"                return new InvalidCommand(\"empty\");","lastModifiedDate":"2022-04-17"},{"lineNumber":41,"author":{"gitId":"benaiahr"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-04-17"},{"lineNumber":42,"author":{"gitId":"benaiahr"},"content":"                return new InvalidCommand(\"invalid_index\");","lastModifiedDate":"2022-04-17"},{"lineNumber":43,"author":{"gitId":"benaiahr"},"content":"            }","lastModifiedDate":"2022-04-17"},{"lineNumber":44,"author":{"gitId":"benaiahr"},"content":"        }","lastModifiedDate":"2022-04-11"},{"lineNumber":45,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":46,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-04-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Calls command based on input","lastModifiedDate":"2022-04-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @param command string user input","lastModifiedDate":"2022-04-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @return called Command class","lastModifiedDate":"2022-04-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     **/","lastModifiedDate":"2022-04-18"},{"lineNumber":53,"author":{"gitId":"benaiahr"},"content":"    private Command determineAction(String command) throws UnsupportedOperationException, IndexOutOfBoundsException {","lastModifiedDate":"2022-04-17"},{"lineNumber":54,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":55,"author":{"gitId":"benaiahr"},"content":"        if (ListCommand.LIST_COMMAND.equals(command)) {","lastModifiedDate":"2022-04-19"},{"lineNumber":56,"author":{"gitId":"benaiahr"},"content":"            return new ListCommand();","lastModifiedDate":"2022-04-17"},{"lineNumber":57,"author":{"gitId":"benaiahr"},"content":"        }","lastModifiedDate":"2022-04-17"},{"lineNumber":58,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (LoadCommand.LOAD_COMMAND.equals(command)) {","lastModifiedDate":"2022-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new LoadCommand();","lastModifiedDate":"2022-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-19"},{"lineNumber":63,"author":{"gitId":"benaiahr"},"content":"        String[] commandList \u003d command.split(\" \");","lastModifiedDate":"2022-04-17"},{"lineNumber":64,"author":{"gitId":"benaiahr"},"content":"        if (commandList.length \u003c 2) {","lastModifiedDate":"2022-04-17"},{"lineNumber":65,"author":{"gitId":"benaiahr"},"content":"            throw new UnsupportedOperationException();","lastModifiedDate":"2022-04-17"},{"lineNumber":66,"author":{"gitId":"benaiahr"},"content":"        }","lastModifiedDate":"2022-04-11"},{"lineNumber":67,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":68,"author":{"gitId":"benaiahr"},"content":"        switch (commandList[0]) {","lastModifiedDate":"2022-04-17"},{"lineNumber":69,"author":{"gitId":"benaiahr"},"content":"            case MarkCommand.MARK_COMMAND:","lastModifiedDate":"2022-04-17"},{"lineNumber":70,"author":{"gitId":"benaiahr"},"content":"            case MarkCommand.UNMARK_COMMAND:","lastModifiedDate":"2022-04-17"},{"lineNumber":71,"author":{"gitId":"benaiahr"},"content":"                if (commandList.length \u003e 2) {","lastModifiedDate":"2022-04-17"},{"lineNumber":72,"author":{"gitId":"benaiahr"},"content":"                    throw new UnsupportedOperationException();","lastModifiedDate":"2022-04-17"},{"lineNumber":73,"author":{"gitId":"benaiahr"},"content":"                }","lastModifiedDate":"2022-04-11"},{"lineNumber":74,"author":{"gitId":"benaiahr"},"content":"                try {","lastModifiedDate":"2022-04-17"},{"lineNumber":75,"author":{"gitId":"benaiahr"},"content":"                    int index \u003d Integer.parseInt(commandList[1]);","lastModifiedDate":"2022-04-19"},{"lineNumber":76,"author":{"gitId":"benaiahr"},"content":"                    return new MarkCommand(commandList[0], index);","lastModifiedDate":"2022-04-17"},{"lineNumber":77,"author":{"gitId":"benaiahr"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2022-04-17"},{"lineNumber":78,"author":{"gitId":"benaiahr"},"content":"                    return new InvalidCommand(\"empty\");","lastModifiedDate":"2022-04-21"},{"lineNumber":79,"author":{"gitId":"benaiahr"},"content":"                }","lastModifiedDate":"2022-04-11"},{"lineNumber":80,"author":{"gitId":"benaiahr"},"content":"            case AddCommand.TODO_COMMAND:","lastModifiedDate":"2022-04-17"},{"lineNumber":81,"author":{"gitId":"benaiahr"},"content":"            case AddCommand.EVENT_COMMAND:","lastModifiedDate":"2022-04-17"},{"lineNumber":82,"author":{"gitId":"benaiahr"},"content":"            case AddCommand.DEADLINE_COMMAND:","lastModifiedDate":"2022-04-17"},{"lineNumber":83,"author":{"gitId":"benaiahr"},"content":"                return new AddCommand(commandList[0], command.replaceFirst(commandList[0] + \" \", \"\"));","lastModifiedDate":"2022-04-17"},{"lineNumber":84,"author":{"gitId":"benaiahr"},"content":"            case DeleteCommand.DELETE_COMMAND:","lastModifiedDate":"2022-04-19"},{"lineNumber":85,"author":{"gitId":"benaiahr"},"content":"                if (commandList.length \u003e 2) {","lastModifiedDate":"2022-04-17"},{"lineNumber":86,"author":{"gitId":"benaiahr"},"content":"                    return new InvalidCommand(\"empty\");","lastModifiedDate":"2022-04-21"},{"lineNumber":87,"author":{"gitId":"benaiahr"},"content":"                }","lastModifiedDate":"2022-04-11"},{"lineNumber":88,"author":{"gitId":"benaiahr"},"content":"                try {","lastModifiedDate":"2022-04-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                    int index \u003d Integer.parseInt(commandList[1]);","lastModifiedDate":"2022-04-18"},{"lineNumber":90,"author":{"gitId":"benaiahr"},"content":"                    return new DeleteCommand(index);","lastModifiedDate":"2022-04-17"},{"lineNumber":91,"author":{"gitId":"benaiahr"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2022-04-17"},{"lineNumber":92,"author":{"gitId":"benaiahr"},"content":"                    return new InvalidCommand(\"empty\");","lastModifiedDate":"2022-04-21"},{"lineNumber":93,"author":{"gitId":"benaiahr"},"content":"                }","lastModifiedDate":"2022-04-11"},{"lineNumber":94,"author":{"gitId":"benaiahr"},"content":"            case FindCommand.FIND_COMMAND:","lastModifiedDate":"2022-04-19"},{"lineNumber":95,"author":{"gitId":"benaiahr"},"content":"                if (commandList.length \u003e 2) {","lastModifiedDate":"2022-04-19"},{"lineNumber":96,"author":{"gitId":"benaiahr"},"content":"                    return new InvalidCommand(\"empty\");","lastModifiedDate":"2022-04-21"},{"lineNumber":97,"author":{"gitId":"benaiahr"},"content":"                }","lastModifiedDate":"2022-04-19"},{"lineNumber":98,"author":{"gitId":"benaiahr"},"content":"                return new FindCommand(commandList[1]);","lastModifiedDate":"2022-04-19"},{"lineNumber":99,"author":{"gitId":"benaiahr"},"content":"            case SnoozeCommand.SNOOZE_COMMAND:","lastModifiedDate":"2022-04-21"},{"lineNumber":100,"author":{"gitId":"benaiahr"},"content":"                if (commandList.length \u003e 4) {","lastModifiedDate":"2022-04-21"},{"lineNumber":101,"author":{"gitId":"benaiahr"},"content":"                    return new InvalidCommand(\"empty\");","lastModifiedDate":"2022-04-21"},{"lineNumber":102,"author":{"gitId":"benaiahr"},"content":"                }","lastModifiedDate":"2022-04-21"},{"lineNumber":103,"author":{"gitId":"benaiahr"},"content":"                try {","lastModifiedDate":"2022-04-21"},{"lineNumber":104,"author":{"gitId":"benaiahr"},"content":"                    int index \u003d Integer.parseInt(commandList[1]);","lastModifiedDate":"2022-04-21"},{"lineNumber":105,"author":{"gitId":"benaiahr"},"content":"                    int amount \u003d Integer.parseInt(commandList[3]);","lastModifiedDate":"2022-04-21"},{"lineNumber":106,"author":{"gitId":"benaiahr"},"content":"                    return new SnoozeCommand(index, commandList[2], amount);","lastModifiedDate":"2022-04-21"},{"lineNumber":107,"author":{"gitId":"benaiahr"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2022-04-21"},{"lineNumber":108,"author":{"gitId":"benaiahr"},"content":"                    return new InvalidCommand(\"empty\");","lastModifiedDate":"2022-04-21"},{"lineNumber":109,"author":{"gitId":"benaiahr"},"content":"                }","lastModifiedDate":"2022-04-21"},{"lineNumber":110,"author":{"gitId":"benaiahr"},"content":"            default:","lastModifiedDate":"2022-04-17"},{"lineNumber":111,"author":{"gitId":"benaiahr"},"content":"                return new InvalidCommand(\"empty\");","lastModifiedDate":"2022-04-21"},{"lineNumber":112,"author":{"gitId":"benaiahr"},"content":"        }","lastModifiedDate":"2022-04-11"},{"lineNumber":113,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-11"},{"lineNumber":114,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":115,"author":{"gitId":"benaiahr"},"content":"}","lastModifiedDate":"2022-04-11"}],"authorContributionMap":{"benaiahr":93,"-":22}},{"path":"src/main/java/zhixuan/duke/storage/StorageFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benaiahr"},"content":"package zhixuan.duke.storage;","lastModifiedDate":"2022-04-17"},{"lineNumber":2,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.File;","lastModifiedDate":"2022-04-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-04-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2022-04-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.Writer;","lastModifiedDate":"2022-04-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileReader;","lastModifiedDate":"2022-04-18"},{"lineNumber":8,"author":{"gitId":"benaiahr"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-04-17"},{"lineNumber":9,"author":{"gitId":"benaiahr"},"content":"import java.io.IOException;","lastModifiedDate":"2022-04-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-04-18"},{"lineNumber":11,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":12,"author":{"gitId":"benaiahr"},"content":"import zhixuan.duke.data.task.*;","lastModifiedDate":"2022-04-17"},{"lineNumber":13,"author":{"gitId":"benaiahr"},"content":"import zhixuan.duke.ui.DukeUI;","lastModifiedDate":"2022-04-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import zhixuan.duke.data.exceptions.InvalidFileException;","lastModifiedDate":"2022-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javax.swing.*;","lastModifiedDate":"2022-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javax.swing.filechooser.FileSystemView;","lastModifiedDate":"2022-04-19"},{"lineNumber":18,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-04-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Handler for saving and loading of files","lastModifiedDate":"2022-04-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2022-04-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" **/","lastModifiedDate":"2022-04-18"},{"lineNumber":23,"author":{"gitId":"benaiahr"},"content":"public class StorageFile {","lastModifiedDate":"2022-04-17"},{"lineNumber":24,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isLoadedNewFile \u003d false;","lastModifiedDate":"2022-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static File loadedFile;","lastModifiedDate":"2022-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-04-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Checks if directory is created and then","lastModifiedDate":"2022-04-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * creates \u0027user-files\u0027 directory in user\u0027s directory","lastModifiedDate":"2022-04-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @return created directory location string","lastModifiedDate":"2022-04-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     **/","lastModifiedDate":"2022-04-18"},{"lineNumber":34,"author":{"gitId":"benaiahr"},"content":"    private static String createDirectory() {","lastModifiedDate":"2022-04-17"},{"lineNumber":35,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":36,"author":{"gitId":"benaiahr"},"content":"        String directoryName \u003d System.getProperty(\"user.dir\") + File.separator + \"user-files\";","lastModifiedDate":"2022-04-17"},{"lineNumber":37,"author":{"gitId":"benaiahr"},"content":"        File directory \u003d new File(directoryName);","lastModifiedDate":"2022-04-17"},{"lineNumber":38,"author":{"gitId":"benaiahr"},"content":"        if (!directory.exists()){","lastModifiedDate":"2022-04-17"},{"lineNumber":39,"author":{"gitId":"benaiahr"},"content":"            directory.mkdir();","lastModifiedDate":"2022-04-17"},{"lineNumber":40,"author":{"gitId":"benaiahr"},"content":"        }","lastModifiedDate":"2022-04-17"},{"lineNumber":41,"author":{"gitId":"benaiahr"},"content":"        return directoryName;","lastModifiedDate":"2022-04-17"},{"lineNumber":42,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-04-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Calls createDirectory to check if created","lastModifiedDate":"2022-04-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets file name as \u0027list.txt\u0027","lastModifiedDate":"2022-04-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * **/","lastModifiedDate":"2022-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static File getDefaultLocation(){","lastModifiedDate":"2022-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        File fileName \u003d new File(createDirectory() + File.separator + \"list.txt\");","lastModifiedDate":"2022-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return fileName;","lastModifiedDate":"2022-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Calls getAllTask to retrieve all tasks","lastModifiedDate":"2022-04-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Writes tasks to file","lastModifiedDate":"2022-04-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param fileName file for the tasks to be saved","lastModifiedDate":"2022-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws IOException if file is not saved correctly","lastModifiedDate":"2022-04-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     **/","lastModifiedDate":"2022-04-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void saveFile(File fileName){","lastModifiedDate":"2022-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-19"},{"lineNumber":62,"author":{"gitId":"benaiahr"},"content":"        try {","lastModifiedDate":"2022-04-17"},{"lineNumber":63,"author":{"gitId":"benaiahr"},"content":"            ArrayList\u003cString\u003e taskString \u003d TaskManager.getInstance().getAllTask();","lastModifiedDate":"2022-04-17"},{"lineNumber":64,"author":{"gitId":"benaiahr"},"content":"            FileWriter fw \u003d new FileWriter(fileName);","lastModifiedDate":"2022-04-17"},{"lineNumber":65,"author":{"gitId":"benaiahr"},"content":"            Writer output \u003d new BufferedWriter(fw);","lastModifiedDate":"2022-04-17"},{"lineNumber":66,"author":{"gitId":"benaiahr"},"content":"            for (String task: taskString) {","lastModifiedDate":"2022-04-17"},{"lineNumber":67,"author":{"gitId":"benaiahr"},"content":"                output.write(task + \"\\n\");","lastModifiedDate":"2022-04-17"},{"lineNumber":68,"author":{"gitId":"benaiahr"},"content":"            }","lastModifiedDate":"2022-04-17"},{"lineNumber":69,"author":{"gitId":"benaiahr"},"content":"            output.close();","lastModifiedDate":"2022-04-17"},{"lineNumber":70,"author":{"gitId":"benaiahr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-04-17"},{"lineNumber":71,"author":{"gitId":"benaiahr"},"content":"            new DukeUI().showToUser(e.getMessage());","lastModifiedDate":"2022-04-17"},{"lineNumber":72,"author":{"gitId":"benaiahr"},"content":"        }","lastModifiedDate":"2022-04-17"},{"lineNumber":73,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-17"},{"lineNumber":74,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-04-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Reads tasks from file","lastModifiedDate":"2022-04-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Calls TaskDecoder.decodeTask to decode tasks","lastModifiedDate":"2022-04-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @param fileName file provided by user","lastModifiedDate":"2022-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @return true if file is loaded","lastModifiedDate":"2022-04-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @throws InvalidFileException if file is not in correct format or unreadable.","lastModifiedDate":"2022-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if file is not loaded correctly","lastModifiedDate":"2022-04-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     **/","lastModifiedDate":"2022-04-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static boolean loadFile(File fileName) {","lastModifiedDate":"2022-04-19"},{"lineNumber":87,"author":{"gitId":"benaiahr"},"content":"        String line;","lastModifiedDate":"2022-04-17"},{"lineNumber":88,"author":{"gitId":"benaiahr"},"content":"        try {","lastModifiedDate":"2022-04-17"},{"lineNumber":89,"author":{"gitId":"benaiahr"},"content":"            boolean result \u003d false;","lastModifiedDate":"2022-04-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            if (!fileName.canRead()) throw new InvalidFileException(InvalidFileException.FILE_NOT_READABLE);","lastModifiedDate":"2022-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            if (!fileName.canWrite()) throw new InvalidFileException(InvalidFileException.FILE_NOT_WRITABLE);","lastModifiedDate":"2022-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            if (fileName.length() \u003d\u003d 0) throw new InvalidFileException(InvalidFileException.FILE_EMPTY);","lastModifiedDate":"2022-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            //length returns 0 if file doesn\u0027t exist or if it\u0027s empty","lastModifiedDate":"2022-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-19"},{"lineNumber":95,"author":{"gitId":"benaiahr"},"content":"            BufferedReader input \u003d new BufferedReader(new FileReader(fileName));","lastModifiedDate":"2022-04-17"},{"lineNumber":96,"author":{"gitId":"benaiahr"},"content":"            if (!input.ready()) {","lastModifiedDate":"2022-04-17"},{"lineNumber":97,"author":{"gitId":"benaiahr"},"content":"                throw new IOException();","lastModifiedDate":"2022-04-17"},{"lineNumber":98,"author":{"gitId":"benaiahr"},"content":"            }","lastModifiedDate":"2022-04-17"},{"lineNumber":99,"author":{"gitId":"benaiahr"},"content":"            while ((line \u003d input.readLine()) !\u003d null) {","lastModifiedDate":"2022-04-17"},{"lineNumber":100,"author":{"gitId":"benaiahr"},"content":"                result \u003d TaskDecoder.decodeTask(line);","lastModifiedDate":"2022-04-17"},{"lineNumber":101,"author":{"gitId":"benaiahr"},"content":"            }","lastModifiedDate":"2022-04-17"},{"lineNumber":102,"author":{"gitId":"benaiahr"},"content":"            input.close();","lastModifiedDate":"2022-04-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-19"},{"lineNumber":104,"author":{"gitId":"benaiahr"},"content":"            return result;","lastModifiedDate":"2022-04-17"},{"lineNumber":105,"author":{"gitId":"benaiahr"},"content":"        } catch (IOException e){","lastModifiedDate":"2022-04-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            new DukeUI().showToUser(InvalidFileException.FILE_ERROR);","lastModifiedDate":"2022-04-19"},{"lineNumber":107,"author":{"gitId":"benaiahr"},"content":"            return false;","lastModifiedDate":"2022-04-17"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        } catch (InvalidFileException e){","lastModifiedDate":"2022-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            new DukeUI().showToUser(InvalidFileException.FILE_ERROR);","lastModifiedDate":"2022-04-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2022-04-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-04-19"},{"lineNumber":112,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-04-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Uses JFileChooser for user to select file","lastModifiedDate":"2022-04-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Calls loadFile() on selected file","lastModifiedDate":"2022-04-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @return true if file is loaded","lastModifiedDate":"2022-04-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     **/","lastModifiedDate":"2022-04-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static boolean loadUserFile() {","lastModifiedDate":"2022-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        JFileChooser fileChooser \u003d new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());","lastModifiedDate":"2022-04-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        int returnValue \u003d fileChooser.showOpenDialog(null);","lastModifiedDate":"2022-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (returnValue \u003d\u003d JFileChooser.APPROVE_OPTION) {","lastModifiedDate":"2022-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            File selectedFile \u003d fileChooser.getSelectedFile();","lastModifiedDate":"2022-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            isLoadedNewFile \u003d loadFile(selectedFile);","lastModifiedDate":"2022-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            if (isLoadedNewFile) {","lastModifiedDate":"2022-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                loadedFile \u003d selectedFile;","lastModifiedDate":"2022-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return isLoadedNewFile;","lastModifiedDate":"2022-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return false;","lastModifiedDate":"2022-04-19"},{"lineNumber":133,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-17"},{"lineNumber":134,"author":{"gitId":"benaiahr"},"content":"}","lastModifiedDate":"2022-04-17"}],"authorContributionMap":{"benaiahr":49,"-":85}},{"path":"src/main/java/zhixuan/duke/storage/TaskDecoder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benaiahr"},"content":"package zhixuan.duke.storage;","lastModifiedDate":"2022-04-17"},{"lineNumber":2,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":3,"author":{"gitId":"benaiahr"},"content":"import zhixuan.duke.commands.AddCommand;","lastModifiedDate":"2022-04-17"},{"lineNumber":4,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-04-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Handler for decoding of task strings in file","lastModifiedDate":"2022-04-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2022-04-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":" **/","lastModifiedDate":"2022-04-18"},{"lineNumber":9,"author":{"gitId":"benaiahr"},"content":"public class TaskDecoder {","lastModifiedDate":"2022-04-17"},{"lineNumber":10,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-04-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Splits and organize strings into task type","lastModifiedDate":"2022-04-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Calls AddCommand to add tasks based on task type","lastModifiedDate":"2022-04-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param input full task string from file","lastModifiedDate":"2022-04-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @return true if task decoded and added to tasklist","lastModifiedDate":"2022-04-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     **/","lastModifiedDate":"2022-04-18"},{"lineNumber":19,"author":{"gitId":"benaiahr"},"content":"    public static boolean decodeTask(String input) {","lastModifiedDate":"2022-04-17"},{"lineNumber":20,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":21,"author":{"gitId":"benaiahr"},"content":"        // split takes a regular expression and | is a special character (means \u0027or\u0027).","lastModifiedDate":"2022-04-17"},{"lineNumber":22,"author":{"gitId":"benaiahr"},"content":"        // requires additional \\\\ in regex since \\ is Java\u0027s escape character in a string.","lastModifiedDate":"2022-04-17"},{"lineNumber":23,"author":{"gitId":"benaiahr"},"content":"        // Java understands the string like \"\\|\", and the regex then understands it like \"|\"","lastModifiedDate":"2022-04-17"},{"lineNumber":24,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":25,"author":{"gitId":"benaiahr"},"content":"        String[] task \u003d input.split(\"\\\\|\");","lastModifiedDate":"2022-04-17"},{"lineNumber":26,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (input.startsWith(\"TODO\")) {","lastModifiedDate":"2022-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            return new AddCommand(true, \"todo\", Boolean.parseBoolean((task[1].trim())), task[2].trim()).execute();","lastModifiedDate":"2022-04-18"},{"lineNumber":29,"author":{"gitId":"benaiahr"},"content":"        }","lastModifiedDate":"2022-04-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        else if (input.startsWith(\"EVENT\")) {","lastModifiedDate":"2022-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            return new AddCommand(true, \"event\", Boolean.parseBoolean((task[1].trim())), task[2] + \" /at \" + task[3].trim()).execute();","lastModifiedDate":"2022-04-18"},{"lineNumber":32,"author":{"gitId":"benaiahr"},"content":"        }","lastModifiedDate":"2022-04-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        else if (input.startsWith(\"DEADLINE\")) {","lastModifiedDate":"2022-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            return new AddCommand(true, \"deadline\", Boolean.parseBoolean((task[1].trim())), task[2] + \" /by \" + task[3].trim()).execute();","lastModifiedDate":"2022-04-18"},{"lineNumber":35,"author":{"gitId":"benaiahr"},"content":"        }","lastModifiedDate":"2022-04-17"},{"lineNumber":36,"author":{"gitId":"benaiahr"},"content":"        return false;","lastModifiedDate":"2022-04-17"},{"lineNumber":37,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-17"},{"lineNumber":38,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":39,"author":{"gitId":"benaiahr"},"content":"}","lastModifiedDate":"2022-04-17"}],"authorContributionMap":{"benaiahr":21,"-":18}},{"path":"src/main/java/zhixuan/duke/storage/TaskEncoder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"benaiahr"},"content":"package zhixuan.duke.storage;","lastModifiedDate":"2022-04-17"},{"lineNumber":2,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":3,"author":{"gitId":"benaiahr"},"content":"import zhixuan.duke.data.task.Task;","lastModifiedDate":"2022-04-17"},{"lineNumber":4,"author":{"gitId":"benaiahr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-04-17"},{"lineNumber":5,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-04-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Handler for encoding of task","lastModifiedDate":"2022-04-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2022-04-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" **/","lastModifiedDate":"2022-04-18"},{"lineNumber":10,"author":{"gitId":"benaiahr"},"content":"public class TaskEncoder {","lastModifiedDate":"2022-04-17"},{"lineNumber":11,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-04-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Iterates through taskList and saves encoded task into new taskList","lastModifiedDate":"2022-04-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param taskList to iterate through","lastModifiedDate":"2022-04-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @return taskList with encoded task","lastModifiedDate":"2022-04-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     **/","lastModifiedDate":"2022-04-18"},{"lineNumber":19,"author":{"gitId":"benaiahr"},"content":"    public static ArrayList\u003cString\u003e encodeTaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-04-17"},{"lineNumber":20,"author":{"gitId":"benaiahr"},"content":"        ArrayList\u003cString\u003e taskStringList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-04-17"},{"lineNumber":21,"author":{"gitId":"benaiahr"},"content":"        for (Task task: taskList) {","lastModifiedDate":"2022-04-17"},{"lineNumber":22,"author":{"gitId":"benaiahr"},"content":"            taskStringList.add(task.toFile());","lastModifiedDate":"2022-04-17"},{"lineNumber":23,"author":{"gitId":"benaiahr"},"content":"        }","lastModifiedDate":"2022-04-17"},{"lineNumber":24,"author":{"gitId":"benaiahr"},"content":"        return taskStringList;","lastModifiedDate":"2022-04-17"},{"lineNumber":25,"author":{"gitId":"benaiahr"},"content":"    }","lastModifiedDate":"2022-04-17"},{"lineNumber":26,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":27,"author":{"gitId":"benaiahr"},"content":"}","lastModifiedDate":"2022-04-17"}],"authorContributionMap":{"benaiahr":16,"-":11}},{"path":"src/main/java/zhixuan/duke/ui/DukeUI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package zhixuan.duke.ui;","lastModifiedDate":"2022-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-03-28"},{"lineNumber":4,"author":{"gitId":"benaiahr"},"content":"","lastModifiedDate":"2022-04-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import zhixuan.duke.common.Messages;","lastModifiedDate":"2022-04-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-04-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Text UI of the application.","lastModifiedDate":"2022-04-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-04-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class DukeUI {","lastModifiedDate":"2022-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final PrintStream out;","lastModifiedDate":"2022-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public DukeUI() {","lastModifiedDate":"2022-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this(System.out);","lastModifiedDate":"2022-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public DukeUI(PrintStream out) {","lastModifiedDate":"2022-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        this.out \u003d out;","lastModifiedDate":"2022-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /** Shows message(s) to the user */","lastModifiedDate":"2022-04-18"},{"lineNumber":23,"author":{"gitId":"benaiahr"},"content":"    public void showToUser(String message) {","lastModifiedDate":"2022-04-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        out.println(message);","lastModifiedDate":"2022-03-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-04-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Generates and prints the welcome message upon the start of the application.","lastModifiedDate":"2022-04-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-04-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param success true if file exists and loaded into application, else false","lastModifiedDate":"2022-04-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-04-18"},{"lineNumber":32,"author":{"gitId":"benaiahr"},"content":"    public void printWelcomeMessage(boolean success) {","lastModifiedDate":"2022-04-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        showToUser(Messages.MESSAGE_LOGO);","lastModifiedDate":"2022-04-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        showToUser(Messages.getWelcomeMessage(success));","lastModifiedDate":"2022-04-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-04-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Generates and prints the exit message upon the end of the application.","lastModifiedDate":"2022-04-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-04-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void printEndingMessage() {","lastModifiedDate":"2022-03-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showToUser(Messages.MESSAGE_GOODBYE);","lastModifiedDate":"2022-04-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-03-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-03-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-03-28"}],"authorContributionMap":{"-":41,"benaiahr":3}},{"path":"src/test/java/zhixuan/duke/data/task/TaskManagerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package zhixuan.duke.data.task;","lastModifiedDate":"2022-04-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.*;","lastModifiedDate":"2022-04-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import zhixuan.duke.common.EnumTask;","lastModifiedDate":"2022-04-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2022-04-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintStream;","lastModifiedDate":"2022-04-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2022-04-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TaskManagerTest {","lastModifiedDate":"2022-04-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final static PrintStream out \u003d System.out;","lastModifiedDate":"2022-04-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final static ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2022-04-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @BeforeAll","lastModifiedDate":"2022-04-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void setUp() {","lastModifiedDate":"2022-04-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2022-04-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-04-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @AfterAll","lastModifiedDate":"2022-04-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static void cleanUp() {","lastModifiedDate":"2022-04-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        System.setOut(out);","lastModifiedDate":"2022-04-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-04-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-04-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    void addToTaskList_validTask_success() {","lastModifiedDate":"2022-04-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // Add todo","lastModifiedDate":"2022-04-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        outContent.reset();","lastModifiedDate":"2022-04-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        TaskManager.getInstance().addToTaskList(false, EnumTask.TODO, false, \"Test\");","lastModifiedDate":"2022-04-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String expectedOutput \u003d \"Roger. I will add this to your list: \\n\" +","lastModifiedDate":"2022-04-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                \"[T][ ] Test\" + \"\\n\" +","lastModifiedDate":"2022-04-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                \"You have 1 tasks in your list.\" + \"\\r\\n\";","lastModifiedDate":"2022-04-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String actualOutput \u003d outContent.toString();","lastModifiedDate":"2022-04-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2022-04-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // Add event","lastModifiedDate":"2022-04-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        outContent.reset();","lastModifiedDate":"2022-04-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        TaskManager.getInstance().addToTaskList(false, EnumTask.EVENT, false, \"Finals /at 2022-04-25 09:00\");","lastModifiedDate":"2022-04-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String expectedOutput2 \u003d \"Roger. I will add this to your list: \\n\" +","lastModifiedDate":"2022-04-18"},{"lineNumber":39,"author":{"gitId":"benaiahr"},"content":"                \"[E][ ] Finals (at: 25 Apr 2022 09:00)\" + \"\\n\" +","lastModifiedDate":"2022-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \"You have 2 tasks in your list.\" + \"\\r\\n\";","lastModifiedDate":"2022-04-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        String actualOutput2 \u003d outContent.toString();","lastModifiedDate":"2022-04-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(expectedOutput2, actualOutput2);","lastModifiedDate":"2022-04-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Add deadline","lastModifiedDate":"2022-04-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        outContent.reset();","lastModifiedDate":"2022-04-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        TaskManager.getInstance().addToTaskList(false, EnumTask.DEADLINE, false, \"Bedtime /by 2022-01-01 23:59\");","lastModifiedDate":"2022-04-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String expectedOutput3 \u003d \"Roger. I will add this to your list: \\n\" +","lastModifiedDate":"2022-04-18"},{"lineNumber":47,"author":{"gitId":"benaiahr"},"content":"                \"[D][ ] Bedtime (by: 01 Jan 2022 23:59)\" + \"\\n\" +","lastModifiedDate":"2022-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                \"You have 3 tasks in your list.\" + \"\\r\\n\";","lastModifiedDate":"2022-04-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String actualOutput3 \u003d outContent.toString();","lastModifiedDate":"2022-04-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(expectedOutput3, actualOutput3);","lastModifiedDate":"2022-04-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-04-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-04-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void deleteTaskList_validTask_success() {","lastModifiedDate":"2022-04-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // delete 2","lastModifiedDate":"2022-04-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        outContent.reset();","lastModifiedDate":"2022-04-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        TaskManager.getInstance().deleteTask(2);","lastModifiedDate":"2022-04-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expectedOutput \u003d \"Deleted this task: \\n\" +","lastModifiedDate":"2022-04-18"},{"lineNumber":59,"author":{"gitId":"benaiahr"},"content":"                \"[E][ ] Finals (at: 25 Apr 2022 09:00)\" + \"\\n\" +","lastModifiedDate":"2022-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                \"You have 2 tasks in your list.\" + \"\\r\\n\";","lastModifiedDate":"2022-04-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String actualOutput \u003d outContent.toString();","lastModifiedDate":"2022-04-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2022-04-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-04-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-04-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    void listTaskList_validList_success() {","lastModifiedDate":"2022-04-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // List","lastModifiedDate":"2022-04-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        outContent.reset();","lastModifiedDate":"2022-04-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        TaskManager.getInstance().listTask();","lastModifiedDate":"2022-04-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedOutput \u003d \"Here are the tasks in your list: \\n\" +","lastModifiedDate":"2022-04-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \"1.[T][ ] Test\" + \"\\n\" +","lastModifiedDate":"2022-04-18"},{"lineNumber":72,"author":{"gitId":"benaiahr"},"content":"                \"2.[D][ ] Bedtime (by: 01 Jan 2022 23:59)\" + \"\\r\\n\";","lastModifiedDate":"2022-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String actualOutput \u003d outContent.toString();","lastModifiedDate":"2022-04-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2022-04-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-04-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-04-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    void markTaskList_validTask_success() {","lastModifiedDate":"2022-04-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // mark 1","lastModifiedDate":"2022-04-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        outContent.reset();","lastModifiedDate":"2022-04-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        TaskManager.getInstance().markTask(\"mark\", 1);","lastModifiedDate":"2022-04-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedOutput \u003d \"Nice! I\u0027ve marked this task as done: \\n\" +","lastModifiedDate":"2022-04-18"},{"lineNumber":83,"author":{"gitId":"benaiahr"},"content":"                \"[T][X] Test\" + \"\\r\\n\";","lastModifiedDate":"2022-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String actualOutput \u003d outContent.toString();","lastModifiedDate":"2022-04-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2022-04-18"},{"lineNumber":86,"author":{"gitId":"benaiahr"},"content":"        // mark 1 - Already marked","lastModifiedDate":"2022-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        outContent.reset();","lastModifiedDate":"2022-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        TaskManager.getInstance().markTask(\"mark\", 1);","lastModifiedDate":"2022-04-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedOutput2 \u003d \"Task is already marked as done: \\n\" +","lastModifiedDate":"2022-04-18"},{"lineNumber":90,"author":{"gitId":"benaiahr"},"content":"                \"[T][X] Test\" + \"\\r\\n\";","lastModifiedDate":"2022-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String actualOutput2 \u003d outContent.toString();","lastModifiedDate":"2022-04-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(expectedOutput2, actualOutput2);","lastModifiedDate":"2022-04-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // unmark 1","lastModifiedDate":"2022-04-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        outContent.reset();","lastModifiedDate":"2022-04-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        TaskManager.getInstance().markTask(\"unmark\", 1);","lastModifiedDate":"2022-04-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String expectedOutput3 \u003d \"OK, I\u0027ve marked this task as not done yet: \\n\" +","lastModifiedDate":"2022-04-18"},{"lineNumber":97,"author":{"gitId":"benaiahr"},"content":"                \"[T][ ] Test\" + \"\\r\\n\";","lastModifiedDate":"2022-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String actualOutput3 \u003d outContent.toString();","lastModifiedDate":"2022-04-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertEquals(expectedOutput3, actualOutput3);","lastModifiedDate":"2022-04-18"},{"lineNumber":100,"author":{"gitId":"benaiahr"},"content":"        // unmark 1 - Already unmarked","lastModifiedDate":"2022-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        outContent.reset();","lastModifiedDate":"2022-04-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TaskManager.getInstance().markTask(\"unmark\", 1);","lastModifiedDate":"2022-04-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String expectedOutput4 \u003d \"Task is already marked as not done: \\n\" +","lastModifiedDate":"2022-04-18"},{"lineNumber":104,"author":{"gitId":"benaiahr"},"content":"                \"[T][ ] Test\" + \"\\r\\n\";","lastModifiedDate":"2022-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String actualOutput4 \u003d outContent.toString();","lastModifiedDate":"2022-04-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedOutput4, actualOutput4);","lastModifiedDate":"2022-04-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-04-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-04-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-18"}],"authorContributionMap":{"-":99,"benaiahr":10}},{"path":"user-files/list.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"benaiahr"},"content":"EVENT | true | Exam | 2023-12-02 13:04","lastModifiedDate":"2022-04-21"},{"lineNumber":2,"author":{"gitId":"benaiahr"},"content":"DEADLINE | false | Duke Submission | 2022-01-01 00:00","lastModifiedDate":"2022-04-21"},{"lineNumber":3,"author":{"gitId":"benaiahr"},"content":"TODO | false | Go To Sleep","lastModifiedDate":"2022-04-21"}],"authorContributionMap":{"benaiahr":3}}]
