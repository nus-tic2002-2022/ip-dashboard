[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinxx88"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"kevinxx88"},"content":"    protected String by;","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"kevinxx88"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"kevinxx88"},"content":"        super(description);","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"kevinxx88"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"kevinxx88"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"kevinxx88"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"kevinxx88"},"content":"    public String toString() {","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"kevinxx88"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"kevinxx88"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"kevinxx88"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"kevinxx88":14}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinxx88"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-12"},{"lineNumber":2,"author":{"gitId":"kevinxx88"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-20"},{"lineNumber":3,"author":{"gitId":"kevinxx88"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-04-13"},{"lineNumber":4,"author":{"gitId":"kevinxx88"},"content":"import java.io.File;","lastModifiedDate":"2022-04-13"},{"lineNumber":5,"author":{"gitId":"kevinxx88"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-04-13"},{"lineNumber":6,"author":{"gitId":"kevinxx88"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-04-13"},{"lineNumber":7,"author":{"gitId":"kevinxx88"},"content":"import java.io.IOException;","lastModifiedDate":"2022-04-13"},{"lineNumber":8,"author":{"gitId":"kevinxx88"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-04-13"},{"lineNumber":9,"author":{"gitId":"kevinxx88"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-04-13"},{"lineNumber":10,"author":{"gitId":"kevinxx88"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-04-14"},{"lineNumber":11,"author":{"gitId":"kevinxx88"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-04-14"},{"lineNumber":12,"author":{"gitId":"kevinxx88"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-04-14"},{"lineNumber":13,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":16,"author":{"gitId":"kevinxx88"},"content":"    public static ArrayList\u003cTask\u003e taskIcon \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-04-13"},{"lineNumber":17,"author":{"gitId":"kevinxx88"},"content":"    public static int count \u003d 0;","lastModifiedDate":"2022-04-13"},{"lineNumber":18,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-04-13"},{"lineNumber":19,"author":{"gitId":"kevinxx88"},"content":"    // separating line function:","lastModifiedDate":"2022-02-12"},{"lineNumber":20,"author":{"gitId":"kevinxx88"},"content":"    public static void separatingLine() {","lastModifiedDate":"2022-02-12"},{"lineNumber":21,"author":{"gitId":"kevinxx88"},"content":"        System.out.println(\"__________________________________________________________\");","lastModifiedDate":"2022-02-12"},{"lineNumber":22,"author":{"gitId":"kevinxx88"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":24,"author":{"gitId":"kevinxx88"},"content":"    public static void system() {","lastModifiedDate":"2022-02-12"},{"lineNumber":25,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":26,"author":{"gitId":"kevinxx88"},"content":"        String line;","lastModifiedDate":"2022-02-12"},{"lineNumber":27,"author":{"gitId":"kevinxx88"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-02-12"},{"lineNumber":28,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":29,"author":{"gitId":"kevinxx88"},"content":"        while (true) {","lastModifiedDate":"2022-02-12"},{"lineNumber":30,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":31,"author":{"gitId":"kevinxx88"},"content":"            //request user to input:","lastModifiedDate":"2022-02-12"},{"lineNumber":32,"author":{"gitId":"kevinxx88"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2022-02-12"},{"lineNumber":33,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":34,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":35,"author":{"gitId":"kevinxx88"},"content":"            //Exit system if input \"bye\":","lastModifiedDate":"2022-03-05"},{"lineNumber":36,"author":{"gitId":"kevinxx88"},"content":"            if (line.equals(\"bye\")) {","lastModifiedDate":"2022-02-12"},{"lineNumber":37,"author":{"gitId":"kevinxx88"},"content":"                separatingLine();","lastModifiedDate":"2022-02-12"},{"lineNumber":38,"author":{"gitId":"kevinxx88"},"content":"                System.out.println(\"Bye. Glad to be of service to you!\\n\" +","lastModifiedDate":"2022-02-12"},{"lineNumber":39,"author":{"gitId":"kevinxx88"},"content":"                        \"Hope to assist you again soon, Boss!\");","lastModifiedDate":"2022-02-13"},{"lineNumber":40,"author":{"gitId":"kevinxx88"},"content":"                separatingLine();","lastModifiedDate":"2022-02-12"},{"lineNumber":41,"author":{"gitId":"kevinxx88"},"content":"                System.exit(0);","lastModifiedDate":"2022-02-12"},{"lineNumber":42,"author":{"gitId":"kevinxx88"},"content":"            }","lastModifiedDate":"2022-02-12"},{"lineNumber":43,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":44,"author":{"gitId":"kevinxx88"},"content":"            //Print the List:","lastModifiedDate":"2022-02-12"},{"lineNumber":45,"author":{"gitId":"kevinxx88"},"content":"            else if (line.equals(\"list\") \u0026\u0026 taskIcon.size() !\u003d 0) {","lastModifiedDate":"2022-03-20"},{"lineNumber":46,"author":{"gitId":"kevinxx88"},"content":"                separatingLine();","lastModifiedDate":"2022-02-12"},{"lineNumber":47,"author":{"gitId":"kevinxx88"},"content":"                System.out.println(\"Hey Boss! I have summarised your task list as below:\");","lastModifiedDate":"2022-02-13"},{"lineNumber":48,"author":{"gitId":"kevinxx88"},"content":"                for (int i \u003d 0; i \u003c taskIcon.size(); i++) {","lastModifiedDate":"2022-03-20"},{"lineNumber":49,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":50,"author":{"gitId":"kevinxx88"},"content":"                    // below codes are used from level-6 onwards:","lastModifiedDate":"2022-03-20"},{"lineNumber":51,"author":{"gitId":"kevinxx88"},"content":"                    System.out.println(i + 1 + \". \" + taskIcon.get(i).toString());","lastModifiedDate":"2022-03-20"},{"lineNumber":52,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":53,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-04-13"},{"lineNumber":54,"author":{"gitId":"kevinxx88"},"content":"                }","lastModifiedDate":"2022-02-12"},{"lineNumber":55,"author":{"gitId":"kevinxx88"},"content":"                separatingLine();","lastModifiedDate":"2022-02-12"},{"lineNumber":56,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":57,"author":{"gitId":"kevinxx88"},"content":"            } else if (line.equals(\"list\") \u0026\u0026 taskIcon.size() \u003d\u003d 0) {","lastModifiedDate":"2022-03-20"},{"lineNumber":58,"author":{"gitId":"kevinxx88"},"content":"                separatingLine();","lastModifiedDate":"2022-02-12"},{"lineNumber":59,"author":{"gitId":"kevinxx88"},"content":"                System.out.println(\"Your current task list is empty, Boss!\\n\" +","lastModifiedDate":"2022-02-13"},{"lineNumber":60,"author":{"gitId":"kevinxx88"},"content":"                        \"Please start to add your tasks below ^\u003c\u003e^\");","lastModifiedDate":"2022-02-12"},{"lineNumber":61,"author":{"gitId":"kevinxx88"},"content":"                separatingLine();","lastModifiedDate":"2022-02-12"},{"lineNumber":62,"author":{"gitId":"kevinxx88"},"content":"            }","lastModifiedDate":"2022-02-12"},{"lineNumber":63,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":64,"author":{"gitId":"kevinxx88"},"content":"            // unmark task (with error handling):","lastModifiedDate":"2022-03-12"},{"lineNumber":65,"author":{"gitId":"kevinxx88"},"content":"            else if (line.contains(\"unmark\")) {","lastModifiedDate":"2022-02-13"},{"lineNumber":66,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":67,"author":{"gitId":"kevinxx88"},"content":"                try {","lastModifiedDate":"2022-03-12"},{"lineNumber":68,"author":{"gitId":"kevinxx88"},"content":"                    int index1 \u003d Integer.parseInt(line.substring(7)) - 1;","lastModifiedDate":"2022-02-13"},{"lineNumber":69,"author":{"gitId":"kevinxx88"},"content":"                    Task ud \u003d taskIcon.get(index1);","lastModifiedDate":"2022-03-20"},{"lineNumber":70,"author":{"gitId":"kevinxx88"},"content":"                    ud.markAsNotDone();","lastModifiedDate":"2022-02-13"},{"lineNumber":71,"author":{"gitId":"kevinxx88"},"content":"                    System.out.println(\"Great, job completed, Boss!\\n\" +","lastModifiedDate":"2022-02-13"},{"lineNumber":72,"author":{"gitId":"kevinxx88"},"content":"                            \"I\u0027ve marked this task as not done yet for you:\");","lastModifiedDate":"2022-02-13"},{"lineNumber":73,"author":{"gitId":"kevinxx88"},"content":"                    System.out.println(\"[\" + ud.getStatusIcon() + \"] \" + ud.description);","lastModifiedDate":"2022-02-13"},{"lineNumber":74,"author":{"gitId":"kevinxx88"},"content":"                    saveFile(\"outputFiles/duke.txt\");","lastModifiedDate":"2022-04-13"},{"lineNumber":75,"author":{"gitId":"kevinxx88"},"content":"                    separatingLine();","lastModifiedDate":"2022-02-13"},{"lineNumber":76,"author":{"gitId":"kevinxx88"},"content":"                }","lastModifiedDate":"2022-03-12"},{"lineNumber":77,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":78,"author":{"gitId":"kevinxx88"},"content":"                // input invalid task number:","lastModifiedDate":"2022-03-12"},{"lineNumber":79,"author":{"gitId":"kevinxx88"},"content":"                catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-20"},{"lineNumber":80,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":81,"author":{"gitId":"kevinxx88"},"content":"                    System.out.println(\"SORRY Boss! You do not have Task No. \" +","lastModifiedDate":"2022-03-12"},{"lineNumber":82,"author":{"gitId":"kevinxx88"},"content":"                            (Integer.parseInt(line.substring(7))) +","lastModifiedDate":"2022-03-12"},{"lineNumber":83,"author":{"gitId":"kevinxx88"},"content":"                            \" in your task list!\\n\" +","lastModifiedDate":"2022-03-12"},{"lineNumber":84,"author":{"gitId":"kevinxx88"},"content":"                            \"You only have a total of \" + (taskIcon.size()) + \" Task(s) in your List!\\n\" +","lastModifiedDate":"2022-03-20"},{"lineNumber":85,"author":{"gitId":"kevinxx88"},"content":"                            \"Please only enter an existing task number again, Boss!\");","lastModifiedDate":"2022-03-12"},{"lineNumber":86,"author":{"gitId":"kevinxx88"},"content":"                    separatingLine();","lastModifiedDate":"2022-03-12"},{"lineNumber":87,"author":{"gitId":"kevinxx88"},"content":"                }","lastModifiedDate":"2022-03-12"},{"lineNumber":88,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-04-13"},{"lineNumber":89,"author":{"gitId":"kevinxx88"},"content":"                catch (IOException e) {","lastModifiedDate":"2022-04-13"},{"lineNumber":90,"author":{"gitId":"kevinxx88"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2022-04-13"},{"lineNumber":91,"author":{"gitId":"kevinxx88"},"content":"                }","lastModifiedDate":"2022-04-13"},{"lineNumber":92,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-04-13"},{"lineNumber":93,"author":{"gitId":"kevinxx88"},"content":"            }","lastModifiedDate":"2022-02-13"},{"lineNumber":94,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":95,"author":{"gitId":"kevinxx88"},"content":"            // mark task (with error handling):","lastModifiedDate":"2022-03-12"},{"lineNumber":96,"author":{"gitId":"kevinxx88"},"content":"            else if (line.contains(\"mark\")) {","lastModifiedDate":"2022-02-13"},{"lineNumber":97,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":98,"author":{"gitId":"kevinxx88"},"content":"                try {","lastModifiedDate":"2022-03-12"},{"lineNumber":99,"author":{"gitId":"kevinxx88"},"content":"                    int index2 \u003d Integer.parseInt(line.substring(5)) - 1;","lastModifiedDate":"2022-02-13"},{"lineNumber":100,"author":{"gitId":"kevinxx88"},"content":"                    Task d \u003d taskIcon.get(index2);","lastModifiedDate":"2022-03-20"},{"lineNumber":101,"author":{"gitId":"kevinxx88"},"content":"                    d.markAsDone();","lastModifiedDate":"2022-02-13"},{"lineNumber":102,"author":{"gitId":"kevinxx88"},"content":"                    System.out.println(\"Great, job completed, Boss!\\n\" +","lastModifiedDate":"2022-02-13"},{"lineNumber":103,"author":{"gitId":"kevinxx88"},"content":"                            \"I\u0027ve marked this task as done for you:\");","lastModifiedDate":"2022-02-13"},{"lineNumber":104,"author":{"gitId":"kevinxx88"},"content":"                    System.out.println(\"[\" + d.getStatusIcon() + \"] \" + d.description);","lastModifiedDate":"2022-02-13"},{"lineNumber":105,"author":{"gitId":"kevinxx88"},"content":"                    saveFile(\"outputFiles/duke.txt\");","lastModifiedDate":"2022-04-13"},{"lineNumber":106,"author":{"gitId":"kevinxx88"},"content":"                    separatingLine();","lastModifiedDate":"2022-02-13"},{"lineNumber":107,"author":{"gitId":"kevinxx88"},"content":"                }","lastModifiedDate":"2022-03-12"},{"lineNumber":108,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":109,"author":{"gitId":"kevinxx88"},"content":"                // input invalid task number:","lastModifiedDate":"2022-03-12"},{"lineNumber":110,"author":{"gitId":"kevinxx88"},"content":"                catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-20"},{"lineNumber":111,"author":{"gitId":"kevinxx88"},"content":"                    System.out.println(\"SORRY Boss! You do not have Task No. \" +","lastModifiedDate":"2022-03-12"},{"lineNumber":112,"author":{"gitId":"kevinxx88"},"content":"                            (Integer.parseInt(line.substring(5))) +","lastModifiedDate":"2022-03-12"},{"lineNumber":113,"author":{"gitId":"kevinxx88"},"content":"                            \" in your task list!\\n\" +","lastModifiedDate":"2022-03-12"},{"lineNumber":114,"author":{"gitId":"kevinxx88"},"content":"                            \"You only have a total of \" + (taskIcon.size()) + \" Task(s) in your List!\\n\" +","lastModifiedDate":"2022-03-20"},{"lineNumber":115,"author":{"gitId":"kevinxx88"},"content":"                            \"Please only enter an existing task number again, Boss!\");","lastModifiedDate":"2022-03-12"},{"lineNumber":116,"author":{"gitId":"kevinxx88"},"content":"                    separatingLine();","lastModifiedDate":"2022-03-12"},{"lineNumber":117,"author":{"gitId":"kevinxx88"},"content":"                }","lastModifiedDate":"2022-03-12"},{"lineNumber":118,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-04-13"},{"lineNumber":119,"author":{"gitId":"kevinxx88"},"content":"                catch (IOException e) {","lastModifiedDate":"2022-04-13"},{"lineNumber":120,"author":{"gitId":"kevinxx88"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2022-04-13"},{"lineNumber":121,"author":{"gitId":"kevinxx88"},"content":"                }","lastModifiedDate":"2022-04-13"},{"lineNumber":122,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-04-13"},{"lineNumber":123,"author":{"gitId":"kevinxx88"},"content":"            }","lastModifiedDate":"2022-02-13"},{"lineNumber":124,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":125,"author":{"gitId":"kevinxx88"},"content":"            //Add Deadline execution (with error handling):","lastModifiedDate":"2022-03-12"},{"lineNumber":126,"author":{"gitId":"kevinxx88"},"content":"            else if (line.contains(\"deadline\")){","lastModifiedDate":"2022-03-05"},{"lineNumber":127,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":128,"author":{"gitId":"kevinxx88"},"content":"                String[] lineSplit \u003d line.split(\" \");","lastModifiedDate":"2022-03-12"},{"lineNumber":129,"author":{"gitId":"kevinxx88"},"content":"                String[] lineSplit2 \u003d line.split(\"/\");","lastModifiedDate":"2022-03-12"},{"lineNumber":130,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":131,"author":{"gitId":"kevinxx88"},"content":"                try {","lastModifiedDate":"2022-03-12"},{"lineNumber":132,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":133,"author":{"gitId":"kevinxx88"},"content":"                    // after deadline no input of task description:","lastModifiedDate":"2022-03-12"},{"lineNumber":134,"author":{"gitId":"kevinxx88"},"content":"                    if (lineSplit.length \u003c 2) {","lastModifiedDate":"2022-03-12"},{"lineNumber":135,"author":{"gitId":"kevinxx88"},"content":"                        throw new DukeException(\"Invalid Input (Deadline Description)\");","lastModifiedDate":"2022-03-12"},{"lineNumber":136,"author":{"gitId":"kevinxx88"},"content":"                    }","lastModifiedDate":"2022-03-12"},{"lineNumber":137,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":138,"author":{"gitId":"kevinxx88"},"content":"                    // missing of \"/by\" for deadline input:","lastModifiedDate":"2022-03-12"},{"lineNumber":139,"author":{"gitId":"kevinxx88"},"content":"                    if (!line.contains(\"/by\")){","lastModifiedDate":"2022-03-12"},{"lineNumber":140,"author":{"gitId":"kevinxx88"},"content":"                        throw new DukeException(\"Missing Deadline\");","lastModifiedDate":"2022-03-12"},{"lineNumber":141,"author":{"gitId":"kevinxx88"},"content":"                    }","lastModifiedDate":"2022-03-12"},{"lineNumber":142,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":143,"author":{"gitId":"kevinxx88"},"content":"                    String[] lineSplit3 \u003d lineSplit2[1].split(\" \");","lastModifiedDate":"2022-03-12"},{"lineNumber":144,"author":{"gitId":"kevinxx88"},"content":"                    // no spacing after \"deadline\" and \"/by\":","lastModifiedDate":"2022-03-12"},{"lineNumber":145,"author":{"gitId":"kevinxx88"},"content":"                    if (lineSplit[0].length() \u003e 8 || lineSplit3[0].length() \u003e 3) {","lastModifiedDate":"2022-03-12"},{"lineNumber":146,"author":{"gitId":"kevinxx88"},"content":"                        throw new DukeException(\"Invalid Format (Deadline)\");","lastModifiedDate":"2022-03-12"},{"lineNumber":147,"author":{"gitId":"kevinxx88"},"content":"                    }","lastModifiedDate":"2022-03-12"},{"lineNumber":148,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":149,"author":{"gitId":"kevinxx88"},"content":"                    //Find the index number of \u0027/\u0027","lastModifiedDate":"2022-03-05"},{"lineNumber":150,"author":{"gitId":"kevinxx88"},"content":"                    int index3 \u003d line.indexOf(\"/\");","lastModifiedDate":"2022-03-05"},{"lineNumber":151,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":152,"author":{"gitId":"kevinxx88"},"content":"                    //Create Date and Time Variables","lastModifiedDate":"2022-04-14"},{"lineNumber":153,"author":{"gitId":"kevinxx88"},"content":"                    DateTimeFormatter Std \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2022-04-14"},{"lineNumber":154,"author":{"gitId":"kevinxx88"},"content":"                    String UI \u003d line.substring(index3+4);","lastModifiedDate":"2022-04-14"},{"lineNumber":155,"author":{"gitId":"kevinxx88"},"content":"                    LocalDateTime UI_datetime \u003d LocalDateTime.parse(UI, Std);","lastModifiedDate":"2022-04-14"},{"lineNumber":156,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-04-14"},{"lineNumber":157,"author":{"gitId":"kevinxx88"},"content":"                    String Format \u003d UI_datetime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mma\"));","lastModifiedDate":"2022-04-14"},{"lineNumber":158,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-04-14"},{"lineNumber":159,"author":{"gitId":"kevinxx88"},"content":"                    //Initiate Deadline Class","lastModifiedDate":"2022-03-05"},{"lineNumber":160,"author":{"gitId":"kevinxx88"},"content":"                    taskIcon.add(new Deadline(line.substring(9, index3-1), Format));","lastModifiedDate":"2022-04-14"},{"lineNumber":161,"author":{"gitId":"kevinxx88"},"content":"                    System.out.println(\"Hey Boss! Got it. I\u0027ve added this task for you:\");","lastModifiedDate":"2022-03-05"},{"lineNumber":162,"author":{"gitId":"kevinxx88"},"content":"                    System.out.println(taskIcon.get(taskIcon.size()-1).toString());","lastModifiedDate":"2022-03-20"},{"lineNumber":163,"author":{"gitId":"kevinxx88"},"content":"                    // counter++;","lastModifiedDate":"2022-03-20"},{"lineNumber":164,"author":{"gitId":"kevinxx88"},"content":"                    System.out.println(\"Now you have \" + (taskIcon.size()) + \" tasks in total within the list.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":165,"author":{"gitId":"kevinxx88"},"content":"                    saveFile(\"outputFiles/duke.txt\");","lastModifiedDate":"2022-04-13"},{"lineNumber":166,"author":{"gitId":"kevinxx88"},"content":"                    separatingLine();","lastModifiedDate":"2022-03-12"},{"lineNumber":167,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":168,"author":{"gitId":"kevinxx88"},"content":"                }","lastModifiedDate":"2022-03-05"},{"lineNumber":169,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":170,"author":{"gitId":"kevinxx88"},"content":"                catch (DukeException e) {","lastModifiedDate":"2022-03-12"},{"lineNumber":171,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":172,"author":{"gitId":"kevinxx88"},"content":"                    if (e.getError().equals(\"Invalid Input (Deadline Description)\")) {","lastModifiedDate":"2022-03-12"},{"lineNumber":173,"author":{"gitId":"kevinxx88"},"content":"                        System.out.println(\"SORRY Boss! You have entered an invalid input (Missing Task Descriptions)!\\n\" +","lastModifiedDate":"2022-03-12"},{"lineNumber":174,"author":{"gitId":"kevinxx88"},"content":"                                \"Please enter the task description after \u0027deadline\u0027 for this entry!\\n\" +","lastModifiedDate":"2022-03-12"},{"lineNumber":175,"author":{"gitId":"kevinxx88"},"content":"                                \"Kindly try again, Boss!\");","lastModifiedDate":"2022-03-12"},{"lineNumber":176,"author":{"gitId":"kevinxx88"},"content":"                        separatingLine();","lastModifiedDate":"2022-03-12"},{"lineNumber":177,"author":{"gitId":"kevinxx88"},"content":"                    }","lastModifiedDate":"2022-03-12"},{"lineNumber":178,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":179,"author":{"gitId":"kevinxx88"},"content":"                    if (e.getError().equals(\"Missing Deadline\")) {","lastModifiedDate":"2022-03-12"},{"lineNumber":180,"author":{"gitId":"kevinxx88"},"content":"                        System.out.println(\"SORRY Boss! You have entered an invalid input (Missing Deadline)!\\n\" +","lastModifiedDate":"2022-03-12"},{"lineNumber":181,"author":{"gitId":"kevinxx88"},"content":"                                \"Please enter the task deadline with space before and after \u0027/by\u0027 for this entry!\\n\" +","lastModifiedDate":"2022-03-12"},{"lineNumber":182,"author":{"gitId":"kevinxx88"},"content":"                                \"Example: \u0027deadline clean house /by 22/03/2022 2359\u0027\\n\" +","lastModifiedDate":"2022-04-14"},{"lineNumber":183,"author":{"gitId":"kevinxx88"},"content":"                                \"Kindly try again, Boss!\");","lastModifiedDate":"2022-03-12"},{"lineNumber":184,"author":{"gitId":"kevinxx88"},"content":"                        separatingLine();","lastModifiedDate":"2022-03-12"},{"lineNumber":185,"author":{"gitId":"kevinxx88"},"content":"                    }","lastModifiedDate":"2022-03-12"},{"lineNumber":186,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":187,"author":{"gitId":"kevinxx88"},"content":"                    if (e.getError().equals(\"Invalid Format (Deadline)\")) {","lastModifiedDate":"2022-03-12"},{"lineNumber":188,"author":{"gitId":"kevinxx88"},"content":"                        System.out.println(\"SORRY Boss! You have entered an invalid input (Wrong Format)!\\n\" +","lastModifiedDate":"2022-03-12"},{"lineNumber":189,"author":{"gitId":"kevinxx88"},"content":"                                \"Please enter the deadline description \u0026 deadline date with space after \u0027deadline\u0027 \u0026 \u0027/by\u0027 for this entry!\\n\" +","lastModifiedDate":"2022-03-12"},{"lineNumber":190,"author":{"gitId":"kevinxx88"},"content":"                                \"Example: \u0027deadline clean house /by 22/03/2022 2359\u0027\\n\" +","lastModifiedDate":"2022-04-14"},{"lineNumber":191,"author":{"gitId":"kevinxx88"},"content":"                                \"Kindly try again, Boss!\");","lastModifiedDate":"2022-03-12"},{"lineNumber":192,"author":{"gitId":"kevinxx88"},"content":"                        separatingLine();","lastModifiedDate":"2022-03-12"},{"lineNumber":193,"author":{"gitId":"kevinxx88"},"content":"                    }","lastModifiedDate":"2022-03-12"},{"lineNumber":194,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":195,"author":{"gitId":"kevinxx88"},"content":"                }","lastModifiedDate":"2022-03-12"},{"lineNumber":196,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":197,"author":{"gitId":"kevinxx88"},"content":"                catch (IOException e) {","lastModifiedDate":"2022-04-13"},{"lineNumber":198,"author":{"gitId":"kevinxx88"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2022-04-13"},{"lineNumber":199,"author":{"gitId":"kevinxx88"},"content":"                }","lastModifiedDate":"2022-04-13"},{"lineNumber":200,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-04-13"},{"lineNumber":201,"author":{"gitId":"kevinxx88"},"content":"                catch (DateTimeParseException e) {","lastModifiedDate":"2022-04-14"},{"lineNumber":202,"author":{"gitId":"kevinxx88"},"content":"                    System.out.println(\"OOPS! Sorry, Boss!!\\n\" +","lastModifiedDate":"2022-04-14"},{"lineNumber":203,"author":{"gitId":"kevinxx88"},"content":"                            \"You have entered the wrong format for the \u0027Date and Time\u0027\\n\" +","lastModifiedDate":"2022-04-14"},{"lineNumber":204,"author":{"gitId":"kevinxx88"},"content":"                            \"Please enter the date and time in the format as: DD/MM/YYYY HHmm \\n\" +","lastModifiedDate":"2022-04-14"},{"lineNumber":205,"author":{"gitId":"kevinxx88"},"content":"                            \"Example: 22/03/2022 2359\");","lastModifiedDate":"2022-04-14"},{"lineNumber":206,"author":{"gitId":"kevinxx88"},"content":"                    separatingLine();","lastModifiedDate":"2022-04-14"},{"lineNumber":207,"author":{"gitId":"kevinxx88"},"content":"                }","lastModifiedDate":"2022-04-14"},{"lineNumber":208,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-04-14"},{"lineNumber":209,"author":{"gitId":"kevinxx88"},"content":"            }","lastModifiedDate":"2022-03-12"},{"lineNumber":210,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":211,"author":{"gitId":"kevinxx88"},"content":"            //Add Tod0 execution (with error handling):","lastModifiedDate":"2022-03-12"},{"lineNumber":212,"author":{"gitId":"kevinxx88"},"content":"            else if (line.contains(\"todo\")){","lastModifiedDate":"2022-03-05"},{"lineNumber":213,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":214,"author":{"gitId":"kevinxx88"},"content":"                String[] TestInput \u003d line.split(\" \");","lastModifiedDate":"2022-03-12"},{"lineNumber":215,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":216,"author":{"gitId":"kevinxx88"},"content":"                //Catch Error for T0do Class","lastModifiedDate":"2022-03-12"},{"lineNumber":217,"author":{"gitId":"kevinxx88"},"content":"                try {","lastModifiedDate":"2022-03-12"},{"lineNumber":218,"author":{"gitId":"kevinxx88"},"content":"                    // after \u0027tod0\u0027 no input of task description:","lastModifiedDate":"2022-03-12"},{"lineNumber":219,"author":{"gitId":"kevinxx88"},"content":"                    if (TestInput.length \u003c 2) {","lastModifiedDate":"2022-03-12"},{"lineNumber":220,"author":{"gitId":"kevinxx88"},"content":"                        throw new DukeException(\"Invalid Input (todo)\");","lastModifiedDate":"2022-03-12"},{"lineNumber":221,"author":{"gitId":"kevinxx88"},"content":"                    }","lastModifiedDate":"2022-03-12"},{"lineNumber":222,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":223,"author":{"gitId":"kevinxx88"},"content":"                    // after \u0027tod0\u0027 no spacing:","lastModifiedDate":"2022-03-12"},{"lineNumber":224,"author":{"gitId":"kevinxx88"},"content":"                    if (TestInput[0].length() \u003e 4) {","lastModifiedDate":"2022-03-12"},{"lineNumber":225,"author":{"gitId":"kevinxx88"},"content":"                        throw new DukeException(\"Invalid Format (todo)\");","lastModifiedDate":"2022-03-12"},{"lineNumber":226,"author":{"gitId":"kevinxx88"},"content":"                    }","lastModifiedDate":"2022-03-12"},{"lineNumber":227,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":228,"author":{"gitId":"kevinxx88"},"content":"                    //Initiate Tod0 Class","lastModifiedDate":"2022-03-05"},{"lineNumber":229,"author":{"gitId":"kevinxx88"},"content":"                    taskIcon.add(new Todo(line.substring(5)));","lastModifiedDate":"2022-03-20"},{"lineNumber":230,"author":{"gitId":"kevinxx88"},"content":"                    System.out.println(\"Hey Boss! Got it. I\u0027ve added this task for you:\");","lastModifiedDate":"2022-03-05"},{"lineNumber":231,"author":{"gitId":"kevinxx88"},"content":"                    System.out.println(taskIcon.get(taskIcon.size()-1).toString());","lastModifiedDate":"2022-03-20"},{"lineNumber":232,"author":{"gitId":"kevinxx88"},"content":"                    // counter++;","lastModifiedDate":"2022-03-20"},{"lineNumber":233,"author":{"gitId":"kevinxx88"},"content":"                    System.out.println(\"Now you have \" + (taskIcon.size()) + \" tasks in total within the list.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":234,"author":{"gitId":"kevinxx88"},"content":"                    saveFile(\"outputFiles/duke.txt\");","lastModifiedDate":"2022-04-13"},{"lineNumber":235,"author":{"gitId":"kevinxx88"},"content":"                    separatingLine();","lastModifiedDate":"2022-03-12"},{"lineNumber":236,"author":{"gitId":"kevinxx88"},"content":"                }","lastModifiedDate":"2022-03-12"},{"lineNumber":237,"author":{"gitId":"kevinxx88"},"content":"                catch (DukeException e) {","lastModifiedDate":"2022-03-12"},{"lineNumber":238,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":239,"author":{"gitId":"kevinxx88"},"content":"                    if (e.getError().equals(\"Invalid Input (todo)\")) {","lastModifiedDate":"2022-03-12"},{"lineNumber":240,"author":{"gitId":"kevinxx88"},"content":"                        System.out.println(\"SORRY Boss! You have entered an invalid input (Missing Descriptions)!\\n\" +","lastModifiedDate":"2022-03-12"},{"lineNumber":241,"author":{"gitId":"kevinxx88"},"content":"                                \"Please enter the task description after \u0027todo\u0027 for this entry!\\n\" +","lastModifiedDate":"2022-03-12"},{"lineNumber":242,"author":{"gitId":"kevinxx88"},"content":"                                \"Kindly try again, Boss!\");","lastModifiedDate":"2022-03-12"},{"lineNumber":243,"author":{"gitId":"kevinxx88"},"content":"                        separatingLine();","lastModifiedDate":"2022-03-12"},{"lineNumber":244,"author":{"gitId":"kevinxx88"},"content":"                    }","lastModifiedDate":"2022-03-12"},{"lineNumber":245,"author":{"gitId":"kevinxx88"},"content":"                    if (e.getError().equals(\"Invalid Format (todo)\")) {","lastModifiedDate":"2022-03-12"},{"lineNumber":246,"author":{"gitId":"kevinxx88"},"content":"                        System.out.println(\"SORRY Boss! You have entered an invalid input (Wrong Format)!\\n\" +","lastModifiedDate":"2022-03-12"},{"lineNumber":247,"author":{"gitId":"kevinxx88"},"content":"                                \"Please enter the task description with space after \u0027todo\u0027 for this entry!\\n\" +","lastModifiedDate":"2022-03-12"},{"lineNumber":248,"author":{"gitId":"kevinxx88"},"content":"                                \"Example: \u0027todo clean house\u0027\\n\" +","lastModifiedDate":"2022-03-12"},{"lineNumber":249,"author":{"gitId":"kevinxx88"},"content":"                                \"Kindly try again, Boss!\");","lastModifiedDate":"2022-03-12"},{"lineNumber":250,"author":{"gitId":"kevinxx88"},"content":"                        separatingLine();","lastModifiedDate":"2022-03-12"},{"lineNumber":251,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":252,"author":{"gitId":"kevinxx88"},"content":"                    }","lastModifiedDate":"2022-03-12"},{"lineNumber":253,"author":{"gitId":"kevinxx88"},"content":"                }","lastModifiedDate":"2022-03-12"},{"lineNumber":254,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-04-13"},{"lineNumber":255,"author":{"gitId":"kevinxx88"},"content":"                catch (IOException e) {","lastModifiedDate":"2022-04-13"},{"lineNumber":256,"author":{"gitId":"kevinxx88"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2022-04-13"},{"lineNumber":257,"author":{"gitId":"kevinxx88"},"content":"                }","lastModifiedDate":"2022-04-13"},{"lineNumber":258,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-04-13"},{"lineNumber":259,"author":{"gitId":"kevinxx88"},"content":"            }","lastModifiedDate":"2022-03-05"},{"lineNumber":260,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":261,"author":{"gitId":"kevinxx88"},"content":"            //Add Event Execution (with error handling):","lastModifiedDate":"2022-03-20"},{"lineNumber":262,"author":{"gitId":"kevinxx88"},"content":"            else if (line.contains(\"event\")){","lastModifiedDate":"2022-03-05"},{"lineNumber":263,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":264,"author":{"gitId":"kevinxx88"},"content":"                try {","lastModifiedDate":"2022-03-12"},{"lineNumber":265,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":266,"author":{"gitId":"kevinxx88"},"content":"                    String[] lineSplit \u003d line.split(\" \");","lastModifiedDate":"2022-03-12"},{"lineNumber":267,"author":{"gitId":"kevinxx88"},"content":"                    String[] lineSplit2 \u003d line.split(\"/\");","lastModifiedDate":"2022-03-12"},{"lineNumber":268,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":269,"author":{"gitId":"kevinxx88"},"content":"                    // after event no input of task description:","lastModifiedDate":"2022-03-12"},{"lineNumber":270,"author":{"gitId":"kevinxx88"},"content":"                    if (lineSplit.length \u003c 2) {","lastModifiedDate":"2022-03-12"},{"lineNumber":271,"author":{"gitId":"kevinxx88"},"content":"                        throw new DukeException(\"Invalid Input (Event Description)\");","lastModifiedDate":"2022-03-12"},{"lineNumber":272,"author":{"gitId":"kevinxx88"},"content":"                    }","lastModifiedDate":"2022-03-12"},{"lineNumber":273,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":274,"author":{"gitId":"kevinxx88"},"content":"                    // missing of \"/at\" for event input:","lastModifiedDate":"2022-03-12"},{"lineNumber":275,"author":{"gitId":"kevinxx88"},"content":"                    if (!line.contains(\"/at\")){","lastModifiedDate":"2022-03-12"},{"lineNumber":276,"author":{"gitId":"kevinxx88"},"content":"                        throw new DukeException(\"Missing Event Date/Period\");","lastModifiedDate":"2022-03-12"},{"lineNumber":277,"author":{"gitId":"kevinxx88"},"content":"                    }","lastModifiedDate":"2022-03-12"},{"lineNumber":278,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":279,"author":{"gitId":"kevinxx88"},"content":"                    String[] lineSplit3 \u003d lineSplit2[1].split(\" \");","lastModifiedDate":"2022-03-12"},{"lineNumber":280,"author":{"gitId":"kevinxx88"},"content":"                    // no spacing after \"event\" and \"/at\":","lastModifiedDate":"2022-03-12"},{"lineNumber":281,"author":{"gitId":"kevinxx88"},"content":"                    if (lineSplit[0].length() \u003e 5 || lineSplit3[0].length() \u003e 3) {","lastModifiedDate":"2022-03-12"},{"lineNumber":282,"author":{"gitId":"kevinxx88"},"content":"                        throw new DukeException(\"Invalid Format (Event)\");","lastModifiedDate":"2022-03-12"},{"lineNumber":283,"author":{"gitId":"kevinxx88"},"content":"                    }","lastModifiedDate":"2022-03-12"},{"lineNumber":284,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":285,"author":{"gitId":"kevinxx88"},"content":"                    //Find Position of \u0027/\u0027","lastModifiedDate":"2022-03-05"},{"lineNumber":286,"author":{"gitId":"kevinxx88"},"content":"                    int index4 \u003d line.indexOf(\"/\");","lastModifiedDate":"2022-03-05"},{"lineNumber":287,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":288,"author":{"gitId":"kevinxx88"},"content":"                    DateTimeFormatter Std \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2022-04-14"},{"lineNumber":289,"author":{"gitId":"kevinxx88"},"content":"                    String UI \u003d line.substring(index4+4);","lastModifiedDate":"2022-04-14"},{"lineNumber":290,"author":{"gitId":"kevinxx88"},"content":"                    LocalDateTime UI_datetime \u003d LocalDateTime.parse(UI, Std);","lastModifiedDate":"2022-04-14"},{"lineNumber":291,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-04-14"},{"lineNumber":292,"author":{"gitId":"kevinxx88"},"content":"                    String Format \u003d UI_datetime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mma\"));","lastModifiedDate":"2022-04-14"},{"lineNumber":293,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-04-14"},{"lineNumber":294,"author":{"gitId":"kevinxx88"},"content":"                    //Initiate Event Class","lastModifiedDate":"2022-03-05"},{"lineNumber":295,"author":{"gitId":"kevinxx88"},"content":"                    taskIcon.add(new Event(line.substring(6, index4-1), Format));","lastModifiedDate":"2022-04-14"},{"lineNumber":296,"author":{"gitId":"kevinxx88"},"content":"                    System.out.println(\"Hey Boss! Got it. I\u0027ve added this task for you:\");","lastModifiedDate":"2022-03-05"},{"lineNumber":297,"author":{"gitId":"kevinxx88"},"content":"                    System.out.println(taskIcon.get(taskIcon.size()-1).toString());","lastModifiedDate":"2022-03-20"},{"lineNumber":298,"author":{"gitId":"kevinxx88"},"content":"                    // counter++;","lastModifiedDate":"2022-03-20"},{"lineNumber":299,"author":{"gitId":"kevinxx88"},"content":"                    System.out.println(\"Now you have \" + (taskIcon.size()) + \" tasks in total within the list.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":300,"author":{"gitId":"kevinxx88"},"content":"                    saveFile(\"outputFiles/duke.txt\");","lastModifiedDate":"2022-04-13"},{"lineNumber":301,"author":{"gitId":"kevinxx88"},"content":"                    separatingLine();","lastModifiedDate":"2022-03-12"},{"lineNumber":302,"author":{"gitId":"kevinxx88"},"content":"                }","lastModifiedDate":"2022-03-12"},{"lineNumber":303,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":304,"author":{"gitId":"kevinxx88"},"content":"                catch (DukeException e) {","lastModifiedDate":"2022-03-12"},{"lineNumber":305,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":306,"author":{"gitId":"kevinxx88"},"content":"                    if (e.getError().equals(\"Invalid Input (Event Description)\")) {","lastModifiedDate":"2022-03-12"},{"lineNumber":307,"author":{"gitId":"kevinxx88"},"content":"                        System.out.println(\"SORRY Boss! You have entered an invalid input (Missing Task Descriptions)!\\n\" +","lastModifiedDate":"2022-03-12"},{"lineNumber":308,"author":{"gitId":"kevinxx88"},"content":"                                \"Please enter the task description after \u0027event\u0027 for this entry!\\n\" +","lastModifiedDate":"2022-03-12"},{"lineNumber":309,"author":{"gitId":"kevinxx88"},"content":"                                \"Kindly try again, Boss!\");","lastModifiedDate":"2022-03-12"},{"lineNumber":310,"author":{"gitId":"kevinxx88"},"content":"                        separatingLine();","lastModifiedDate":"2022-03-12"},{"lineNumber":311,"author":{"gitId":"kevinxx88"},"content":"                    }","lastModifiedDate":"2022-03-12"},{"lineNumber":312,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":313,"author":{"gitId":"kevinxx88"},"content":"                    if (e.getError().equals(\"Missing Event Date/Period\")) {","lastModifiedDate":"2022-03-12"},{"lineNumber":314,"author":{"gitId":"kevinxx88"},"content":"                        System.out.println(\"SORRY Boss! You have entered an invalid input (Missing Date/Period)!\\n\" +","lastModifiedDate":"2022-03-12"},{"lineNumber":315,"author":{"gitId":"kevinxx88"},"content":"                                \"Please enter the event date/period with space before and after \u0027/at\u0027 for this entry!\\n\" +","lastModifiedDate":"2022-03-12"},{"lineNumber":316,"author":{"gitId":"kevinxx88"},"content":"                                \"Example: \u0027event clean house /at 22/03/2022 2359\u0027\\n\" +","lastModifiedDate":"2022-04-14"},{"lineNumber":317,"author":{"gitId":"kevinxx88"},"content":"                                \"Kindly try again, Boss!\");","lastModifiedDate":"2022-03-12"},{"lineNumber":318,"author":{"gitId":"kevinxx88"},"content":"                        separatingLine();","lastModifiedDate":"2022-03-12"},{"lineNumber":319,"author":{"gitId":"kevinxx88"},"content":"                    }","lastModifiedDate":"2022-03-12"},{"lineNumber":320,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":321,"author":{"gitId":"kevinxx88"},"content":"                    if (e.getError().equals(\"Invalid Format (Event)\")) {","lastModifiedDate":"2022-03-12"},{"lineNumber":322,"author":{"gitId":"kevinxx88"},"content":"                        System.out.println(\"SORRY Boss! You have entered an invalid input (Wrong Format)!\\n\" +","lastModifiedDate":"2022-03-12"},{"lineNumber":323,"author":{"gitId":"kevinxx88"},"content":"                                \"Please enter the event description \u0026 event date/period with space after \u0027event\u0027 \u0026 \u0027/at\u0027 for this entry!\\n\" +","lastModifiedDate":"2022-03-12"},{"lineNumber":324,"author":{"gitId":"kevinxx88"},"content":"                                \"Example: \u0027event clean house /at 22/03/2022 2359\u0027\\n\" +","lastModifiedDate":"2022-04-14"},{"lineNumber":325,"author":{"gitId":"kevinxx88"},"content":"                                \"Kindly try again, Boss!\");","lastModifiedDate":"2022-03-12"},{"lineNumber":326,"author":{"gitId":"kevinxx88"},"content":"                        separatingLine();","lastModifiedDate":"2022-03-12"},{"lineNumber":327,"author":{"gitId":"kevinxx88"},"content":"                    }","lastModifiedDate":"2022-03-12"},{"lineNumber":328,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":329,"author":{"gitId":"kevinxx88"},"content":"                }","lastModifiedDate":"2022-03-12"},{"lineNumber":330,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":331,"author":{"gitId":"kevinxx88"},"content":"                catch (IOException e) {","lastModifiedDate":"2022-04-13"},{"lineNumber":332,"author":{"gitId":"kevinxx88"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2022-04-13"},{"lineNumber":333,"author":{"gitId":"kevinxx88"},"content":"                }","lastModifiedDate":"2022-04-13"},{"lineNumber":334,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-04-13"},{"lineNumber":335,"author":{"gitId":"kevinxx88"},"content":"                catch (DateTimeParseException e) {","lastModifiedDate":"2022-04-14"},{"lineNumber":336,"author":{"gitId":"kevinxx88"},"content":"                    System.out.println(\"OOPS! Sorry, Boss!!\\n\" +","lastModifiedDate":"2022-04-14"},{"lineNumber":337,"author":{"gitId":"kevinxx88"},"content":"                            \"You have entered the wrong format for the \u0027Date and Time\u0027\\n\" +","lastModifiedDate":"2022-04-14"},{"lineNumber":338,"author":{"gitId":"kevinxx88"},"content":"                            \"Please enter the date and time in the format as: DD/MM/YYYY HHmm \\n\" +","lastModifiedDate":"2022-04-14"},{"lineNumber":339,"author":{"gitId":"kevinxx88"},"content":"                            \"Example: 22/03/2022 2359\");","lastModifiedDate":"2022-04-14"},{"lineNumber":340,"author":{"gitId":"kevinxx88"},"content":"                    separatingLine();","lastModifiedDate":"2022-04-14"},{"lineNumber":341,"author":{"gitId":"kevinxx88"},"content":"                }","lastModifiedDate":"2022-04-14"},{"lineNumber":342,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-04-14"},{"lineNumber":343,"author":{"gitId":"kevinxx88"},"content":"            }","lastModifiedDate":"2022-03-05"},{"lineNumber":344,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":345,"author":{"gitId":"kevinxx88"},"content":"            // add delete function (with error handling):","lastModifiedDate":"2022-03-20"},{"lineNumber":346,"author":{"gitId":"kevinxx88"},"content":"            else if (line.contains(\"delete\")) {","lastModifiedDate":"2022-03-20"},{"lineNumber":347,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":348,"author":{"gitId":"kevinxx88"},"content":"                try {","lastModifiedDate":"2022-03-20"},{"lineNumber":349,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":350,"author":{"gitId":"kevinxx88"},"content":"                    // -1 as Array starts from 0","lastModifiedDate":"2022-03-20"},{"lineNumber":351,"author":{"gitId":"kevinxx88"},"content":"                    int delete \u003d Integer.parseInt(line.substring(7)) - 1;","lastModifiedDate":"2022-03-20"},{"lineNumber":352,"author":{"gitId":"kevinxx88"},"content":"                    Task del \u003d taskIcon.get(delete);","lastModifiedDate":"2022-03-20"},{"lineNumber":353,"author":{"gitId":"kevinxx88"},"content":"                    taskIcon.remove(delete);","lastModifiedDate":"2022-03-20"},{"lineNumber":354,"author":{"gitId":"kevinxx88"},"content":"                    System.out.println(\"Hey Boss! Got it. I\u0027ve deleted this task for you:\");","lastModifiedDate":"2022-03-20"},{"lineNumber":355,"author":{"gitId":"kevinxx88"},"content":"                    System.out.println(del.toString());","lastModifiedDate":"2022-03-20"},{"lineNumber":356,"author":{"gitId":"kevinxx88"},"content":"                    System.out.println(\"Now you have \" + taskIcon.size() + \" tasks in the list.\");","lastModifiedDate":"2022-03-20"},{"lineNumber":357,"author":{"gitId":"kevinxx88"},"content":"                    saveFile(\"outputFiles/duke.txt\");","lastModifiedDate":"2022-04-13"},{"lineNumber":358,"author":{"gitId":"kevinxx88"},"content":"                    separatingLine();","lastModifiedDate":"2022-04-13"},{"lineNumber":359,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":360,"author":{"gitId":"kevinxx88"},"content":"                }","lastModifiedDate":"2022-03-20"},{"lineNumber":361,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":362,"author":{"gitId":"kevinxx88"},"content":"                catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-03-20"},{"lineNumber":363,"author":{"gitId":"kevinxx88"},"content":"                    System.out.println(\"SORRY Boss! You do not have Task No. \" +","lastModifiedDate":"2022-03-20"},{"lineNumber":364,"author":{"gitId":"kevinxx88"},"content":"                            (Integer.parseInt(line.substring(7))) +","lastModifiedDate":"2022-03-20"},{"lineNumber":365,"author":{"gitId":"kevinxx88"},"content":"                            \" in your task list!\\n\" +","lastModifiedDate":"2022-03-20"},{"lineNumber":366,"author":{"gitId":"kevinxx88"},"content":"                            \"You only have a total of \" + (taskIcon.size()) + \" Task(s) in your List!\\n\" +","lastModifiedDate":"2022-03-20"},{"lineNumber":367,"author":{"gitId":"kevinxx88"},"content":"                            \"Please only enter an existing task number again, Boss!\");","lastModifiedDate":"2022-03-20"},{"lineNumber":368,"author":{"gitId":"kevinxx88"},"content":"                    separatingLine();","lastModifiedDate":"2022-02-12"},{"lineNumber":369,"author":{"gitId":"kevinxx88"},"content":"                }","lastModifiedDate":"2022-03-20"},{"lineNumber":370,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":371,"author":{"gitId":"kevinxx88"},"content":"                catch (IOException e) {","lastModifiedDate":"2022-04-13"},{"lineNumber":372,"author":{"gitId":"kevinxx88"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2022-04-13"},{"lineNumber":373,"author":{"gitId":"kevinxx88"},"content":"                }","lastModifiedDate":"2022-04-13"},{"lineNumber":374,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-04-13"},{"lineNumber":375,"author":{"gitId":"kevinxx88"},"content":"            }","lastModifiedDate":"2022-03-20"},{"lineNumber":376,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-20"},{"lineNumber":377,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-04-13"},{"lineNumber":378,"author":{"gitId":"kevinxx88"},"content":"            //Add user input to task list:","lastModifiedDate":"2022-03-20"},{"lineNumber":379,"author":{"gitId":"kevinxx88"},"content":"            else {","lastModifiedDate":"2022-04-13"},{"lineNumber":380,"author":{"gitId":"kevinxx88"},"content":"              separatingLine();","lastModifiedDate":"2022-04-13"},{"lineNumber":381,"author":{"gitId":"kevinxx88"},"content":"              System.out.println(\"Opps! Sorry, BOSS! But I do not know what it means!\\n\" +","lastModifiedDate":"2022-04-13"},{"lineNumber":382,"author":{"gitId":"kevinxx88"},"content":"                      \"Please enter the valid task description with pre-fix as below:\\n\" +","lastModifiedDate":"2022-04-13"},{"lineNumber":383,"author":{"gitId":"kevinxx88"},"content":"                      \"\u0027todo\u0027 or \u0027deadline\u0027 or \u0027event\u0027 or \u0027delete\u0027\\n\" +","lastModifiedDate":"2022-04-13"},{"lineNumber":384,"author":{"gitId":"kevinxx88"},"content":"                      \"Please kindly try again with the above pre-fix, Boss!\");","lastModifiedDate":"2022-04-13"},{"lineNumber":385,"author":{"gitId":"kevinxx88"},"content":"              separatingLine();","lastModifiedDate":"2022-04-13"},{"lineNumber":386,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-04-13"},{"lineNumber":387,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-04-13"},{"lineNumber":388,"author":{"gitId":"kevinxx88"},"content":"            }","lastModifiedDate":"2022-04-13"},{"lineNumber":389,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-04-13"},{"lineNumber":390,"author":{"gitId":"kevinxx88"},"content":"        }","lastModifiedDate":"2022-04-13"},{"lineNumber":391,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-04-13"},{"lineNumber":392,"author":{"gitId":"kevinxx88"},"content":"    }","lastModifiedDate":"2022-04-13"},{"lineNumber":393,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-04-13"},{"lineNumber":394,"author":{"gitId":"kevinxx88"},"content":"    //Save the File to Data Folder","lastModifiedDate":"2022-04-13"},{"lineNumber":395,"author":{"gitId":"kevinxx88"},"content":"    public static void saveFile(String myOutput) throws IOException {","lastModifiedDate":"2022-04-13"},{"lineNumber":396,"author":{"gitId":"kevinxx88"},"content":"        FileWriter fw \u003d new FileWriter(myOutput);","lastModifiedDate":"2022-04-13"},{"lineNumber":397,"author":{"gitId":"kevinxx88"},"content":"        for (Task t : taskIcon){","lastModifiedDate":"2022-04-13"},{"lineNumber":398,"author":{"gitId":"kevinxx88"},"content":"            fw.write(t + System.lineSeparator());","lastModifiedDate":"2022-04-13"},{"lineNumber":399,"author":{"gitId":"kevinxx88"},"content":"        }","lastModifiedDate":"2022-04-13"},{"lineNumber":400,"author":{"gitId":"kevinxx88"},"content":"        fw.close();","lastModifiedDate":"2022-04-13"},{"lineNumber":401,"author":{"gitId":"kevinxx88"},"content":"    }","lastModifiedDate":"2022-04-13"},{"lineNumber":402,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-04-13"},{"lineNumber":403,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":404,"author":{"gitId":"kevinxx88"},"content":"    //Read the File from Data Folder","lastModifiedDate":"2022-04-13"},{"lineNumber":405,"author":{"gitId":"kevinxx88"},"content":"    public static void readFile(String myOutput) throws FileNotFoundException {","lastModifiedDate":"2022-04-13"},{"lineNumber":406,"author":{"gitId":"kevinxx88"},"content":"        File f \u003d new File(myOutput);","lastModifiedDate":"2022-04-13"},{"lineNumber":407,"author":{"gitId":"kevinxx88"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2022-04-13"},{"lineNumber":408,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":409,"author":{"gitId":"kevinxx88"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2022-04-13"},{"lineNumber":410,"author":{"gitId":"kevinxx88"},"content":"            String text \u003d s.nextLine();","lastModifiedDate":"2022-04-13"},{"lineNumber":411,"author":{"gitId":"kevinxx88"},"content":"            //Read [T] from File and Update to ArrayList","lastModifiedDate":"2022-04-13"},{"lineNumber":412,"author":{"gitId":"kevinxx88"},"content":"            if (text.contains(\"[T]\")) {","lastModifiedDate":"2022-04-13"},{"lineNumber":413,"author":{"gitId":"kevinxx88"},"content":"                String Todo \u003d text.substring(23);","lastModifiedDate":"2022-04-13"},{"lineNumber":414,"author":{"gitId":"kevinxx88"},"content":"                taskIcon.add(new Todo(Todo));","lastModifiedDate":"2022-04-13"},{"lineNumber":415,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":416,"author":{"gitId":"kevinxx88"},"content":"                if (text.contains(\"[X]\")) {","lastModifiedDate":"2022-04-13"},{"lineNumber":417,"author":{"gitId":"kevinxx88"},"content":"                    Task m \u003d taskIcon.get(count);","lastModifiedDate":"2022-04-13"},{"lineNumber":418,"author":{"gitId":"kevinxx88"},"content":"                    m.markAsDone();","lastModifiedDate":"2022-04-13"},{"lineNumber":419,"author":{"gitId":"kevinxx88"},"content":"                }","lastModifiedDate":"2022-04-13"},{"lineNumber":420,"author":{"gitId":"kevinxx88"},"content":"                count++;","lastModifiedDate":"2022-04-13"},{"lineNumber":421,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-04-13"},{"lineNumber":422,"author":{"gitId":"kevinxx88"},"content":"                //Read [D] from File and Update to ArrayList","lastModifiedDate":"2022-04-13"},{"lineNumber":423,"author":{"gitId":"kevinxx88"},"content":"            } else if (text.contains(\"[D]\")) {","lastModifiedDate":"2022-04-13"},{"lineNumber":424,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-04-13"},{"lineNumber":425,"author":{"gitId":"kevinxx88"},"content":"                //Find \u0027(\u0027","lastModifiedDate":"2022-04-13"},{"lineNumber":426,"author":{"gitId":"kevinxx88"},"content":"                int by_pos \u003d text.indexOf(\"(\");","lastModifiedDate":"2022-04-13"},{"lineNumber":427,"author":{"gitId":"kevinxx88"},"content":"                String Deadline \u003d text.substring(7, by_pos-1);","lastModifiedDate":"2022-04-14"},{"lineNumber":428,"author":{"gitId":"kevinxx88"},"content":"                String by \u003d text.substring(by_pos + 5, by_pos + 24);","lastModifiedDate":"2022-04-13"},{"lineNumber":429,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":430,"author":{"gitId":"kevinxx88"},"content":"                taskIcon.add(new Deadline(Deadline, by));","lastModifiedDate":"2022-04-13"},{"lineNumber":431,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-04-13"},{"lineNumber":432,"author":{"gitId":"kevinxx88"},"content":"                if (text.contains(\"[X]\")) {","lastModifiedDate":"2022-04-13"},{"lineNumber":433,"author":{"gitId":"kevinxx88"},"content":"                    Task m \u003d taskIcon.get(count);","lastModifiedDate":"2022-04-13"},{"lineNumber":434,"author":{"gitId":"kevinxx88"},"content":"                    m.markAsDone();","lastModifiedDate":"2022-04-13"},{"lineNumber":435,"author":{"gitId":"kevinxx88"},"content":"                }","lastModifiedDate":"2022-02-12"},{"lineNumber":436,"author":{"gitId":"kevinxx88"},"content":"                count++;","lastModifiedDate":"2022-04-13"},{"lineNumber":437,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-04-13"},{"lineNumber":438,"author":{"gitId":"kevinxx88"},"content":"                //Read [E] from File and Update to ArrayList","lastModifiedDate":"2022-04-13"},{"lineNumber":439,"author":{"gitId":"kevinxx88"},"content":"            } else if (text.contains(\"[E]\")) {","lastModifiedDate":"2022-04-13"},{"lineNumber":440,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":441,"author":{"gitId":"kevinxx88"},"content":"                //Find \u0027(\u0027","lastModifiedDate":"2022-04-13"},{"lineNumber":442,"author":{"gitId":"kevinxx88"},"content":"                int at_pos \u003d text.indexOf(\"(\");","lastModifiedDate":"2022-04-13"},{"lineNumber":443,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-04-13"},{"lineNumber":444,"author":{"gitId":"kevinxx88"},"content":"                String Event \u003d text.substring(7, at_pos-1);","lastModifiedDate":"2022-04-14"},{"lineNumber":445,"author":{"gitId":"kevinxx88"},"content":"                String at \u003d text.substring(at_pos + 5, at_pos + 24);","lastModifiedDate":"2022-04-13"},{"lineNumber":446,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-04-13"},{"lineNumber":447,"author":{"gitId":"kevinxx88"},"content":"                taskIcon.add(new Event(Event, at));","lastModifiedDate":"2022-04-13"},{"lineNumber":448,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-04-13"},{"lineNumber":449,"author":{"gitId":"kevinxx88"},"content":"                if (text.contains(\"[X]\")) {","lastModifiedDate":"2022-04-13"},{"lineNumber":450,"author":{"gitId":"kevinxx88"},"content":"                    Task m \u003d taskIcon.get(count);","lastModifiedDate":"2022-04-13"},{"lineNumber":451,"author":{"gitId":"kevinxx88"},"content":"                    m.markAsDone();","lastModifiedDate":"2022-04-13"},{"lineNumber":452,"author":{"gitId":"kevinxx88"},"content":"                }","lastModifiedDate":"2022-04-13"},{"lineNumber":453,"author":{"gitId":"kevinxx88"},"content":"                count++;","lastModifiedDate":"2022-04-13"},{"lineNumber":454,"author":{"gitId":"kevinxx88"},"content":"            }","lastModifiedDate":"2022-04-13"},{"lineNumber":455,"author":{"gitId":"kevinxx88"},"content":"        }","lastModifiedDate":"2022-04-13"},{"lineNumber":456,"author":{"gitId":"kevinxx88"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":457,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":458,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-04-13"},{"lineNumber":459,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":460,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":461,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":462,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":463,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":464,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":465,"author":{"gitId":"kevinxx88"},"content":"        System.out.println(logo);","lastModifiedDate":"2022-02-12"},{"lineNumber":466,"author":{"gitId":"kevinxx88"},"content":"        separatingLine();","lastModifiedDate":"2022-02-12"},{"lineNumber":467,"author":{"gitId":"kevinxx88"},"content":"        System.out.println(\"Hello, Boss! This is Duke here!\\n\" +","lastModifiedDate":"2022-03-05"},{"lineNumber":468,"author":{"gitId":"kevinxx88"},"content":"                \"Your trusted personal task assistant!\\n\" +","lastModifiedDate":"2022-02-12"},{"lineNumber":469,"author":{"gitId":"kevinxx88"},"content":"                \"What can I do to assist you today, Boss?\\n\" +","lastModifiedDate":"2022-03-05"},{"lineNumber":470,"author":{"gitId":"kevinxx88"},"content":"                \"(Please input your task or type \u0027list\u0027 to retrieve your task list)\");","lastModifiedDate":"2022-02-12"},{"lineNumber":471,"author":{"gitId":"kevinxx88"},"content":"        separatingLine();","lastModifiedDate":"2022-02-12"},{"lineNumber":472,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":473,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-04-13"},{"lineNumber":474,"author":{"gitId":"kevinxx88"},"content":"        //Read File","lastModifiedDate":"2022-04-13"},{"lineNumber":475,"author":{"gitId":"kevinxx88"},"content":"        String FileLocation \u003d \"outputFiles/duke.txt\";","lastModifiedDate":"2022-04-13"},{"lineNumber":476,"author":{"gitId":"kevinxx88"},"content":"        String Directory \u003d \"./outputFiles/\";","lastModifiedDate":"2022-04-13"},{"lineNumber":477,"author":{"gitId":"kevinxx88"},"content":"        try {","lastModifiedDate":"2022-04-13"},{"lineNumber":478,"author":{"gitId":"kevinxx88"},"content":"            Path path \u003d Paths.get(Directory);","lastModifiedDate":"2022-04-13"},{"lineNumber":479,"author":{"gitId":"kevinxx88"},"content":"            Files.createDirectories(path);","lastModifiedDate":"2022-04-13"},{"lineNumber":480,"author":{"gitId":"kevinxx88"},"content":"            readFile(FileLocation);","lastModifiedDate":"2022-04-13"},{"lineNumber":481,"author":{"gitId":"kevinxx88"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-04-13"},{"lineNumber":482,"author":{"gitId":"kevinxx88"},"content":"            System.out.println(\"OOPS!!! I\u0027m sorry, Boss! I can\u0027t find the file!\\n\" +","lastModifiedDate":"2022-04-13"},{"lineNumber":483,"author":{"gitId":"kevinxx88"},"content":"                    \"Please create the file first before proceed!\");","lastModifiedDate":"2022-04-13"},{"lineNumber":484,"author":{"gitId":"kevinxx88"},"content":"            separatingLine();","lastModifiedDate":"2022-04-13"},{"lineNumber":485,"author":{"gitId":"kevinxx88"},"content":"        }","lastModifiedDate":"2022-04-13"},{"lineNumber":486,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-04-13"},{"lineNumber":487,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-04-13"},{"lineNumber":488,"author":{"gitId":"kevinxx88"},"content":"        // perform system logic","lastModifiedDate":"2022-02-12"},{"lineNumber":489,"author":{"gitId":"kevinxx88"},"content":"        system();","lastModifiedDate":"2022-02-12"},{"lineNumber":490,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":491,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":492,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":493,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"kevinxx88":484,"-":9}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinxx88"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"kevinxx88"},"content":"    private final String mistake;","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"kevinxx88"},"content":"    public DukeException (String mistake) { this.mistake \u003d mistake; }","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"kevinxx88"},"content":"    public String getError() {","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"kevinxx88"},"content":"        return this.mistake;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"kevinxx88"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"kevinxx88"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"kevinxx88":9}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinxx88"},"content":"public class Event extends Task {","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"kevinxx88"},"content":"    protected String at;","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"kevinxx88"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"kevinxx88"},"content":"        super(description);","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"kevinxx88"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"kevinxx88"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"kevinxx88"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"kevinxx88"},"content":"    public String toString() {","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"kevinxx88"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"kevinxx88"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"kevinxx88"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"kevinxx88":14}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinxx88"},"content":"public class Task {","lastModifiedDate":"2022-02-13"},{"lineNumber":2,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":3,"author":{"gitId":"kevinxx88"},"content":"    protected String description;","lastModifiedDate":"2022-02-13"},{"lineNumber":4,"author":{"gitId":"kevinxx88"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-02-13"},{"lineNumber":5,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":6,"author":{"gitId":"kevinxx88"},"content":"    public Task(String description) {","lastModifiedDate":"2022-02-13"},{"lineNumber":7,"author":{"gitId":"kevinxx88"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-02-13"},{"lineNumber":8,"author":{"gitId":"kevinxx88"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-02-13"},{"lineNumber":9,"author":{"gitId":"kevinxx88"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":10,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":11,"author":{"gitId":"kevinxx88"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-02-13"},{"lineNumber":12,"author":{"gitId":"kevinxx88"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-02-13"},{"lineNumber":13,"author":{"gitId":"kevinxx88"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":14,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":15,"author":{"gitId":"kevinxx88"},"content":"    //Mark as done","lastModifiedDate":"2022-02-13"},{"lineNumber":16,"author":{"gitId":"kevinxx88"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-02-13"},{"lineNumber":17,"author":{"gitId":"kevinxx88"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-02-13"},{"lineNumber":18,"author":{"gitId":"kevinxx88"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":19,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":20,"author":{"gitId":"kevinxx88"},"content":"    //Mark as not done","lastModifiedDate":"2022-02-13"},{"lineNumber":21,"author":{"gitId":"kevinxx88"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2022-02-13"},{"lineNumber":22,"author":{"gitId":"kevinxx88"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-02-13"},{"lineNumber":23,"author":{"gitId":"kevinxx88"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":24,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":25,"author":{"gitId":"kevinxx88"},"content":"    //Adding tod0 task at parent class","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"kevinxx88"},"content":"    public String toString() {","lastModifiedDate":"2022-03-05"},{"lineNumber":27,"author":{"gitId":"kevinxx88"},"content":"        return ( \"[\" + this.getStatusIcon() + \"] \" + description);","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"kevinxx88"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":29,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":30,"author":{"gitId":"kevinxx88"},"content":"}","lastModifiedDate":"2022-02-13"}],"authorContributionMap":{"kevinxx88":30}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinxx88"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"kevinxx88"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"kevinxx88"},"content":"        super(description);","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"kevinxx88"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"kevinxx88"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"kevinxx88"},"content":"    public String toString() {","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"kevinxx88"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"kevinxx88"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"kevinxx88"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"kevinxx88":12}},{"path":"things/colors.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kevinxx88"},"content":"orange","lastModifiedDate":"2022-02-12"},{"lineNumber":2,"author":{"gitId":"kevinxx88"},"content":"yellow","lastModifiedDate":"2022-02-12"},{"lineNumber":3,"author":{"gitId":"kevinxx88"},"content":"blue","lastModifiedDate":"2022-02-12"}],"authorContributionMap":{"kevinxx88":3}},{"path":"things/fruits.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kevinxx88"},"content":"apple","lastModifiedDate":"2022-02-12"},{"lineNumber":2,"author":{"gitId":"kevinxx88"},"content":"oranges","lastModifiedDate":"2022-02-12"},{"lineNumber":3,"author":{"gitId":"kevinxx88"},"content":"mango","lastModifiedDate":"2022-02-12"},{"lineNumber":4,"author":{"gitId":"kevinxx88"},"content":"watermelon","lastModifiedDate":"2022-02-12"},{"lineNumber":5,"author":{"gitId":"kevinxx88"},"content":"pineapple","lastModifiedDate":"2022-02-12"},{"lineNumber":6,"author":{"gitId":"kevinxx88"},"content":"kiwi","lastModifiedDate":"2022-02-12"}],"authorContributionMap":{"kevinxx88":6}},{"path":"things/shapes.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kevinxx88"},"content":"circle","lastModifiedDate":"2022-02-12"},{"lineNumber":2,"author":{"gitId":"kevinxx88"},"content":"rectangle","lastModifiedDate":"2022-02-12"},{"lineNumber":3,"author":{"gitId":"kevinxx88"},"content":"cylinder","lastModifiedDate":"2022-02-12"}],"authorContributionMap":{"kevinxx88":3}}]
