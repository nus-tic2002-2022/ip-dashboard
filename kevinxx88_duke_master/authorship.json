[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinxx88"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"kevinxx88"},"content":"    protected String by;","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"kevinxx88"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"kevinxx88"},"content":"        super(description);","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"kevinxx88"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"kevinxx88"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"kevinxx88"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"kevinxx88"},"content":"    public String toString() {","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"kevinxx88"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"kevinxx88"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"kevinxx88"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"kevinxx88":14}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinxx88"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-12"},{"lineNumber":2,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":5,"author":{"gitId":"kevinxx88"},"content":"    // separating line function:","lastModifiedDate":"2022-02-12"},{"lineNumber":6,"author":{"gitId":"kevinxx88"},"content":"    public static void separatingLine() {","lastModifiedDate":"2022-02-12"},{"lineNumber":7,"author":{"gitId":"kevinxx88"},"content":"        System.out.println(\"__________________________________________________________\");","lastModifiedDate":"2022-02-12"},{"lineNumber":8,"author":{"gitId":"kevinxx88"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":9,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":10,"author":{"gitId":"kevinxx88"},"content":"    public static void system() {","lastModifiedDate":"2022-02-12"},{"lineNumber":11,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":12,"author":{"gitId":"kevinxx88"},"content":"        String[] taskList \u003d new String[100];","lastModifiedDate":"2022-02-12"},{"lineNumber":13,"author":{"gitId":"kevinxx88"},"content":"        Task[] taskIcon \u003d new Task[100];","lastModifiedDate":"2022-02-13"},{"lineNumber":14,"author":{"gitId":"kevinxx88"},"content":"        String line;","lastModifiedDate":"2022-02-12"},{"lineNumber":15,"author":{"gitId":"kevinxx88"},"content":"        int counter \u003d 0;","lastModifiedDate":"2022-02-12"},{"lineNumber":16,"author":{"gitId":"kevinxx88"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-02-12"},{"lineNumber":17,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":18,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":19,"author":{"gitId":"kevinxx88"},"content":"        while (true) {","lastModifiedDate":"2022-02-12"},{"lineNumber":20,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":21,"author":{"gitId":"kevinxx88"},"content":"            //request user to input:","lastModifiedDate":"2022-02-12"},{"lineNumber":22,"author":{"gitId":"kevinxx88"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2022-02-12"},{"lineNumber":23,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":24,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":25,"author":{"gitId":"kevinxx88"},"content":"            //Exit system if input \"bye\":","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"kevinxx88"},"content":"            if (line.equals(\"bye\")) {","lastModifiedDate":"2022-02-12"},{"lineNumber":27,"author":{"gitId":"kevinxx88"},"content":"                separatingLine();","lastModifiedDate":"2022-02-12"},{"lineNumber":28,"author":{"gitId":"kevinxx88"},"content":"                System.out.println(\"Bye. Glad to be of service to you!\\n\" +","lastModifiedDate":"2022-02-12"},{"lineNumber":29,"author":{"gitId":"kevinxx88"},"content":"                        \"Hope to assist you again soon, Boss!\");","lastModifiedDate":"2022-02-13"},{"lineNumber":30,"author":{"gitId":"kevinxx88"},"content":"                separatingLine();","lastModifiedDate":"2022-02-12"},{"lineNumber":31,"author":{"gitId":"kevinxx88"},"content":"                System.exit(0);","lastModifiedDate":"2022-02-12"},{"lineNumber":32,"author":{"gitId":"kevinxx88"},"content":"            }","lastModifiedDate":"2022-02-12"},{"lineNumber":33,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":34,"author":{"gitId":"kevinxx88"},"content":"            //Print the List:","lastModifiedDate":"2022-02-12"},{"lineNumber":35,"author":{"gitId":"kevinxx88"},"content":"            else if (line.equals(\"list\") \u0026\u0026 taskIcon[0] !\u003d null) {","lastModifiedDate":"2022-03-05"},{"lineNumber":36,"author":{"gitId":"kevinxx88"},"content":"                separatingLine();","lastModifiedDate":"2022-02-12"},{"lineNumber":37,"author":{"gitId":"kevinxx88"},"content":"                System.out.println(\"Hey Boss! I have summarised your task list as below:\");","lastModifiedDate":"2022-02-13"},{"lineNumber":38,"author":{"gitId":"kevinxx88"},"content":"                for (int i \u003d 0; i \u003c counter; i++) {","lastModifiedDate":"2022-02-12"},{"lineNumber":39,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":40,"author":{"gitId":"kevinxx88"},"content":"                    // below codes are used from level-4 onwards:","lastModifiedDate":"2022-03-05"},{"lineNumber":41,"author":{"gitId":"kevinxx88"},"content":"                    System.out.println(i + 1 + \". \" + taskIcon[i].toString());","lastModifiedDate":"2022-03-05"},{"lineNumber":42,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":43,"author":{"gitId":"kevinxx88"},"content":"                    // below codes are used before level-4 implementation:","lastModifiedDate":"2022-03-05"},{"lineNumber":44,"author":{"gitId":"kevinxx88"},"content":"                    //System.out.println(i + 1 + \". \" +","lastModifiedDate":"2022-03-05"},{"lineNumber":45,"author":{"gitId":"kevinxx88"},"content":"                    //        \"[\" +","lastModifiedDate":"2022-03-05"},{"lineNumber":46,"author":{"gitId":"kevinxx88"},"content":"                    //        taskIcon[i].getStatusIcon() +","lastModifiedDate":"2022-03-05"},{"lineNumber":47,"author":{"gitId":"kevinxx88"},"content":"                    //        \"] \" +","lastModifiedDate":"2022-03-05"},{"lineNumber":48,"author":{"gitId":"kevinxx88"},"content":"                    //        taskList[i]);","lastModifiedDate":"2022-03-05"},{"lineNumber":49,"author":{"gitId":"kevinxx88"},"content":"                }","lastModifiedDate":"2022-02-12"},{"lineNumber":50,"author":{"gitId":"kevinxx88"},"content":"                separatingLine();","lastModifiedDate":"2022-02-12"},{"lineNumber":51,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":52,"author":{"gitId":"kevinxx88"},"content":"            } else if (line.equals(\"list\") \u0026\u0026 taskIcon[0] \u003d\u003d null) {","lastModifiedDate":"2022-03-05"},{"lineNumber":53,"author":{"gitId":"kevinxx88"},"content":"                separatingLine();","lastModifiedDate":"2022-02-12"},{"lineNumber":54,"author":{"gitId":"kevinxx88"},"content":"                System.out.println(\"Your current task list is empty, Boss!\\n\" +","lastModifiedDate":"2022-02-13"},{"lineNumber":55,"author":{"gitId":"kevinxx88"},"content":"                        \"Please start to add your tasks below ^\u003c\u003e^\");","lastModifiedDate":"2022-02-12"},{"lineNumber":56,"author":{"gitId":"kevinxx88"},"content":"                separatingLine();","lastModifiedDate":"2022-02-12"},{"lineNumber":57,"author":{"gitId":"kevinxx88"},"content":"            }","lastModifiedDate":"2022-02-12"},{"lineNumber":58,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":59,"author":{"gitId":"kevinxx88"},"content":"            // unmark task (with error handling):","lastModifiedDate":"2022-03-12"},{"lineNumber":60,"author":{"gitId":"kevinxx88"},"content":"            else if (line.contains(\"unmark\")) {","lastModifiedDate":"2022-02-13"},{"lineNumber":61,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":62,"author":{"gitId":"kevinxx88"},"content":"                try {","lastModifiedDate":"2022-03-12"},{"lineNumber":63,"author":{"gitId":"kevinxx88"},"content":"                    int index1 \u003d Integer.parseInt(line.substring(7)) - 1;","lastModifiedDate":"2022-02-13"},{"lineNumber":64,"author":{"gitId":"kevinxx88"},"content":"                    Task ud \u003d taskIcon[index1];","lastModifiedDate":"2022-02-13"},{"lineNumber":65,"author":{"gitId":"kevinxx88"},"content":"                    ud.markAsNotDone();","lastModifiedDate":"2022-02-13"},{"lineNumber":66,"author":{"gitId":"kevinxx88"},"content":"                    System.out.println(\"Great, job completed, Boss!\\n\" +","lastModifiedDate":"2022-02-13"},{"lineNumber":67,"author":{"gitId":"kevinxx88"},"content":"                            \"I\u0027ve marked this task as not done yet for you:\");","lastModifiedDate":"2022-02-13"},{"lineNumber":68,"author":{"gitId":"kevinxx88"},"content":"                    System.out.println(\"[\" + ud.getStatusIcon() + \"] \" + ud.description);","lastModifiedDate":"2022-02-13"},{"lineNumber":69,"author":{"gitId":"kevinxx88"},"content":"                    separatingLine();","lastModifiedDate":"2022-02-13"},{"lineNumber":70,"author":{"gitId":"kevinxx88"},"content":"                }","lastModifiedDate":"2022-03-12"},{"lineNumber":71,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":72,"author":{"gitId":"kevinxx88"},"content":"                // input invalid task number:","lastModifiedDate":"2022-03-12"},{"lineNumber":73,"author":{"gitId":"kevinxx88"},"content":"                catch (NullPointerException e) {","lastModifiedDate":"2022-03-12"},{"lineNumber":74,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":75,"author":{"gitId":"kevinxx88"},"content":"                    System.out.println(\"SORRY Boss! You do not have Task No. \" +","lastModifiedDate":"2022-03-12"},{"lineNumber":76,"author":{"gitId":"kevinxx88"},"content":"                            (Integer.parseInt(line.substring(7))) +","lastModifiedDate":"2022-03-12"},{"lineNumber":77,"author":{"gitId":"kevinxx88"},"content":"                            \" in your task list!\\n\" +","lastModifiedDate":"2022-03-12"},{"lineNumber":78,"author":{"gitId":"kevinxx88"},"content":"                            \"You only have a total of \" + (counter) + \" Task(s) in your List!\\n\" +","lastModifiedDate":"2022-03-12"},{"lineNumber":79,"author":{"gitId":"kevinxx88"},"content":"                            \"Please only enter an existing task number again, Boss!\");","lastModifiedDate":"2022-03-12"},{"lineNumber":80,"author":{"gitId":"kevinxx88"},"content":"                    separatingLine();","lastModifiedDate":"2022-03-12"},{"lineNumber":81,"author":{"gitId":"kevinxx88"},"content":"                }","lastModifiedDate":"2022-03-12"},{"lineNumber":82,"author":{"gitId":"kevinxx88"},"content":"            }","lastModifiedDate":"2022-02-13"},{"lineNumber":83,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":84,"author":{"gitId":"kevinxx88"},"content":"            // mark task (with error handling):","lastModifiedDate":"2022-03-12"},{"lineNumber":85,"author":{"gitId":"kevinxx88"},"content":"            else if (line.contains(\"mark\")) {","lastModifiedDate":"2022-02-13"},{"lineNumber":86,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":87,"author":{"gitId":"kevinxx88"},"content":"                try {","lastModifiedDate":"2022-03-12"},{"lineNumber":88,"author":{"gitId":"kevinxx88"},"content":"                    int index2 \u003d Integer.parseInt(line.substring(5)) - 1;","lastModifiedDate":"2022-02-13"},{"lineNumber":89,"author":{"gitId":"kevinxx88"},"content":"                    Task d \u003d taskIcon[index2];","lastModifiedDate":"2022-02-13"},{"lineNumber":90,"author":{"gitId":"kevinxx88"},"content":"                    d.markAsDone();","lastModifiedDate":"2022-02-13"},{"lineNumber":91,"author":{"gitId":"kevinxx88"},"content":"                    System.out.println(\"Great, job completed, Boss!\\n\" +","lastModifiedDate":"2022-02-13"},{"lineNumber":92,"author":{"gitId":"kevinxx88"},"content":"                            \"I\u0027ve marked this task as done for you:\");","lastModifiedDate":"2022-02-13"},{"lineNumber":93,"author":{"gitId":"kevinxx88"},"content":"                    System.out.println(\"[\" + d.getStatusIcon() + \"] \" + d.description);","lastModifiedDate":"2022-02-13"},{"lineNumber":94,"author":{"gitId":"kevinxx88"},"content":"                    separatingLine();","lastModifiedDate":"2022-02-13"},{"lineNumber":95,"author":{"gitId":"kevinxx88"},"content":"                }","lastModifiedDate":"2022-03-12"},{"lineNumber":96,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":97,"author":{"gitId":"kevinxx88"},"content":"                // input invalid task number:","lastModifiedDate":"2022-03-12"},{"lineNumber":98,"author":{"gitId":"kevinxx88"},"content":"                catch (NullPointerException e) {","lastModifiedDate":"2022-03-12"},{"lineNumber":99,"author":{"gitId":"kevinxx88"},"content":"                    System.out.println(\"SORRY Boss! You do not have Task No. \" +","lastModifiedDate":"2022-03-12"},{"lineNumber":100,"author":{"gitId":"kevinxx88"},"content":"                            (Integer.parseInt(line.substring(5))) +","lastModifiedDate":"2022-03-12"},{"lineNumber":101,"author":{"gitId":"kevinxx88"},"content":"                            \" in your task list!\\n\" +","lastModifiedDate":"2022-03-12"},{"lineNumber":102,"author":{"gitId":"kevinxx88"},"content":"                            \"You only have a total of \" + (counter) + \" Task(s) in your List!\\n\" +","lastModifiedDate":"2022-03-12"},{"lineNumber":103,"author":{"gitId":"kevinxx88"},"content":"                            \"Please only enter an existing task number again, Boss!\");","lastModifiedDate":"2022-03-12"},{"lineNumber":104,"author":{"gitId":"kevinxx88"},"content":"                    separatingLine();","lastModifiedDate":"2022-03-12"},{"lineNumber":105,"author":{"gitId":"kevinxx88"},"content":"                }","lastModifiedDate":"2022-03-12"},{"lineNumber":106,"author":{"gitId":"kevinxx88"},"content":"            }","lastModifiedDate":"2022-02-13"},{"lineNumber":107,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":108,"author":{"gitId":"kevinxx88"},"content":"            //Add Deadline execution (with error handling):","lastModifiedDate":"2022-03-12"},{"lineNumber":109,"author":{"gitId":"kevinxx88"},"content":"            else if (line.contains(\"deadline\")){","lastModifiedDate":"2022-03-05"},{"lineNumber":110,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":111,"author":{"gitId":"kevinxx88"},"content":"                String[] lineSplit \u003d line.split(\" \");","lastModifiedDate":"2022-03-12"},{"lineNumber":112,"author":{"gitId":"kevinxx88"},"content":"                String[] lineSplit2 \u003d line.split(\"/\");","lastModifiedDate":"2022-03-12"},{"lineNumber":113,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":114,"author":{"gitId":"kevinxx88"},"content":"                try {","lastModifiedDate":"2022-03-12"},{"lineNumber":115,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":116,"author":{"gitId":"kevinxx88"},"content":"                    // after deadline no input of task description:","lastModifiedDate":"2022-03-12"},{"lineNumber":117,"author":{"gitId":"kevinxx88"},"content":"                    if (lineSplit.length \u003c 2) {","lastModifiedDate":"2022-03-12"},{"lineNumber":118,"author":{"gitId":"kevinxx88"},"content":"                        throw new DukeException(\"Invalid Input (Deadline Description)\");","lastModifiedDate":"2022-03-12"},{"lineNumber":119,"author":{"gitId":"kevinxx88"},"content":"                    }","lastModifiedDate":"2022-03-12"},{"lineNumber":120,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":121,"author":{"gitId":"kevinxx88"},"content":"                    // missing of \"/by\" for deadline input:","lastModifiedDate":"2022-03-12"},{"lineNumber":122,"author":{"gitId":"kevinxx88"},"content":"                    if (!line.contains(\"/by\")){","lastModifiedDate":"2022-03-12"},{"lineNumber":123,"author":{"gitId":"kevinxx88"},"content":"                        throw new DukeException(\"Missing Deadline\");","lastModifiedDate":"2022-03-12"},{"lineNumber":124,"author":{"gitId":"kevinxx88"},"content":"                    }","lastModifiedDate":"2022-03-12"},{"lineNumber":125,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":126,"author":{"gitId":"kevinxx88"},"content":"                    String[] lineSplit3 \u003d lineSplit2[1].split(\" \");","lastModifiedDate":"2022-03-12"},{"lineNumber":127,"author":{"gitId":"kevinxx88"},"content":"                    // no spacing after \"deadline\" and \"/by\":","lastModifiedDate":"2022-03-12"},{"lineNumber":128,"author":{"gitId":"kevinxx88"},"content":"                    if (lineSplit[0].length() \u003e 8 || lineSplit3[0].length() \u003e 3) {","lastModifiedDate":"2022-03-12"},{"lineNumber":129,"author":{"gitId":"kevinxx88"},"content":"                        throw new DukeException(\"Invalid Format (Deadline)\");","lastModifiedDate":"2022-03-12"},{"lineNumber":130,"author":{"gitId":"kevinxx88"},"content":"                    }","lastModifiedDate":"2022-03-12"},{"lineNumber":131,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":132,"author":{"gitId":"kevinxx88"},"content":"                    //Find the index number of \u0027/\u0027","lastModifiedDate":"2022-03-05"},{"lineNumber":133,"author":{"gitId":"kevinxx88"},"content":"                    int index3 \u003d line.indexOf(\"/\");","lastModifiedDate":"2022-03-05"},{"lineNumber":134,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":135,"author":{"gitId":"kevinxx88"},"content":"                    //Initiate Deadline Class","lastModifiedDate":"2022-03-05"},{"lineNumber":136,"author":{"gitId":"kevinxx88"},"content":"                    taskIcon[counter] \u003d new Deadline(line.substring(9, index3-1),line.substring(index3+4));","lastModifiedDate":"2022-03-05"},{"lineNumber":137,"author":{"gitId":"kevinxx88"},"content":"                    System.out.println(\"Hey Boss! Got it. I\u0027ve added this task for you:\");","lastModifiedDate":"2022-03-05"},{"lineNumber":138,"author":{"gitId":"kevinxx88"},"content":"                    System.out.println(taskIcon[counter].toString());","lastModifiedDate":"2022-03-05"},{"lineNumber":139,"author":{"gitId":"kevinxx88"},"content":"                    counter++;","lastModifiedDate":"2022-03-05"},{"lineNumber":140,"author":{"gitId":"kevinxx88"},"content":"                    System.out.println(\"Now you have \" + (counter) + \" tasks in total within the list.\");","lastModifiedDate":"2022-03-05"},{"lineNumber":141,"author":{"gitId":"kevinxx88"},"content":"                    separatingLine();","lastModifiedDate":"2022-03-12"},{"lineNumber":142,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":143,"author":{"gitId":"kevinxx88"},"content":"                }","lastModifiedDate":"2022-03-05"},{"lineNumber":144,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":145,"author":{"gitId":"kevinxx88"},"content":"                catch (DukeException e) {","lastModifiedDate":"2022-03-12"},{"lineNumber":146,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":147,"author":{"gitId":"kevinxx88"},"content":"                    if (e.getError().equals(\"Invalid Input (Deadline Description)\")) {","lastModifiedDate":"2022-03-12"},{"lineNumber":148,"author":{"gitId":"kevinxx88"},"content":"                        System.out.println(\"SORRY Boss! You have entered an invalid input (Missing Task Descriptions)!\\n\" +","lastModifiedDate":"2022-03-12"},{"lineNumber":149,"author":{"gitId":"kevinxx88"},"content":"                                \"Please enter the task description after \u0027deadline\u0027 for this entry!\\n\" +","lastModifiedDate":"2022-03-12"},{"lineNumber":150,"author":{"gitId":"kevinxx88"},"content":"                                \"Kindly try again, Boss!\");","lastModifiedDate":"2022-03-12"},{"lineNumber":151,"author":{"gitId":"kevinxx88"},"content":"                        separatingLine();","lastModifiedDate":"2022-03-12"},{"lineNumber":152,"author":{"gitId":"kevinxx88"},"content":"                    }","lastModifiedDate":"2022-03-12"},{"lineNumber":153,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":154,"author":{"gitId":"kevinxx88"},"content":"                    if (e.getError().equals(\"Missing Deadline\")) {","lastModifiedDate":"2022-03-12"},{"lineNumber":155,"author":{"gitId":"kevinxx88"},"content":"                        System.out.println(\"SORRY Boss! You have entered an invalid input (Missing Deadline)!\\n\" +","lastModifiedDate":"2022-03-12"},{"lineNumber":156,"author":{"gitId":"kevinxx88"},"content":"                                \"Please enter the task deadline with space before and after \u0027/by\u0027 for this entry!\\n\" +","lastModifiedDate":"2022-03-12"},{"lineNumber":157,"author":{"gitId":"kevinxx88"},"content":"                                \"Example: \u0027deadline clean house /by 22 March 2022\u0027\\n\" +","lastModifiedDate":"2022-03-12"},{"lineNumber":158,"author":{"gitId":"kevinxx88"},"content":"                                \"Kindly try again, Boss!\");","lastModifiedDate":"2022-03-12"},{"lineNumber":159,"author":{"gitId":"kevinxx88"},"content":"                        separatingLine();","lastModifiedDate":"2022-03-12"},{"lineNumber":160,"author":{"gitId":"kevinxx88"},"content":"                    }","lastModifiedDate":"2022-03-12"},{"lineNumber":161,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":162,"author":{"gitId":"kevinxx88"},"content":"                    if (e.getError().equals(\"Invalid Format (Deadline)\")) {","lastModifiedDate":"2022-03-12"},{"lineNumber":163,"author":{"gitId":"kevinxx88"},"content":"                        System.out.println(\"SORRY Boss! You have entered an invalid input (Wrong Format)!\\n\" +","lastModifiedDate":"2022-03-12"},{"lineNumber":164,"author":{"gitId":"kevinxx88"},"content":"                                \"Please enter the deadline description \u0026 deadline date with space after \u0027deadline\u0027 \u0026 \u0027/by\u0027 for this entry!\\n\" +","lastModifiedDate":"2022-03-12"},{"lineNumber":165,"author":{"gitId":"kevinxx88"},"content":"                                \"Example: \u0027deadline clean house /by 22 March 2022\u0027\\n\" +","lastModifiedDate":"2022-03-12"},{"lineNumber":166,"author":{"gitId":"kevinxx88"},"content":"                                \"Kindly try again, Boss!\");","lastModifiedDate":"2022-03-12"},{"lineNumber":167,"author":{"gitId":"kevinxx88"},"content":"                        separatingLine();","lastModifiedDate":"2022-03-12"},{"lineNumber":168,"author":{"gitId":"kevinxx88"},"content":"                    }","lastModifiedDate":"2022-03-12"},{"lineNumber":169,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":170,"author":{"gitId":"kevinxx88"},"content":"                }","lastModifiedDate":"2022-03-12"},{"lineNumber":171,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":172,"author":{"gitId":"kevinxx88"},"content":"            }","lastModifiedDate":"2022-03-12"},{"lineNumber":173,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":174,"author":{"gitId":"kevinxx88"},"content":"            //Add Tod0 execution (with error handling):","lastModifiedDate":"2022-03-12"},{"lineNumber":175,"author":{"gitId":"kevinxx88"},"content":"            else if (line.contains(\"todo\")){","lastModifiedDate":"2022-03-05"},{"lineNumber":176,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":177,"author":{"gitId":"kevinxx88"},"content":"                String[] TestInput \u003d line.split(\" \");","lastModifiedDate":"2022-03-12"},{"lineNumber":178,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":179,"author":{"gitId":"kevinxx88"},"content":"                //Catch Error for T0do Class","lastModifiedDate":"2022-03-12"},{"lineNumber":180,"author":{"gitId":"kevinxx88"},"content":"                try {","lastModifiedDate":"2022-03-12"},{"lineNumber":181,"author":{"gitId":"kevinxx88"},"content":"                    // after \u0027tod0\u0027 no input of task description:","lastModifiedDate":"2022-03-12"},{"lineNumber":182,"author":{"gitId":"kevinxx88"},"content":"                    if (TestInput.length \u003c 2) {","lastModifiedDate":"2022-03-12"},{"lineNumber":183,"author":{"gitId":"kevinxx88"},"content":"                        throw new DukeException(\"Invalid Input (todo)\");","lastModifiedDate":"2022-03-12"},{"lineNumber":184,"author":{"gitId":"kevinxx88"},"content":"                    }","lastModifiedDate":"2022-03-12"},{"lineNumber":185,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":186,"author":{"gitId":"kevinxx88"},"content":"                    // after \u0027tod0\u0027 no spacing:","lastModifiedDate":"2022-03-12"},{"lineNumber":187,"author":{"gitId":"kevinxx88"},"content":"                    if (TestInput[0].length() \u003e 4) {","lastModifiedDate":"2022-03-12"},{"lineNumber":188,"author":{"gitId":"kevinxx88"},"content":"                        throw new DukeException(\"Invalid Format (todo)\");","lastModifiedDate":"2022-03-12"},{"lineNumber":189,"author":{"gitId":"kevinxx88"},"content":"                    }","lastModifiedDate":"2022-03-12"},{"lineNumber":190,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":191,"author":{"gitId":"kevinxx88"},"content":"                    //Initiate Tod0 Class","lastModifiedDate":"2022-03-05"},{"lineNumber":192,"author":{"gitId":"kevinxx88"},"content":"                    taskIcon[counter] \u003d new Todo(line.substring(5));","lastModifiedDate":"2022-03-05"},{"lineNumber":193,"author":{"gitId":"kevinxx88"},"content":"                    System.out.println(\"Hey Boss! Got it. I\u0027ve added this task for you:\");","lastModifiedDate":"2022-03-05"},{"lineNumber":194,"author":{"gitId":"kevinxx88"},"content":"                    System.out.println(taskIcon[counter].toString());","lastModifiedDate":"2022-03-05"},{"lineNumber":195,"author":{"gitId":"kevinxx88"},"content":"                    counter++;","lastModifiedDate":"2022-03-05"},{"lineNumber":196,"author":{"gitId":"kevinxx88"},"content":"                    System.out.println(\"Now you have \" + (counter) + \" tasks in total within the list.\");","lastModifiedDate":"2022-03-05"},{"lineNumber":197,"author":{"gitId":"kevinxx88"},"content":"                    separatingLine();","lastModifiedDate":"2022-03-12"},{"lineNumber":198,"author":{"gitId":"kevinxx88"},"content":"                }","lastModifiedDate":"2022-03-12"},{"lineNumber":199,"author":{"gitId":"kevinxx88"},"content":"                catch (DukeException e) {","lastModifiedDate":"2022-03-12"},{"lineNumber":200,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":201,"author":{"gitId":"kevinxx88"},"content":"                    if (e.getError().equals(\"Invalid Input (todo)\")) {","lastModifiedDate":"2022-03-12"},{"lineNumber":202,"author":{"gitId":"kevinxx88"},"content":"                        System.out.println(\"SORRY Boss! You have entered an invalid input (Missing Descriptions)!\\n\" +","lastModifiedDate":"2022-03-12"},{"lineNumber":203,"author":{"gitId":"kevinxx88"},"content":"                                \"Please enter the task description after \u0027todo\u0027 for this entry!\\n\" +","lastModifiedDate":"2022-03-12"},{"lineNumber":204,"author":{"gitId":"kevinxx88"},"content":"                                \"Kindly try again, Boss!\");","lastModifiedDate":"2022-03-12"},{"lineNumber":205,"author":{"gitId":"kevinxx88"},"content":"                        separatingLine();","lastModifiedDate":"2022-03-12"},{"lineNumber":206,"author":{"gitId":"kevinxx88"},"content":"                    }","lastModifiedDate":"2022-03-12"},{"lineNumber":207,"author":{"gitId":"kevinxx88"},"content":"                    if (e.getError().equals(\"Invalid Format (todo)\")) {","lastModifiedDate":"2022-03-12"},{"lineNumber":208,"author":{"gitId":"kevinxx88"},"content":"                        System.out.println(\"SORRY Boss! You have entered an invalid input (Wrong Format)!\\n\" +","lastModifiedDate":"2022-03-12"},{"lineNumber":209,"author":{"gitId":"kevinxx88"},"content":"                                \"Please enter the task description with space after \u0027todo\u0027 for this entry!\\n\" +","lastModifiedDate":"2022-03-12"},{"lineNumber":210,"author":{"gitId":"kevinxx88"},"content":"                                \"Example: \u0027todo clean house\u0027\\n\" +","lastModifiedDate":"2022-03-12"},{"lineNumber":211,"author":{"gitId":"kevinxx88"},"content":"                                \"Kindly try again, Boss!\");","lastModifiedDate":"2022-03-12"},{"lineNumber":212,"author":{"gitId":"kevinxx88"},"content":"                        separatingLine();","lastModifiedDate":"2022-03-12"},{"lineNumber":213,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":214,"author":{"gitId":"kevinxx88"},"content":"                    }","lastModifiedDate":"2022-03-12"},{"lineNumber":215,"author":{"gitId":"kevinxx88"},"content":"                }","lastModifiedDate":"2022-03-12"},{"lineNumber":216,"author":{"gitId":"kevinxx88"},"content":"            }","lastModifiedDate":"2022-03-05"},{"lineNumber":217,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":218,"author":{"gitId":"kevinxx88"},"content":"            //Add Event Execution:","lastModifiedDate":"2022-03-05"},{"lineNumber":219,"author":{"gitId":"kevinxx88"},"content":"            else if (line.contains(\"event\")){","lastModifiedDate":"2022-03-05"},{"lineNumber":220,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":221,"author":{"gitId":"kevinxx88"},"content":"                try {","lastModifiedDate":"2022-03-12"},{"lineNumber":222,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":223,"author":{"gitId":"kevinxx88"},"content":"                    String[] lineSplit \u003d line.split(\" \");","lastModifiedDate":"2022-03-12"},{"lineNumber":224,"author":{"gitId":"kevinxx88"},"content":"                    String[] lineSplit2 \u003d line.split(\"/\");","lastModifiedDate":"2022-03-12"},{"lineNumber":225,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":226,"author":{"gitId":"kevinxx88"},"content":"                    // after event no input of task description:","lastModifiedDate":"2022-03-12"},{"lineNumber":227,"author":{"gitId":"kevinxx88"},"content":"                    if (lineSplit.length \u003c 2) {","lastModifiedDate":"2022-03-12"},{"lineNumber":228,"author":{"gitId":"kevinxx88"},"content":"                        throw new DukeException(\"Invalid Input (Event Description)\");","lastModifiedDate":"2022-03-12"},{"lineNumber":229,"author":{"gitId":"kevinxx88"},"content":"                    }","lastModifiedDate":"2022-03-12"},{"lineNumber":230,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":231,"author":{"gitId":"kevinxx88"},"content":"                    // missing of \"/at\" for event input:","lastModifiedDate":"2022-03-12"},{"lineNumber":232,"author":{"gitId":"kevinxx88"},"content":"                    if (!line.contains(\"/at\")){","lastModifiedDate":"2022-03-12"},{"lineNumber":233,"author":{"gitId":"kevinxx88"},"content":"                        throw new DukeException(\"Missing Event Date/Period\");","lastModifiedDate":"2022-03-12"},{"lineNumber":234,"author":{"gitId":"kevinxx88"},"content":"                    }","lastModifiedDate":"2022-03-12"},{"lineNumber":235,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":236,"author":{"gitId":"kevinxx88"},"content":"                    String[] lineSplit3 \u003d lineSplit2[1].split(\" \");","lastModifiedDate":"2022-03-12"},{"lineNumber":237,"author":{"gitId":"kevinxx88"},"content":"                    // no spacing after \"event\" and \"/at\":","lastModifiedDate":"2022-03-12"},{"lineNumber":238,"author":{"gitId":"kevinxx88"},"content":"                    if (lineSplit[0].length() \u003e 5 || lineSplit3[0].length() \u003e 3) {","lastModifiedDate":"2022-03-12"},{"lineNumber":239,"author":{"gitId":"kevinxx88"},"content":"                        throw new DukeException(\"Invalid Format (Event)\");","lastModifiedDate":"2022-03-12"},{"lineNumber":240,"author":{"gitId":"kevinxx88"},"content":"                    }","lastModifiedDate":"2022-03-12"},{"lineNumber":241,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":242,"author":{"gitId":"kevinxx88"},"content":"                    //Find Position of \u0027/\u0027","lastModifiedDate":"2022-03-05"},{"lineNumber":243,"author":{"gitId":"kevinxx88"},"content":"                    int index4 \u003d line.indexOf(\"/\");","lastModifiedDate":"2022-03-05"},{"lineNumber":244,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":245,"author":{"gitId":"kevinxx88"},"content":"                    //Initiate Event Class","lastModifiedDate":"2022-03-05"},{"lineNumber":246,"author":{"gitId":"kevinxx88"},"content":"                    taskIcon[counter] \u003d new Event(line.substring(6, index4-1),line.substring(index4+4));","lastModifiedDate":"2022-03-05"},{"lineNumber":247,"author":{"gitId":"kevinxx88"},"content":"                    System.out.println(\"Hey Boss! Got it. I\u0027ve added this task for you:\");","lastModifiedDate":"2022-03-05"},{"lineNumber":248,"author":{"gitId":"kevinxx88"},"content":"                    System.out.println(taskIcon[counter].toString());","lastModifiedDate":"2022-03-05"},{"lineNumber":249,"author":{"gitId":"kevinxx88"},"content":"                    counter++;","lastModifiedDate":"2022-03-05"},{"lineNumber":250,"author":{"gitId":"kevinxx88"},"content":"                    System.out.println(\"Now you have \" + (counter) + \" tasks in total within the list.\");","lastModifiedDate":"2022-03-05"},{"lineNumber":251,"author":{"gitId":"kevinxx88"},"content":"                    separatingLine();","lastModifiedDate":"2022-03-12"},{"lineNumber":252,"author":{"gitId":"kevinxx88"},"content":"                }","lastModifiedDate":"2022-03-12"},{"lineNumber":253,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":254,"author":{"gitId":"kevinxx88"},"content":"                catch (DukeException e) {","lastModifiedDate":"2022-03-12"},{"lineNumber":255,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":256,"author":{"gitId":"kevinxx88"},"content":"                    if (e.getError().equals(\"Invalid Input (Event Description)\")) {","lastModifiedDate":"2022-03-12"},{"lineNumber":257,"author":{"gitId":"kevinxx88"},"content":"                        System.out.println(\"SORRY Boss! You have entered an invalid input (Missing Task Descriptions)!\\n\" +","lastModifiedDate":"2022-03-12"},{"lineNumber":258,"author":{"gitId":"kevinxx88"},"content":"                                \"Please enter the task description after \u0027event\u0027 for this entry!\\n\" +","lastModifiedDate":"2022-03-12"},{"lineNumber":259,"author":{"gitId":"kevinxx88"},"content":"                                \"Kindly try again, Boss!\");","lastModifiedDate":"2022-03-12"},{"lineNumber":260,"author":{"gitId":"kevinxx88"},"content":"                        separatingLine();","lastModifiedDate":"2022-03-12"},{"lineNumber":261,"author":{"gitId":"kevinxx88"},"content":"                    }","lastModifiedDate":"2022-03-12"},{"lineNumber":262,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":263,"author":{"gitId":"kevinxx88"},"content":"                    if (e.getError().equals(\"Missing Event Date/Period\")) {","lastModifiedDate":"2022-03-12"},{"lineNumber":264,"author":{"gitId":"kevinxx88"},"content":"                        System.out.println(\"SORRY Boss! You have entered an invalid input (Missing Date/Period)!\\n\" +","lastModifiedDate":"2022-03-12"},{"lineNumber":265,"author":{"gitId":"kevinxx88"},"content":"                                \"Please enter the event date/period with space before and after \u0027/at\u0027 for this entry!\\n\" +","lastModifiedDate":"2022-03-12"},{"lineNumber":266,"author":{"gitId":"kevinxx88"},"content":"                                \"Example: \u0027event clean house /at 22 March 2022, 2-6pm\u0027\\n\" +","lastModifiedDate":"2022-03-12"},{"lineNumber":267,"author":{"gitId":"kevinxx88"},"content":"                                \"Kindly try again, Boss!\");","lastModifiedDate":"2022-03-12"},{"lineNumber":268,"author":{"gitId":"kevinxx88"},"content":"                        separatingLine();","lastModifiedDate":"2022-03-12"},{"lineNumber":269,"author":{"gitId":"kevinxx88"},"content":"                    }","lastModifiedDate":"2022-03-12"},{"lineNumber":270,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":271,"author":{"gitId":"kevinxx88"},"content":"                    if (e.getError().equals(\"Invalid Format (Event)\")) {","lastModifiedDate":"2022-03-12"},{"lineNumber":272,"author":{"gitId":"kevinxx88"},"content":"                        System.out.println(\"SORRY Boss! You have entered an invalid input (Wrong Format)!\\n\" +","lastModifiedDate":"2022-03-12"},{"lineNumber":273,"author":{"gitId":"kevinxx88"},"content":"                                \"Please enter the event description \u0026 event date/period with space after \u0027event\u0027 \u0026 \u0027/at\u0027 for this entry!\\n\" +","lastModifiedDate":"2022-03-12"},{"lineNumber":274,"author":{"gitId":"kevinxx88"},"content":"                                \"Example: \u0027event clean house /at 22 March 2022, 2-6pm\u0027\\n\" +","lastModifiedDate":"2022-03-12"},{"lineNumber":275,"author":{"gitId":"kevinxx88"},"content":"                                \"Kindly try again, Boss!\");","lastModifiedDate":"2022-03-12"},{"lineNumber":276,"author":{"gitId":"kevinxx88"},"content":"                        separatingLine();","lastModifiedDate":"2022-03-12"},{"lineNumber":277,"author":{"gitId":"kevinxx88"},"content":"                    }","lastModifiedDate":"2022-03-12"},{"lineNumber":278,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":279,"author":{"gitId":"kevinxx88"},"content":"                }","lastModifiedDate":"2022-03-12"},{"lineNumber":280,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":281,"author":{"gitId":"kevinxx88"},"content":"            }","lastModifiedDate":"2022-03-05"},{"lineNumber":282,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":283,"author":{"gitId":"kevinxx88"},"content":"            //Add user input to task list:","lastModifiedDate":"2022-02-12"},{"lineNumber":284,"author":{"gitId":"kevinxx88"},"content":"            else {","lastModifiedDate":"2022-02-12"},{"lineNumber":285,"author":{"gitId":"kevinxx88"},"content":"                separatingLine();","lastModifiedDate":"2022-02-12"},{"lineNumber":286,"author":{"gitId":"kevinxx88"},"content":"                System.out.println(\"The below task has been added to your task list:\\n \" +","lastModifiedDate":"2022-02-12"},{"lineNumber":287,"author":{"gitId":"kevinxx88"},"content":"                        line);","lastModifiedDate":"2022-02-12"},{"lineNumber":288,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":289,"author":{"gitId":"kevinxx88"},"content":"                //assign to task list from input for printing out task description when request for printing lists:","lastModifiedDate":"2022-02-13"},{"lineNumber":290,"author":{"gitId":"kevinxx88"},"content":"                taskList[counter] \u003d line;","lastModifiedDate":"2022-02-12"},{"lineNumber":291,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":292,"author":{"gitId":"kevinxx88"},"content":"                //Add to task for separate icon tracking and print status mark:","lastModifiedDate":"2022-02-13"},{"lineNumber":293,"author":{"gitId":"kevinxx88"},"content":"                Task t \u003d new Task(line);","lastModifiedDate":"2022-02-13"},{"lineNumber":294,"author":{"gitId":"kevinxx88"},"content":"                t.description \u003d line;","lastModifiedDate":"2022-02-13"},{"lineNumber":295,"author":{"gitId":"kevinxx88"},"content":"                taskIcon[counter] \u003d t;","lastModifiedDate":"2022-02-13"},{"lineNumber":296,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":297,"author":{"gitId":"kevinxx88"},"content":"                //update counter to show sequence numbering when print result:","lastModifiedDate":"2022-02-13"},{"lineNumber":298,"author":{"gitId":"kevinxx88"},"content":"                separatingLine();","lastModifiedDate":"2022-02-12"},{"lineNumber":299,"author":{"gitId":"kevinxx88"},"content":"                counter \u003d counter + 1;","lastModifiedDate":"2022-02-12"},{"lineNumber":300,"author":{"gitId":"kevinxx88"},"content":"            }","lastModifiedDate":"2022-02-12"},{"lineNumber":301,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":302,"author":{"gitId":"kevinxx88"},"content":"        }","lastModifiedDate":"2022-02-12"},{"lineNumber":303,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":304,"author":{"gitId":"kevinxx88"},"content":"    }","lastModifiedDate":"2022-02-12"},{"lineNumber":305,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":312,"author":{"gitId":"kevinxx88"},"content":"        System.out.println(logo);","lastModifiedDate":"2022-02-12"},{"lineNumber":313,"author":{"gitId":"kevinxx88"},"content":"        separatingLine();","lastModifiedDate":"2022-02-12"},{"lineNumber":314,"author":{"gitId":"kevinxx88"},"content":"        System.out.println(\"Hello, Boss! This is Duke here!\\n\" +","lastModifiedDate":"2022-03-05"},{"lineNumber":315,"author":{"gitId":"kevinxx88"},"content":"                \"Your trusted personal task assistant!\\n\" +","lastModifiedDate":"2022-02-12"},{"lineNumber":316,"author":{"gitId":"kevinxx88"},"content":"                \"What can I do to assist you today, Boss?\\n\" +","lastModifiedDate":"2022-03-05"},{"lineNumber":317,"author":{"gitId":"kevinxx88"},"content":"                \"(Please input your task or type \u0027list\u0027 to retrieve your task list)\");","lastModifiedDate":"2022-02-12"},{"lineNumber":318,"author":{"gitId":"kevinxx88"},"content":"        separatingLine();","lastModifiedDate":"2022-02-12"},{"lineNumber":319,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":320,"author":{"gitId":"kevinxx88"},"content":"        // perform system logic","lastModifiedDate":"2022-02-12"},{"lineNumber":321,"author":{"gitId":"kevinxx88"},"content":"        system();","lastModifiedDate":"2022-02-12"},{"lineNumber":322,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":324,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-12"},{"lineNumber":325,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"kevinxx88":316,"-":9}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinxx88"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2022-03-12"},{"lineNumber":2,"author":{"gitId":"kevinxx88"},"content":"    private final String mistake;","lastModifiedDate":"2022-03-12"},{"lineNumber":3,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":4,"author":{"gitId":"kevinxx88"},"content":"    public DukeException (String mistake) { this.mistake \u003d mistake; }","lastModifiedDate":"2022-03-12"},{"lineNumber":5,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-12"},{"lineNumber":6,"author":{"gitId":"kevinxx88"},"content":"    public String getError() {","lastModifiedDate":"2022-03-12"},{"lineNumber":7,"author":{"gitId":"kevinxx88"},"content":"        return this.mistake;","lastModifiedDate":"2022-03-12"},{"lineNumber":8,"author":{"gitId":"kevinxx88"},"content":"    }","lastModifiedDate":"2022-03-12"},{"lineNumber":9,"author":{"gitId":"kevinxx88"},"content":"}","lastModifiedDate":"2022-03-12"}],"authorContributionMap":{"kevinxx88":9}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinxx88"},"content":"public class Event extends Task {","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"kevinxx88"},"content":"    protected String at;","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"kevinxx88"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"kevinxx88"},"content":"        super(description);","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"kevinxx88"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"kevinxx88"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"kevinxx88"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"kevinxx88"},"content":"    public String toString() {","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"kevinxx88"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2022-03-05"},{"lineNumber":13,"author":{"gitId":"kevinxx88"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":14,"author":{"gitId":"kevinxx88"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"kevinxx88":14}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinxx88"},"content":"public class Task {","lastModifiedDate":"2022-02-13"},{"lineNumber":2,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":3,"author":{"gitId":"kevinxx88"},"content":"    protected String description;","lastModifiedDate":"2022-02-13"},{"lineNumber":4,"author":{"gitId":"kevinxx88"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-02-13"},{"lineNumber":5,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":6,"author":{"gitId":"kevinxx88"},"content":"    public Task(String description) {","lastModifiedDate":"2022-02-13"},{"lineNumber":7,"author":{"gitId":"kevinxx88"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-02-13"},{"lineNumber":8,"author":{"gitId":"kevinxx88"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-02-13"},{"lineNumber":9,"author":{"gitId":"kevinxx88"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":10,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":11,"author":{"gitId":"kevinxx88"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-02-13"},{"lineNumber":12,"author":{"gitId":"kevinxx88"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2022-02-13"},{"lineNumber":13,"author":{"gitId":"kevinxx88"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":14,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":15,"author":{"gitId":"kevinxx88"},"content":"    //Mark as done","lastModifiedDate":"2022-02-13"},{"lineNumber":16,"author":{"gitId":"kevinxx88"},"content":"    public void markAsDone() {","lastModifiedDate":"2022-02-13"},{"lineNumber":17,"author":{"gitId":"kevinxx88"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-02-13"},{"lineNumber":18,"author":{"gitId":"kevinxx88"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":19,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":20,"author":{"gitId":"kevinxx88"},"content":"    //Mark as not done","lastModifiedDate":"2022-02-13"},{"lineNumber":21,"author":{"gitId":"kevinxx88"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2022-02-13"},{"lineNumber":22,"author":{"gitId":"kevinxx88"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-02-13"},{"lineNumber":23,"author":{"gitId":"kevinxx88"},"content":"    }","lastModifiedDate":"2022-02-13"},{"lineNumber":24,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-02-13"},{"lineNumber":25,"author":{"gitId":"kevinxx88"},"content":"    //Adding tod0 task at parent class","lastModifiedDate":"2022-03-05"},{"lineNumber":26,"author":{"gitId":"kevinxx88"},"content":"    public String toString() {","lastModifiedDate":"2022-03-05"},{"lineNumber":27,"author":{"gitId":"kevinxx88"},"content":"        return ( \"[\" + this.getStatusIcon() + \"] \" + description);","lastModifiedDate":"2022-03-05"},{"lineNumber":28,"author":{"gitId":"kevinxx88"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":29,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":30,"author":{"gitId":"kevinxx88"},"content":"}","lastModifiedDate":"2022-02-13"}],"authorContributionMap":{"kevinxx88":30}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kevinxx88"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-03-05"},{"lineNumber":2,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":3,"author":{"gitId":"kevinxx88"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-03-05"},{"lineNumber":4,"author":{"gitId":"kevinxx88"},"content":"        super(description);","lastModifiedDate":"2022-03-05"},{"lineNumber":5,"author":{"gitId":"kevinxx88"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":6,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":7,"author":{"gitId":"kevinxx88"},"content":"    @Override","lastModifiedDate":"2022-03-05"},{"lineNumber":8,"author":{"gitId":"kevinxx88"},"content":"    public String toString() {","lastModifiedDate":"2022-03-05"},{"lineNumber":9,"author":{"gitId":"kevinxx88"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-03-05"},{"lineNumber":10,"author":{"gitId":"kevinxx88"},"content":"    }","lastModifiedDate":"2022-03-05"},{"lineNumber":11,"author":{"gitId":"kevinxx88"},"content":"","lastModifiedDate":"2022-03-05"},{"lineNumber":12,"author":{"gitId":"kevinxx88"},"content":"}","lastModifiedDate":"2022-03-05"}],"authorContributionMap":{"kevinxx88":12}},{"path":"things/colors.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kevinxx88"},"content":"orange","lastModifiedDate":"2022-02-12"},{"lineNumber":2,"author":{"gitId":"kevinxx88"},"content":"yellow","lastModifiedDate":"2022-02-12"},{"lineNumber":3,"author":{"gitId":"kevinxx88"},"content":"blue","lastModifiedDate":"2022-02-12"}],"authorContributionMap":{"kevinxx88":3}},{"path":"things/fruits.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kevinxx88"},"content":"apple","lastModifiedDate":"2022-02-12"},{"lineNumber":2,"author":{"gitId":"kevinxx88"},"content":"oranges","lastModifiedDate":"2022-02-12"},{"lineNumber":3,"author":{"gitId":"kevinxx88"},"content":"mango","lastModifiedDate":"2022-02-12"},{"lineNumber":4,"author":{"gitId":"kevinxx88"},"content":"watermelon","lastModifiedDate":"2022-02-12"},{"lineNumber":5,"author":{"gitId":"kevinxx88"},"content":"pineapple","lastModifiedDate":"2022-02-12"},{"lineNumber":6,"author":{"gitId":"kevinxx88"},"content":"kiwi","lastModifiedDate":"2022-02-12"}],"authorContributionMap":{"kevinxx88":6}},{"path":"things/shapes.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kevinxx88"},"content":"circle","lastModifiedDate":"2022-02-12"},{"lineNumber":2,"author":{"gitId":"kevinxx88"},"content":"rectangle","lastModifiedDate":"2022-02-12"},{"lineNumber":3,"author":{"gitId":"kevinxx88"},"content":"cylinder","lastModifiedDate":"2022-02-12"}],"authorContributionMap":{"kevinxx88":3}}]
