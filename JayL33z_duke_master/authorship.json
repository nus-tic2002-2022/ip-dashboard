[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JayL33z"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-02-22"},{"lineNumber":2,"author":{"gitId":"JayL33z"},"content":"    protected String by;","lastModifiedDate":"2022-02-22"},{"lineNumber":3,"author":{"gitId":"JayL33z"},"content":"    ","lastModifiedDate":"2022-02-22"},{"lineNumber":4,"author":{"gitId":"JayL33z"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-02-22"},{"lineNumber":5,"author":{"gitId":"JayL33z"},"content":"        super(description); //call constructor of the Task superclass","lastModifiedDate":"2022-02-22"},{"lineNumber":6,"author":{"gitId":"JayL33z"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-02-22"},{"lineNumber":7,"author":{"gitId":"JayL33z"},"content":"        identity \u003d \"D\";","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"JayL33z"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":9,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":10,"author":{"gitId":"JayL33z"},"content":"    @Override","lastModifiedDate":"2022-02-22"},{"lineNumber":11,"author":{"gitId":"JayL33z"},"content":"    public String getDescription() {","lastModifiedDate":"2022-02-22"},{"lineNumber":12,"author":{"gitId":"JayL33z"},"content":"        return \"[D]\" +\"[\"+ super.getStatusIcon() +\"] \"+ super.getDescription() + \" (by: \" + by + \")\";","lastModifiedDate":"2022-02-22"},{"lineNumber":13,"author":{"gitId":"JayL33z"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":14,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"JayL33z"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"JayL33z"},"content":"    public String getDescriptionLite() {","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"JayL33z"},"content":"        return super.getDescription();","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"JayL33z"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"JayL33z"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"JayL33z"},"content":"    public String getDateTime() { return this.by; }","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"JayL33z"},"content":"}","lastModifiedDate":"2022-02-22"}],"authorContributionMap":{"JayL33z":22}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JayL33z"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-20"},{"lineNumber":2,"author":{"gitId":"JayL33z"},"content":"import java.lang.String;","lastModifiedDate":"2022-02-20"},{"lineNumber":3,"author":{"gitId":"JayL33z"},"content":"import java.lang.Exception;","lastModifiedDate":"2022-03-06"},{"lineNumber":4,"author":{"gitId":"JayL33z"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-03-06"},{"lineNumber":5,"author":{"gitId":"JayL33z"},"content":"import java.io.File;","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"JayL33z"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"JayL33z"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"JayL33z"},"content":"import java.io.IOException;","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":12,"author":{"gitId":"JayL33z"},"content":"    //this method preloads the data from the stored file","lastModifiedDate":"2022-03-26"},{"lineNumber":13,"author":{"gitId":"JayL33z"},"content":"    private static ArrayList\u003cTask\u003e readFileContents(String filePath) throws FileNotFoundException {","lastModifiedDate":"2022-03-26"},{"lineNumber":14,"author":{"gitId":"JayL33z"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2022-03-06"},{"lineNumber":15,"author":{"gitId":"JayL33z"},"content":"        File f \u003d new File(filePath); // create a File for the given file path","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"JayL33z"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"JayL33z"},"content":"        //Assume that the format and syntax of duke.txt is correct","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"JayL33z"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"JayL33z"},"content":"            String input \u003d s.nextLine(); //read line","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"JayL33z"},"content":"            String in[] \u003d input.split(\"\\\\s\\\\|\\\\s\"); //escape whitespace and escape |","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"JayL33z"},"content":"            String option \u003d in[0]; //get option","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"JayL33z"},"content":"            String done \u003d in[1]; //get done (1 means mark and 0 unmark as done)","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"JayL33z"},"content":"            String description \u003d in[2]; //get description","lastModifiedDate":"2022-03-26"},{"lineNumber":25,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":26,"author":{"gitId":"JayL33z"},"content":"            /* for debugging","lastModifiedDate":"2022-03-26"},{"lineNumber":27,"author":{"gitId":"JayL33z"},"content":"            System.out.println(\"option is \"+ option );","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"JayL33z"},"content":"            System.out.println(\"done is \"+ done );","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"JayL33z"},"content":"            System.out.println(\"description is \"+ description);","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"JayL33z"},"content":"             */","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":33,"author":{"gitId":"JayL33z"},"content":"            if (option.equals(\"T\")) { //handle todo","lastModifiedDate":"2022-03-26"},{"lineNumber":34,"author":{"gitId":"JayL33z"},"content":"                list.add(new Todo(in[2])); //creates new todo","lastModifiedDate":"2022-03-26"},{"lineNumber":35,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":36,"author":{"gitId":"JayL33z"},"content":"                if (done.equals(\"1\")) {","lastModifiedDate":"2022-03-26"},{"lineNumber":37,"author":{"gitId":"JayL33z"},"content":"                    list.get(list.size() - 1).markDone(); //mark the task","lastModifiedDate":"2022-03-26"},{"lineNumber":38,"author":{"gitId":"JayL33z"},"content":"                } else if (done.equals(\"0\")) {","lastModifiedDate":"2022-03-26"},{"lineNumber":39,"author":{"gitId":"JayL33z"},"content":"                    list.get(list.size() - 1).unmarkDone(); //unmark the task","lastModifiedDate":"2022-03-26"},{"lineNumber":40,"author":{"gitId":"JayL33z"},"content":"                }","lastModifiedDate":"2022-03-26"},{"lineNumber":41,"author":{"gitId":"JayL33z"},"content":"            } else if (option.equals(\"D\")) { //handle deadline","lastModifiedDate":"2022-03-26"},{"lineNumber":42,"author":{"gitId":"JayL33z"},"content":"                list.add(new Deadline(in[2], in[3])); //creates new Deadline/Event where in[3] is the date/time","lastModifiedDate":"2022-03-26"},{"lineNumber":43,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":44,"author":{"gitId":"JayL33z"},"content":"                if (done.equals(\"1\")) {","lastModifiedDate":"2022-03-26"},{"lineNumber":45,"author":{"gitId":"JayL33z"},"content":"                    list.get(list.size() - 1).markDone(); //mark the task","lastModifiedDate":"2022-03-26"},{"lineNumber":46,"author":{"gitId":"JayL33z"},"content":"                } else if (done.equals(\"0\")) {","lastModifiedDate":"2022-03-26"},{"lineNumber":47,"author":{"gitId":"JayL33z"},"content":"                    list.get(list.size() - 1).unmarkDone(); //unmark the task","lastModifiedDate":"2022-03-26"},{"lineNumber":48,"author":{"gitId":"JayL33z"},"content":"                }","lastModifiedDate":"2022-03-26"},{"lineNumber":49,"author":{"gitId":"JayL33z"},"content":"            } else if (option.equals(\"E\")) { //handle event","lastModifiedDate":"2022-03-26"},{"lineNumber":50,"author":{"gitId":"JayL33z"},"content":"                list.add(new Event(in[2], in[3])); //creates new Deadline/Event where in[3] is the date/time","lastModifiedDate":"2022-03-26"},{"lineNumber":51,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":52,"author":{"gitId":"JayL33z"},"content":"                if (done.equals(\"1\")) list.get(list.size() - 1).markDone(); //mark the task","lastModifiedDate":"2022-03-26"},{"lineNumber":53,"author":{"gitId":"JayL33z"},"content":"                else if (done.equals(\"0\")) list.get(list.size() - 1).unmarkDone(); //unmark the task","lastModifiedDate":"2022-03-26"},{"lineNumber":54,"author":{"gitId":"JayL33z"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":55,"author":{"gitId":"JayL33z"},"content":"            //System.out.println(s.nextLine());","lastModifiedDate":"2022-03-26"},{"lineNumber":56,"author":{"gitId":"JayL33z"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":57,"author":{"gitId":"JayL33z"},"content":"        return list;","lastModifiedDate":"2022-03-26"},{"lineNumber":58,"author":{"gitId":"JayL33z"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":59,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":60,"author":{"gitId":"JayL33z"},"content":"    //this method writes the data to the stored file (it rewrites the whole file from the ArrayList)","lastModifiedDate":"2022-03-26"},{"lineNumber":61,"author":{"gitId":"JayL33z"},"content":"    private static void storeFileContents(String filePath, ArrayList\u003cTask\u003e list) throws IOException {","lastModifiedDate":"2022-03-26"},{"lineNumber":62,"author":{"gitId":"JayL33z"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2022-03-26"},{"lineNumber":63,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":64,"author":{"gitId":"JayL33z"},"content":"        String output \u003d \"\"; //output to overwrite the text file","lastModifiedDate":"2022-03-26"},{"lineNumber":65,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":66,"author":{"gitId":"JayL33z"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2022-03-26"},{"lineNumber":67,"author":{"gitId":"JayL33z"},"content":"            String description \u003d list.get(i).getDescription(); // get description from list","lastModifiedDate":"2022-03-26"},{"lineNumber":68,"author":{"gitId":"JayL33z"},"content":"            String task \u003d list.get(i).getIdentity(); // get whether it is a Todo, Deadline or Event","lastModifiedDate":"2022-03-26"},{"lineNumber":69,"author":{"gitId":"JayL33z"},"content":"            String done \u003d \"0\"; // get whether task is complete done (1 means mark and 0 unmark as done) from list","lastModifiedDate":"2022-03-26"},{"lineNumber":70,"author":{"gitId":"JayL33z"},"content":"            String dateTime;","lastModifiedDate":"2022-03-26"},{"lineNumber":71,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":72,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":73,"author":{"gitId":"JayL33z"},"content":"            // if task is done","lastModifiedDate":"2022-03-26"},{"lineNumber":74,"author":{"gitId":"JayL33z"},"content":"            if (list.get(i).getStatusIcon().equals(\"X\")) {","lastModifiedDate":"2022-03-26"},{"lineNumber":75,"author":{"gitId":"JayL33z"},"content":"                done \u003d \"1\";","lastModifiedDate":"2022-03-26"},{"lineNumber":76,"author":{"gitId":"JayL33z"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":77,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":78,"author":{"gitId":"JayL33z"},"content":"            // three types of tasks to write to file","lastModifiedDate":"2022-03-26"},{"lineNumber":79,"author":{"gitId":"JayL33z"},"content":"            if (task.equals(\"T\")) {","lastModifiedDate":"2022-03-26"},{"lineNumber":80,"author":{"gitId":"JayL33z"},"content":"                fw.write(\"T | \" + done + \" | \" + list.get(i).getDescriptionLite());","lastModifiedDate":"2022-03-26"},{"lineNumber":81,"author":{"gitId":"JayL33z"},"content":"            } else if (task.equals(\"D\")) {","lastModifiedDate":"2022-03-26"},{"lineNumber":82,"author":{"gitId":"JayL33z"},"content":"                dateTime \u003d list.get(i).getDateTime();","lastModifiedDate":"2022-03-26"},{"lineNumber":83,"author":{"gitId":"JayL33z"},"content":"                fw.write(\"D | \" + done + \" | \" + list.get(i).getDescriptionLite() + \" | \" + dateTime);","lastModifiedDate":"2022-03-26"},{"lineNumber":84,"author":{"gitId":"JayL33z"},"content":"            } else if (task.equals(\"E\")) {","lastModifiedDate":"2022-03-26"},{"lineNumber":85,"author":{"gitId":"JayL33z"},"content":"                dateTime \u003d list.get(i).getDateTime();","lastModifiedDate":"2022-03-26"},{"lineNumber":86,"author":{"gitId":"JayL33z"},"content":"                fw.write(\"E | \" + done + \" | \" + list.get(i).getDescriptionLite() + \" | \" + dateTime);","lastModifiedDate":"2022-03-26"},{"lineNumber":87,"author":{"gitId":"JayL33z"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":88,"author":{"gitId":"JayL33z"},"content":"            fw.write(\"\\n\"); //next line","lastModifiedDate":"2022-03-26"},{"lineNumber":89,"author":{"gitId":"JayL33z"},"content":"        } //end of loop","lastModifiedDate":"2022-03-26"},{"lineNumber":90,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":91,"author":{"gitId":"JayL33z"},"content":"        fw.close();","lastModifiedDate":"2022-03-26"},{"lineNumber":92,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":93,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":94,"author":{"gitId":"JayL33z"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":95,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":96,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-03-26"},{"lineNumber":98,"author":{"gitId":"JayL33z"},"content":"        Scanner scanner \u003d new Scanner(System.in); //user input scanner","lastModifiedDate":"2022-03-26"},{"lineNumber":99,"author":{"gitId":"JayL33z"},"content":"        ArrayList\u003cTask\u003e list; //declare new arraylist","lastModifiedDate":"2022-03-26"},{"lineNumber":100,"author":{"gitId":"JayL33z"},"content":"        String filePath \u003d \"data/duke.txt\";","lastModifiedDate":"2022-03-26"},{"lineNumber":101,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":102,"author":{"gitId":"JayL33z"},"content":"        //this section handles the loading of the data from the hard disk when Duke starts up (if the file exists)","lastModifiedDate":"2022-03-26"},{"lineNumber":103,"author":{"gitId":"JayL33z"},"content":"        try {","lastModifiedDate":"2022-03-26"},{"lineNumber":104,"author":{"gitId":"JayL33z"},"content":"            list \u003d readFileContents(filePath); //use preloaded data (tested on Windows 10 machine)","lastModifiedDate":"2022-03-26"},{"lineNumber":105,"author":{"gitId":"JayL33z"},"content":"            System.out.println(\"The data from data/duke.txt has been preloaded.\");","lastModifiedDate":"2022-03-26"},{"lineNumber":106,"author":{"gitId":"JayL33z"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-03-26"},{"lineNumber":107,"author":{"gitId":"JayL33z"},"content":"            System.out.println(\"The file or folder (data/duke.txt) for preloading data is not found.\");","lastModifiedDate":"2022-03-26"},{"lineNumber":108,"author":{"gitId":"JayL33z"},"content":"            list \u003d new ArrayList\u003cTask\u003e(); //create new arraylist if file not found","lastModifiedDate":"2022-03-26"},{"lineNumber":109,"author":{"gitId":"JayL33z"},"content":"        }","lastModifiedDate":"2022-03-26"},{"lineNumber":110,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":117,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":118,"author":{"gitId":"JayL33z"},"content":"        System.out.println(\"\\t____________________________________________________________\\n\"","lastModifiedDate":"2022-02-20"},{"lineNumber":119,"author":{"gitId":"JayL33z"},"content":"        + \"\\t Hello! I\u0027m Duke\\n\"","lastModifiedDate":"2022-02-20"},{"lineNumber":120,"author":{"gitId":"JayL33z"},"content":"        + \"\\t What can I do for you?\\n\"","lastModifiedDate":"2022-02-20"},{"lineNumber":121,"author":{"gitId":"JayL33z"},"content":"        +\"\\t____________________________________________________________\\n\");","lastModifiedDate":"2022-02-20"},{"lineNumber":122,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":123,"author":{"gitId":"JayL33z"},"content":"        String input;","lastModifiedDate":"2022-02-20"},{"lineNumber":124,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":125,"author":{"gitId":"JayL33z"},"content":"        while (true) {","lastModifiedDate":"2022-02-20"},{"lineNumber":126,"author":{"gitId":"JayL33z"},"content":"            input \u003d scanner.nextLine();","lastModifiedDate":"2022-02-20"},{"lineNumber":127,"author":{"gitId":"JayL33z"},"content":"            String in[] \u003d input.split(\" \", 2);","lastModifiedDate":"2022-03-06"},{"lineNumber":128,"author":{"gitId":"JayL33z"},"content":"            String option \u003d in[0]; //get option (enum not neccessary)","lastModifiedDate":"2022-03-26"},{"lineNumber":129,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":130,"author":{"gitId":"JayL33z"},"content":"            if(option.equals(\"bye\")){","lastModifiedDate":"2022-03-06"},{"lineNumber":131,"author":{"gitId":"JayL33z"},"content":"                break;","lastModifiedDate":"2022-02-20"},{"lineNumber":132,"author":{"gitId":"JayL33z"},"content":"            }","lastModifiedDate":"2022-02-20"},{"lineNumber":133,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":134,"author":{"gitId":"JayL33z"},"content":"            else if(option.equals(\"list\")){ //output the list of tasks","lastModifiedDate":"2022-03-06"},{"lineNumber":135,"author":{"gitId":"JayL33z"},"content":"                System.out.print(\"\\t____________________________________________________________\\n\"","lastModifiedDate":"2022-02-22"},{"lineNumber":136,"author":{"gitId":"JayL33z"},"content":"                    + \"\\t Here are the tasks in your list:\\n\");","lastModifiedDate":"2022-02-22"},{"lineNumber":137,"author":{"gitId":"JayL33z"},"content":"                    for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2022-03-06"},{"lineNumber":138,"author":{"gitId":"JayL33z"},"content":"                        System.out.print(\"\\t \" + (i + 1) + \".\" + list.get(i).getDescription() + \"\\n\");","lastModifiedDate":"2022-03-06"},{"lineNumber":139,"author":{"gitId":"JayL33z"},"content":"                    }","lastModifiedDate":"2022-02-21"},{"lineNumber":140,"author":{"gitId":"JayL33z"},"content":"                System.out.print(\"\\t____________________________________________________________\\n\");","lastModifiedDate":"2022-02-22"},{"lineNumber":141,"author":{"gitId":"JayL33z"},"content":"            }","lastModifiedDate":"2022-02-21"},{"lineNumber":142,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":143,"author":{"gitId":"JayL33z"},"content":"            else if(option.equals(\"mark\")){ //mark a task as done","lastModifiedDate":"2022-03-06"},{"lineNumber":144,"author":{"gitId":"JayL33z"},"content":"                try {","lastModifiedDate":"2022-03-06"},{"lineNumber":145,"author":{"gitId":"JayL33z"},"content":"                    int taskToUpdate \u003d Integer.parseInt(in[1]); //get the task number to update","lastModifiedDate":"2022-03-06"},{"lineNumber":146,"author":{"gitId":"JayL33z"},"content":"                    list.get(taskToUpdate - 1).markDone(); //mark the task as done","lastModifiedDate":"2022-03-06"},{"lineNumber":147,"author":{"gitId":"JayL33z"},"content":"                    System.out.println(\"\\t____________________________________________________________\\n\"","lastModifiedDate":"2022-02-22"},{"lineNumber":148,"author":{"gitId":"JayL33z"},"content":"                            + \"\\t Nice! I\u0027ve marked this task as done: \\n\"","lastModifiedDate":"2022-02-22"},{"lineNumber":149,"author":{"gitId":"JayL33z"},"content":"                            + \"\\t \" + list.get(taskToUpdate - 1).getDescription() + \"\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":150,"author":{"gitId":"JayL33z"},"content":"                            + \"\\t____________________________________________________________\\n\");","lastModifiedDate":"2022-02-22"},{"lineNumber":151,"author":{"gitId":"JayL33z"},"content":"                }","lastModifiedDate":"2022-02-20"},{"lineNumber":152,"author":{"gitId":"JayL33z"},"content":"                catch (ArrayIndexOutOfBoundsException e){","lastModifiedDate":"2022-03-06"},{"lineNumber":153,"author":{"gitId":"JayL33z"},"content":"                    System.out.println(\"\\t____________________________________________________________\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":154,"author":{"gitId":"JayL33z"},"content":"                            + \"\\t OOPS!!! The description of a mark cannot be empty.\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":155,"author":{"gitId":"JayL33z"},"content":"                            + \"\\t____________________________________________________________\\n\");","lastModifiedDate":"2022-03-06"},{"lineNumber":156,"author":{"gitId":"JayL33z"},"content":"                }","lastModifiedDate":"2022-03-06"},{"lineNumber":157,"author":{"gitId":"JayL33z"},"content":"            }","lastModifiedDate":"2022-03-06"},{"lineNumber":158,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":159,"author":{"gitId":"JayL33z"},"content":"            else if(option.equals(\"unmark\")){ //unmark","lastModifiedDate":"2022-03-06"},{"lineNumber":160,"author":{"gitId":"JayL33z"},"content":"                try {","lastModifiedDate":"2022-03-06"},{"lineNumber":161,"author":{"gitId":"JayL33z"},"content":"                    int taskToUpdate \u003d Integer.parseInt(in[1]); //get the task number to update","lastModifiedDate":"2022-03-06"},{"lineNumber":162,"author":{"gitId":"JayL33z"},"content":"                    list.get(taskToUpdate - 1).unmarkDone();","lastModifiedDate":"2022-03-06"},{"lineNumber":163,"author":{"gitId":"JayL33z"},"content":"                    System.out.println(\"\\t____________________________________________________________\\n\"","lastModifiedDate":"2022-02-22"},{"lineNumber":164,"author":{"gitId":"JayL33z"},"content":"                            + \"\\t OK, I\u0027ve marked this task as not done yet: \\n\"","lastModifiedDate":"2022-02-22"},{"lineNumber":165,"author":{"gitId":"JayL33z"},"content":"                            + \"\\t \"+ list.get(taskToUpdate - 1).getDescription() +\"\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":166,"author":{"gitId":"JayL33z"},"content":"                            + \"\\t____________________________________________________________\\n\");","lastModifiedDate":"2022-02-22"},{"lineNumber":167,"author":{"gitId":"JayL33z"},"content":"                }","lastModifiedDate":"2022-03-06"},{"lineNumber":168,"author":{"gitId":"JayL33z"},"content":"                catch (ArrayIndexOutOfBoundsException e){","lastModifiedDate":"2022-03-06"},{"lineNumber":169,"author":{"gitId":"JayL33z"},"content":"                    System.out.println(\"\\t____________________________________________________________\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":170,"author":{"gitId":"JayL33z"},"content":"                            + \"\\t OOPS!!! The description of a unmark cannot be empty.\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":171,"author":{"gitId":"JayL33z"},"content":"                            + \"\\t____________________________________________________________\\n\");","lastModifiedDate":"2022-03-06"},{"lineNumber":172,"author":{"gitId":"JayL33z"},"content":"                }","lastModifiedDate":"2022-03-06"},{"lineNumber":173,"author":{"gitId":"JayL33z"},"content":"            }","lastModifiedDate":"2022-02-22"},{"lineNumber":174,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":175,"author":{"gitId":"JayL33z"},"content":"            else if(option.equals(\"todo\")){ //handle todo","lastModifiedDate":"2022-03-06"},{"lineNumber":176,"author":{"gitId":"JayL33z"},"content":"                try {","lastModifiedDate":"2022-03-06"},{"lineNumber":177,"author":{"gitId":"JayL33z"},"content":"                    //remove leading and trailing spaces in description","lastModifiedDate":"2022-03-26"},{"lineNumber":178,"author":{"gitId":"JayL33z"},"content":"                    in[1] \u003d in[1].trim();","lastModifiedDate":"2022-03-26"},{"lineNumber":179,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":180,"author":{"gitId":"JayL33z"},"content":"                    list.add(new Todo(in[1])); //creates new todo","lastModifiedDate":"2022-03-06"},{"lineNumber":181,"author":{"gitId":"JayL33z"},"content":"                    System.out.println(\"\\t____________________________________________________________\\n\"","lastModifiedDate":"2022-02-22"},{"lineNumber":182,"author":{"gitId":"JayL33z"},"content":"                            + \"\\t Got it. I\u0027ve added this task: \\n\"","lastModifiedDate":"2022-02-22"},{"lineNumber":183,"author":{"gitId":"JayL33z"},"content":"                            + \"\\t  \" + list.get(list.size() - 1).getDescription() + \"\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":184,"author":{"gitId":"JayL33z"},"content":"                            + \"\\t Now you have \" + list.size() + \" tasks in the list.\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":185,"author":{"gitId":"JayL33z"},"content":"                            + \"\\t____________________________________________________________\\n\");","lastModifiedDate":"2022-02-22"},{"lineNumber":186,"author":{"gitId":"JayL33z"},"content":"                } catch (ArrayIndexOutOfBoundsException e){","lastModifiedDate":"2022-03-06"},{"lineNumber":187,"author":{"gitId":"JayL33z"},"content":"                    System.out.println(\"\\t____________________________________________________________\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":188,"author":{"gitId":"JayL33z"},"content":"                            + \"\\t OOPS!!! The description of a todo cannot be empty.\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":189,"author":{"gitId":"JayL33z"},"content":"                            + \"\\t____________________________________________________________\\n\");","lastModifiedDate":"2022-03-06"},{"lineNumber":190,"author":{"gitId":"JayL33z"},"content":"                }","lastModifiedDate":"2022-03-06"},{"lineNumber":191,"author":{"gitId":"JayL33z"},"content":"            }","lastModifiedDate":"2022-02-22"},{"lineNumber":192,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":193,"author":{"gitId":"JayL33z"},"content":"            else if(option.equals(\"deadline\")){ //handle deadline","lastModifiedDate":"2022-03-06"},{"lineNumber":194,"author":{"gitId":"JayL33z"},"content":"                try {","lastModifiedDate":"2022-03-06"},{"lineNumber":195,"author":{"gitId":"JayL33z"},"content":"                    String arr[] \u003d in[1].split(\"/by\", 2); //to get description and by","lastModifiedDate":"2022-03-06"},{"lineNumber":196,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":197,"author":{"gitId":"JayL33z"},"content":"                    //remove leading and trailing spaces in description and by","lastModifiedDate":"2022-03-26"},{"lineNumber":198,"author":{"gitId":"JayL33z"},"content":"                    arr[0] \u003d arr[0].trim();","lastModifiedDate":"2022-03-26"},{"lineNumber":199,"author":{"gitId":"JayL33z"},"content":"                    arr[1] \u003d arr[1].trim();","lastModifiedDate":"2022-03-26"},{"lineNumber":200,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":201,"author":{"gitId":"JayL33z"},"content":"                    list.add(new Deadline(arr[0], arr[1])); //creates new Deadline","lastModifiedDate":"2022-03-06"},{"lineNumber":202,"author":{"gitId":"JayL33z"},"content":"                    System.out.println(\"\\t____________________________________________________________\\n\"","lastModifiedDate":"2022-02-22"},{"lineNumber":203,"author":{"gitId":"JayL33z"},"content":"                            + \"\\t Got it. I\u0027ve added this task: \\n\"","lastModifiedDate":"2022-02-22"},{"lineNumber":204,"author":{"gitId":"JayL33z"},"content":"                            + \"\\t  \" + list.get(list.size() - 1).getDescription() + \"\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":205,"author":{"gitId":"JayL33z"},"content":"                            + \"\\t Now you have \" + list.size() + \" tasks in the list.\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":206,"author":{"gitId":"JayL33z"},"content":"                            + \"\\t____________________________________________________________\\n\");","lastModifiedDate":"2022-02-22"},{"lineNumber":207,"author":{"gitId":"JayL33z"},"content":"                } catch (ArrayIndexOutOfBoundsException e){","lastModifiedDate":"2022-03-06"},{"lineNumber":208,"author":{"gitId":"JayL33z"},"content":"                    System.out.println(\"\\t____________________________________________________________\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":209,"author":{"gitId":"JayL33z"},"content":"                            + \"\\t OOPS!!! The description of a deadline cannot be empty.\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":210,"author":{"gitId":"JayL33z"},"content":"                            + \"\\t____________________________________________________________\\n\");","lastModifiedDate":"2022-03-06"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2019-07-29"},{"lineNumber":212,"author":{"gitId":"JayL33z"},"content":"            }","lastModifiedDate":"2022-03-06"},{"lineNumber":213,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":214,"author":{"gitId":"JayL33z"},"content":"            else if(option.equals(\"event\")){ //handle Event","lastModifiedDate":"2022-03-06"},{"lineNumber":215,"author":{"gitId":"JayL33z"},"content":"                try {","lastModifiedDate":"2022-03-06"},{"lineNumber":216,"author":{"gitId":"JayL33z"},"content":"                    String arr[] \u003d in[1].split(\"/at\", 2); //to get description and at","lastModifiedDate":"2022-03-06"},{"lineNumber":217,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":218,"author":{"gitId":"JayL33z"},"content":"                    //remove leading and trailing spaces in description and by","lastModifiedDate":"2022-03-26"},{"lineNumber":219,"author":{"gitId":"JayL33z"},"content":"                    arr[0] \u003d arr[0].trim();","lastModifiedDate":"2022-03-26"},{"lineNumber":220,"author":{"gitId":"JayL33z"},"content":"                    arr[1] \u003d arr[1].trim();","lastModifiedDate":"2022-03-26"},{"lineNumber":221,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":222,"author":{"gitId":"JayL33z"},"content":"                    list.add(new Event(arr[0], arr[1])); //creates new Event","lastModifiedDate":"2022-03-06"},{"lineNumber":223,"author":{"gitId":"JayL33z"},"content":"                    System.out.println(\"\\t____________________________________________________________\\n\"","lastModifiedDate":"2022-02-20"},{"lineNumber":224,"author":{"gitId":"JayL33z"},"content":"                            + \"\\t Got it. I\u0027ve added this task: \\n\"","lastModifiedDate":"2022-02-22"},{"lineNumber":225,"author":{"gitId":"JayL33z"},"content":"                            + \"\\t  \" + list.get(list.size() - 1).getDescription() + \"\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":226,"author":{"gitId":"JayL33z"},"content":"                            + \"\\t Now you have \" + list.size() + \" tasks in the list.\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":227,"author":{"gitId":"JayL33z"},"content":"                            + \"\\t____________________________________________________________\\n\");","lastModifiedDate":"2022-02-20"},{"lineNumber":228,"author":{"gitId":"JayL33z"},"content":"                } catch (ArrayIndexOutOfBoundsException e){","lastModifiedDate":"2022-03-06"},{"lineNumber":229,"author":{"gitId":"JayL33z"},"content":"                    System.out.println(\"\\t____________________________________________________________\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":230,"author":{"gitId":"JayL33z"},"content":"                            + \"\\t OOPS!!! The description of an event cannot be empty.\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":231,"author":{"gitId":"JayL33z"},"content":"                            + \"\\t____________________________________________________________\\n\");","lastModifiedDate":"2022-03-06"},{"lineNumber":232,"author":{"gitId":"JayL33z"},"content":"                }","lastModifiedDate":"2022-03-06"},{"lineNumber":233,"author":{"gitId":"JayL33z"},"content":"            }","lastModifiedDate":"2022-02-22"},{"lineNumber":234,"author":{"gitId":"JayL33z"},"content":"            else if(option.equals(\"delete\")){ //handle delete","lastModifiedDate":"2022-03-06"},{"lineNumber":235,"author":{"gitId":"JayL33z"},"content":"                try {","lastModifiedDate":"2022-03-06"},{"lineNumber":236,"author":{"gitId":"JayL33z"},"content":"                    int taskToDelete \u003d Integer.parseInt(in[1]); //get the task number to delete","lastModifiedDate":"2022-03-06"},{"lineNumber":237,"author":{"gitId":"JayL33z"},"content":"                    System.out.println(\"\\t____________________________________________________________\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":238,"author":{"gitId":"JayL33z"},"content":"                            + \"\\t Noted. I\u0027ve removed this task: \\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":239,"author":{"gitId":"JayL33z"},"content":"                            + \"\\t  \" + list.get(taskToDelete - 1).getDescription() + \"\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":240,"author":{"gitId":"JayL33z"},"content":"                            + \"\\t Now you have \" + (list.size() - 1) + \" tasks in the list.\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":241,"author":{"gitId":"JayL33z"},"content":"                            + \"\\t____________________________________________________________\\n\");","lastModifiedDate":"2022-03-06"},{"lineNumber":242,"author":{"gitId":"JayL33z"},"content":"                    list.remove(taskToDelete - 1); //deletes a task","lastModifiedDate":"2022-03-06"},{"lineNumber":243,"author":{"gitId":"JayL33z"},"content":"                } catch (ArrayIndexOutOfBoundsException e){","lastModifiedDate":"2022-03-06"},{"lineNumber":244,"author":{"gitId":"JayL33z"},"content":"                    System.out.println(\"\\t____________________________________________________________\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":245,"author":{"gitId":"JayL33z"},"content":"                            + \"\\t OOPS!!! The description of a delete cannot be empty.\\n\"","lastModifiedDate":"2022-03-06"},{"lineNumber":246,"author":{"gitId":"JayL33z"},"content":"                            + \"\\t____________________________________________________________\\n\");","lastModifiedDate":"2022-03-06"},{"lineNumber":247,"author":{"gitId":"JayL33z"},"content":"                }","lastModifiedDate":"2022-03-06"},{"lineNumber":248,"author":{"gitId":"JayL33z"},"content":"            }","lastModifiedDate":"2022-03-06"},{"lineNumber":249,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":250,"author":{"gitId":"JayL33z"},"content":"            else{ // handles unrecognized input","lastModifiedDate":"2022-02-22"},{"lineNumber":251,"author":{"gitId":"JayL33z"},"content":"                System.out.println(\"\\t____________________________________________________________\\n\"","lastModifiedDate":"2022-02-22"},{"lineNumber":252,"author":{"gitId":"JayL33z"},"content":"                        +\"\\t  OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\"","lastModifiedDate":"2022-02-22"},{"lineNumber":253,"author":{"gitId":"JayL33z"},"content":"                        +\"\\t____________________________________________________________\\n\");","lastModifiedDate":"2022-02-22"},{"lineNumber":254,"author":{"gitId":"JayL33z"},"content":"            }","lastModifiedDate":"2022-02-20"},{"lineNumber":255,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-03-06"},{"lineNumber":256,"author":{"gitId":"JayL33z"},"content":"            //this part writes file","lastModifiedDate":"2022-03-26"},{"lineNumber":257,"author":{"gitId":"JayL33z"},"content":"            try{","lastModifiedDate":"2022-03-26"},{"lineNumber":258,"author":{"gitId":"JayL33z"},"content":"                storeFileContents(filePath, list); //store fileContent","lastModifiedDate":"2022-03-26"},{"lineNumber":259,"author":{"gitId":"JayL33z"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-03-26"},{"lineNumber":260,"author":{"gitId":"JayL33z"},"content":"                System.out.println(\"Something went wrong while writing the file\");","lastModifiedDate":"2022-03-26"},{"lineNumber":261,"author":{"gitId":"JayL33z"},"content":"            }","lastModifiedDate":"2022-03-26"},{"lineNumber":262,"author":{"gitId":"JayL33z"},"content":"            ","lastModifiedDate":"2022-03-26"},{"lineNumber":263,"author":{"gitId":"JayL33z"},"content":"        }","lastModifiedDate":"2022-02-20"},{"lineNumber":264,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":265,"author":{"gitId":"JayL33z"},"content":"        System.out.println(\"\\t____________________________________________________________\\n\"","lastModifiedDate":"2022-02-20"},{"lineNumber":266,"author":{"gitId":"JayL33z"},"content":"                + \"\\t Bye. Hope to see you again soon!\\n\"","lastModifiedDate":"2022-02-20"},{"lineNumber":267,"author":{"gitId":"JayL33z"},"content":"                +\"\\t____________________________________________________________\\n\");","lastModifiedDate":"2022-02-20"},{"lineNumber":268,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-02-20"},{"lineNumber":270,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-02-20"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"JayL33z":260,"-":11}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JayL33z"},"content":"public class Event extends Task {","lastModifiedDate":"2022-02-22"},{"lineNumber":2,"author":{"gitId":"JayL33z"},"content":"    protected String at;","lastModifiedDate":"2022-02-22"},{"lineNumber":3,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":4,"author":{"gitId":"JayL33z"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-02-22"},{"lineNumber":5,"author":{"gitId":"JayL33z"},"content":"        super(description); //call constructor of the Task superclass","lastModifiedDate":"2022-02-22"},{"lineNumber":6,"author":{"gitId":"JayL33z"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-02-22"},{"lineNumber":7,"author":{"gitId":"JayL33z"},"content":"        identity \u003d \"E\";","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"JayL33z"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":9,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":10,"author":{"gitId":"JayL33z"},"content":"    @Override","lastModifiedDate":"2022-02-22"},{"lineNumber":11,"author":{"gitId":"JayL33z"},"content":"    public String getDescription() {","lastModifiedDate":"2022-02-22"},{"lineNumber":12,"author":{"gitId":"JayL33z"},"content":"        return \"[E]\" +\"[\"+ super.getStatusIcon() +\"] \"+ super.getDescription() + \" (at: \" + at + \")\";","lastModifiedDate":"2022-02-22"},{"lineNumber":13,"author":{"gitId":"JayL33z"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":14,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":15,"author":{"gitId":"JayL33z"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"JayL33z"},"content":"    public String getDescriptionLite() {","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"JayL33z"},"content":"        return super.getDescription();","lastModifiedDate":"2022-03-26"},{"lineNumber":18,"author":{"gitId":"JayL33z"},"content":"    }","lastModifiedDate":"2022-03-26"},{"lineNumber":19,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":20,"author":{"gitId":"JayL33z"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"JayL33z"},"content":"    public String getDateTime() { return this.at; }","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"JayL33z"},"content":"}","lastModifiedDate":"2022-02-22"}],"authorContributionMap":{"JayL33z":23}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JayL33z"},"content":"public class Task {","lastModifiedDate":"2022-02-21"},{"lineNumber":2,"author":{"gitId":"JayL33z"},"content":"    protected String description; //protected can be accessed by child classes","lastModifiedDate":"2022-02-22"},{"lineNumber":3,"author":{"gitId":"JayL33z"},"content":"    protected boolean isDone;  //protected can be accessed by child classes","lastModifiedDate":"2022-02-22"},{"lineNumber":4,"author":{"gitId":"JayL33z"},"content":"    protected String identity; //use for easily identifying what type of Task is the object. (E, T and D)","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":6,"author":{"gitId":"JayL33z"},"content":"    public Task(String description) {","lastModifiedDate":"2022-02-21"},{"lineNumber":7,"author":{"gitId":"JayL33z"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-02-21"},{"lineNumber":8,"author":{"gitId":"JayL33z"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-02-21"},{"lineNumber":9,"author":{"gitId":"JayL33z"},"content":"    }","lastModifiedDate":"2022-02-21"},{"lineNumber":10,"author":{"gitId":"JayL33z"},"content":"    public void markDone() {","lastModifiedDate":"2022-02-21"},{"lineNumber":11,"author":{"gitId":"JayL33z"},"content":"        this.isDone \u003d true;} // modifier to mark","lastModifiedDate":"2022-02-21"},{"lineNumber":12,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":13,"author":{"gitId":"JayL33z"},"content":"    public void unmarkDone() {","lastModifiedDate":"2022-02-21"},{"lineNumber":14,"author":{"gitId":"JayL33z"},"content":"            this.isDone \u003d false;} //modifier to unmark","lastModifiedDate":"2022-02-21"},{"lineNumber":15,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":16,"author":{"gitId":"JayL33z"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-02-21"},{"lineNumber":17,"author":{"gitId":"JayL33z"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2022-02-21"},{"lineNumber":18,"author":{"gitId":"JayL33z"},"content":"    } // mark done task with X","lastModifiedDate":"2022-02-21"},{"lineNumber":19,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-02-21"},{"lineNumber":20,"author":{"gitId":"JayL33z"},"content":"    public String getIdentity() {","lastModifiedDate":"2022-03-26"},{"lineNumber":21,"author":{"gitId":"JayL33z"},"content":"        return identity;","lastModifiedDate":"2022-03-26"},{"lineNumber":22,"author":{"gitId":"JayL33z"},"content":"    } // return description","lastModifiedDate":"2022-03-26"},{"lineNumber":23,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":24,"author":{"gitId":"JayL33z"},"content":"    public String getDescription() {","lastModifiedDate":"2022-02-21"},{"lineNumber":25,"author":{"gitId":"JayL33z"},"content":"        return description;","lastModifiedDate":"2022-02-21"},{"lineNumber":26,"author":{"gitId":"JayL33z"},"content":"    } // return description","lastModifiedDate":"2022-02-21"},{"lineNumber":27,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":28,"author":{"gitId":"JayL33z"},"content":"    public String getDateTime() {return \"\"; } //return date only applicable for Deadline and Todo","lastModifiedDate":"2022-03-26"},{"lineNumber":29,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":30,"author":{"gitId":"JayL33z"},"content":"    public String getDescriptionLite() {return description;}","lastModifiedDate":"2022-03-26"},{"lineNumber":31,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":32,"author":{"gitId":"JayL33z"},"content":"}","lastModifiedDate":"2022-02-21"}],"authorContributionMap":{"JayL33z":32}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JayL33z"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-02-22"},{"lineNumber":2,"author":{"gitId":"JayL33z"},"content":"    ","lastModifiedDate":"2022-02-22"},{"lineNumber":3,"author":{"gitId":"JayL33z"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-02-22"},{"lineNumber":4,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"JayL33z"},"content":"        super(description); //call constructor of the Task superclass","lastModifiedDate":"2022-02-22"},{"lineNumber":6,"author":{"gitId":"JayL33z"},"content":"        identity \u003d \"T\";","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"JayL33z"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":9,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":10,"author":{"gitId":"JayL33z"},"content":"    @Override","lastModifiedDate":"2022-02-22"},{"lineNumber":11,"author":{"gitId":"JayL33z"},"content":"    public String getDescription() {","lastModifiedDate":"2022-02-22"},{"lineNumber":12,"author":{"gitId":"JayL33z"},"content":"        return \"[T]\" +\"[\"+ super.getStatusIcon() +\"] \"+ super.getDescription();","lastModifiedDate":"2022-02-22"},{"lineNumber":13,"author":{"gitId":"JayL33z"},"content":"    }","lastModifiedDate":"2022-02-22"},{"lineNumber":14,"author":{"gitId":"JayL33z"},"content":"","lastModifiedDate":"2022-02-22"},{"lineNumber":15,"author":{"gitId":"JayL33z"},"content":"    @Override","lastModifiedDate":"2022-03-26"},{"lineNumber":16,"author":{"gitId":"JayL33z"},"content":"    public String getDescriptionLite() { return super.getDescription();}","lastModifiedDate":"2022-03-26"},{"lineNumber":17,"author":{"gitId":"JayL33z"},"content":"}","lastModifiedDate":"2022-02-22"}],"authorContributionMap":{"JayL33z":17}},{"path":"src/main/java/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JayL33z"},"content":"T | 0 | read book","lastModifiedDate":"2022-03-26"},{"lineNumber":2,"author":{"gitId":"JayL33z"},"content":"D | 0 | return book | June 6th","lastModifiedDate":"2022-03-26"},{"lineNumber":3,"author":{"gitId":"JayL33z"},"content":"E | 0 | project meeting | Aug 6th 2-4pm","lastModifiedDate":"2022-03-26"},{"lineNumber":4,"author":{"gitId":"JayL33z"},"content":"T | 0 | prepare project materials","lastModifiedDate":"2022-03-26"},{"lineNumber":5,"author":{"gitId":"JayL33z"},"content":"D | 0 | finish presentation slide | August 10th","lastModifiedDate":"2022-03-26"},{"lineNumber":6,"author":{"gitId":"JayL33z"},"content":"E | 0 | book review | August 15th 3-5pm ","lastModifiedDate":"2022-03-26"},{"lineNumber":7,"author":{"gitId":"JayL33z"},"content":"T | 0 | buy toys","lastModifiedDate":"2022-03-26"},{"lineNumber":8,"author":{"gitId":"JayL33z"},"content":"D | 0 | return toys | Sept 3rd","lastModifiedDate":"2022-03-26"},{"lineNumber":9,"author":{"gitId":"JayL33z"},"content":"E | 1 | counter-terrorist conference | Oct 5th 4-6am","lastModifiedDate":"2022-03-26"}],"authorContributionMap":{"JayL33z":9}}]
